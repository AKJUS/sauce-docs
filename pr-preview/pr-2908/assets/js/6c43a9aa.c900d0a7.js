"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[83033],{8254:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={a:"a",code:"code",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Variable Name"}),(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_USERNAME"})}),(0,s.jsx)(t.td,{children:"required"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Your Sauce Labs username. You can get this from the header of app.saucelabs.com"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_ACCESS_KEY"})}),(0,s.jsx)(t.td,{children:"required"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Your Sauce Labs access key. You can get this from the header of app.saucelabs.com"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_REGION"})}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The region you'd like to run your Visual tests in. Defaults to ",(0,s.jsx)(t.code,{children:"us-west-1"})," if not supplied. Can be one of the following: ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"'eu-central-1'"}),", ",(0,s.jsx)(t.code,{children:"'us-west-1'"})," or ",(0,s.jsx)(t.code,{children:"'us-east-4'"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_BUILD_NAME"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The name you would like to appear in the Sauce Visual dashboard."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_BRANCH"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The branch name you would like to associate this build with. We recommend using your current VCS branch in CI."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_DEFAULT_BRANCH"})}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The main branch name you would like to associate this build with. Usually ",(0,s.jsx)(t.code,{children:"main"})," or ",(0,s.jsx)(t.code,{children:"master"})," or alternatively the branch name your current branch was derived from. ",(0,s.jsx)(t.a,{href:"/sauce-docs/pr-preview/pr-2908/visual-testing/workflows/ci",children:"Follow me to learn more"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_PROJECT"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The label / project you would like to associate this build with."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_BUILD_ID"})}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["For advanced users, a user-supplied SauceLabs Visual build ID. Can be used to create builds in advance using the GraphQL API. This can be used to parallelize tests with multiple browsers, shard, or more. ",(0,s.jsx)("br",{})," By default, this is not set and we create / finish a build during setup / teardown."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"SAUCE_VISUAL_CUSTOM_ID"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"For advanced users, a user-supplied custom ID to identify this build. Can be used in CI to identify / check / re-check the status of a single build. Usage suggestions: CI pipeline ID."})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},62443:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={admonition:"admonition",p:"p",...(0,i.R)(),...e.components};return(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"The maximum number of scrolls and stitches in a full page screenshot is 10."})})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},74488:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={a:"a",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["This document assumes an existing Python 3+ project. Alternatively, you can take a look to our ",(0,s.jsx)(t.a,{href:"#examples",children:"example repository"})," for quick-start projects."]}),"\n",(0,s.jsx)(t.p,{children:"Sauce Visual plugin for Python provides an interface for interacting with Sauce Labs Visual and a running Selenium session on Sauce."})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},32309:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,s.jsx)(t.p,{children:"Sauce Visual Binding allows to configure which kinds of changes should be effective on snapshot."})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},12758:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,s.jsx)(t.p,{children:"Sauce Visual Binding allows to configure which kinds of changes should be effective specific regions of the snapshot."})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},59697:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>r});var s=n(74848),i=n(28453);const r=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Sauce Visual allows selective diffing that permits to ignore changes from a certain kind (",(0,s.jsxs)(t.em,{children:["more information ",(0,s.jsx)(t.a,{href:"/visual-testing/selective-diffing/",children:"here"})]}),")."]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:["Selective diffing is only available with ",(0,s.jsx)(t.code,{children:"Balanced"})," diffing method ",(0,s.jsx)(t.strong,{children:"AND"})," with DOM capture enabled."]})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},97404:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>u,toc:()=>x});var s=n(74848),i=n(28453),r=n(8254),l=n(74488),a=n(62443),o=n(59697),c=(n(32309),n(12758));const d={sidebar_label:"Python (Robot Framework)"},h="Python (Robot Framework) Integration",u={id:"visual-testing/integrations/python-robot-framework",title:"Python (Robot Framework) Integration",description:"Introduction",source:"@site/docs/visual-testing/integrations/python-robot-framework.md",sourceDirName:"visual-testing/integrations",slug:"/visual-testing/integrations/python-robot-framework",permalink:"/sauce-docs/pr-preview/pr-2908/visual-testing/integrations/python-robot-framework",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/visual-testing/integrations/python-robot-framework.md",tags:[],version:"current",lastUpdatedBy:"Alex Plischke",lastUpdatedAt:1724775805e3,frontMatter:{sidebar_label:"Python (Robot Framework)"},sidebar:"docs",previous:{title:"Python",permalink:"/sauce-docs/pr-preview/pr-2908/visual-testing/integrations/python"},next:{title:"Sauce Visual CLI",permalink:"/sauce-docs/pr-preview/pr-2908/visual-testing/cli"}},p={},x=[{value:"Introduction",id:"introduction",level:2},...l.RM,{value:"Usage",id:"usage",level:2},{value:"Step 1 - Install the Visual Package",id:"step-1---install-the-visual-package",level:3},{value:"Step 2 - Create Your Setup and Teardown",id:"step-2---create-your-setup-and-teardown",level:3},{value:"Step 3 - Add Tests",id:"step-3---add-tests",level:3},{value:"Step 4 - Configure your Sauce Labs credentials",id:"step-4---configure-your-sauce-labs-credentials",level:3},{value:"Step 5 - Run the tests",id:"step-5---run-the-tests",level:3},{value:"Visual Snapshot Options &amp; Examples",id:"visual-snapshot-options--examples",level:2},{value:"Full Page Screenshots",id:"full-page-screenshots",level:3},...a.RM,{value:"DOM Capture",id:"dom-capture",level:3},{value:"Clip to an Element",id:"clip-to-an-element",level:3},{value:"Ignore Regions",id:"ignore-regions",level:3},{value:"Selective Diffing",id:"selective-diffing",level:3},...o.RM,{value:"Area-specific configuration",id:"area-specific-configuration",level:4},...c.RM,{value:"Environment variables",id:"environment-variables",level:2},...r.RM,{value:"Examples",id:"examples",level:2}];function m(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"python-robot-framework-integration",children:"Python (Robot Framework) Integration"}),"\n",(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(l.Ay,{}),"\n",(0,s.jsxs)(t.p,{children:["This integration relies on the ",(0,s.jsx)(t.a,{href:"https://github.com/robotframework/SeleniumLibrary",children:"SeleniumLibrary"})," package provided by Robot Framework for automatic detection of the current session. View our ",(0,s.jsx)(t.a,{href:"https://github.com/saucelabs/visual-examples/tree/main/python/robot-framework/",children:"Robot Framework example on GitHub"})," for a fully-functional example for reference."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.h3,{id:"step-1---install-the-visual-package",children:"Step 1 - Install the Visual Package"}),"\n",(0,s.jsxs)(t.p,{children:["Add the Sauce Visual package and optionally add it to your ",(0,s.jsx)(t.code,{children:"requirements"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"pip install saucelabs_visual\n"})}),"\n",(0,s.jsx)(t.h3,{id:"step-2---create-your-setup-and-teardown",children:"Step 2 - Create Your Setup and Teardown"}),"\n",(0,s.jsxs)(t.p,{children:["Create top-level (in a parent folder that includes no test cases) setup and teardowns with the ",(0,s.jsx)(t.code,{children:"Create Visual Build"})," and ",(0,s.jsx)(t.code,{children:"Finish Visual Build"})," keywords, respectively. All of your tests should be nested in directories under this to allow it to act like a global setup / teardown."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"<parent_dir>/__init__.robot"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"*** Settings ***\n# This can also be imported in a robot.resource file and referenced here instead if you prefer.\n# See our example repo for more details.\nLibrary    saucelabs_visual.frameworks.robot.SauceLabsVisual\n\n# Supply a name to recognize your build in the Sauce Labs Visual dashboard\nSuite Setup    Create Visual Build    name=Sauce Labs Visual -- Robot Framework\nSuite Teardown    Finish Visual Build\n"})}),"\n",(0,s.jsx)(t.h3,{id:"step-3---add-tests",children:"Step 3 - Add Tests"}),"\n",(0,s.jsxs)(t.p,{children:["Add visual tests in your test / suite files using the ",(0,s.jsx)(t.code,{children:"Visual Snapshot"})," keyword followed by the name for your snapshot"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"*** Settings ***\n# We recommend putting this in your resource.robot file instead, but have omitted that here to keep the example short.\nLibrary           saucelabs_visual.frameworks.robot.SauceLabsVisual\n\nInvalid Login\n    # ... Opening a selenium session, and your other assertions\n    Visual Snapshot    My Snapshot Name\n    # ...\n"})}),"\n",(0,s.jsx)(t.h3,{id:"step-4---configure-your-sauce-labs-credentials",children:"Step 4 - Configure your Sauce Labs credentials"}),"\n",(0,s.jsxs)(t.p,{children:["Sauce Visual relies on environment variables for authentications.",(0,s.jsx)("br",{}),"\nBoth ",(0,s.jsx)(t.code,{children:"SAUCE_USERNAME"})," and ",(0,s.jsx)(t.code,{children:"SAUCE_ACCESS_KEY"})," need to be set prior starting your Python tests."]}),"\n",(0,s.jsxs)(t.p,{children:["Username and Access Key can be retrieved from ",(0,s.jsx)(t.a,{href:"https://app.saucelabs.com/user-settings",children:"https://app.saucelabs.com/user-settings"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"export SAUCE_USERNAME=__YOUR_SAUCE_USER_NAME__\nexport SAUCE_ACCESS_KEY=__YOUR_SAUCE_ACCESS_KEY__\n"})}),"\n",(0,s.jsx)(t.h3,{id:"step-5---run-the-tests",children:"Step 5 - Run the tests"}),"\n",(0,s.jsxs)(t.p,{children:["Upon executing your tests for the first time under this step, a visual baseline is automatically created in our system. This baseline serves as the standard for all subsequent tests. As new tests are run, they are compared to this original baseline, with any deviations highlighted to signal visual changes. These comparisons are integral for detecting any unintended visual modifications early in your development cycle. All test builds, including the initial baseline and subsequent runs, can be monitored and managed through the Sauce Labs platform at ",(0,s.jsx)(t.a,{href:"https://app.saucelabs.com/visual/builds",children:"Sauce Visual Builds"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Remember, the baseline is established during the initial run, and any subsequent visual differences detected will be marked for review."}),"\n",(0,s.jsx)(t.h2,{id:"visual-snapshot-options--examples",children:"Visual Snapshot Options & Examples"}),"\n",(0,s.jsx)(t.h3,{id:"full-page-screenshots",children:"Full Page Screenshots"}),"\n",(0,s.jsxs)(t.p,{children:["By default, only the current viewport is capture when taking a screenshot. Full page screenshots can be enabled by using the ",(0,s.jsx)(t.code,{children:"full_page_config"})," named param with a visual snapshot. By either passing ",(0,s.jsx)(t.code,{children:"True"}),", or a configuration object if you wish to customize the behavior we'll scroll and stitch together multiple screenshots until the full document has been captured."]}),"\n",(0,s.jsx)(t.p,{children:"You can customize the behavior by using the following options:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Example"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"delay_after_scroll_ms"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"0"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"300"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Delay in ms after scrolling and before taking screenshots. The default value is 0. We recommend using this option for lazy loading content."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"disable_css_animation"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"True"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"False"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Disable CSS animations and the input caret in the app. The default value is true."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"hide_after_first_scroll"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"[]"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"['.your-class-name','#an-id-example','div.more-specific-class']"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One or more CSS selectors that we should remove from the page after the first scroll. Useful for hiding fixed elements such as headers, cookie banners, etc."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"hide_scroll_bars"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"True"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"False"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Hide all scrollbars in the app. The default value is true."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"scroll_limit"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"10"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"5"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Limit the number of screenshots taken for scrolling and stitching. The default value is 10. The value needs to be between 1 and 10."})]})]})]}),"\n",(0,s.jsx)(a.Ay,{}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"Test Name\n    # Enabling with the default behavior\n    Visual Snapshot    My Snapshot Name    full_page_config=True\n    # Customizing the full page snapshot behavior\n    Visual Snapshot    My Snapshot Name    full_page_config={\"hide_after_first_scroll\": ['.fixed-header','.cookie-banner']}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"dom-capture",children:"DOM Capture"}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"capture_dom"})," named param with a value of ",(0,s.jsx)(t.code,{children:"True"})," to enable DOM capture during a snapshot."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"Test Name\n    Visual Snapshot    My Snapshot Name    capture_dom=True\n"})}),"\n",(0,s.jsx)(t.h3,{id:"clip-to-an-element",children:"Clip to an Element"}),"\n",(0,s.jsxs)(t.p,{children:["If you'd like to test a specific component or area of a page you can use the ",(0,s.jsx)(t.code,{children:"clip_selector"})," named param in combination with a CSS selector to clip the screenshot and DOM comparison. When enabled, we'll crop the screenshot to the coordinates of the element and constrain our DOM comparison to that area. We accept any ",(0,s.jsx)(t.code,{children:"document.querySelector"})," compatible string / CSS selector as the value."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"Test Name\n    # Using a class. Note, omit any quotes around the value.\n    Visual Snapshot    My Snapshot Name    clip_selector=.some-class-name\n"})}),"\n",(0,s.jsx)(t.h3,{id:"ignore-regions",children:"Ignore Regions"}),"\n",(0,s.jsxs)(t.p,{children:["You can ignore one or more areas on the page by using the ",(0,s.jsx)(t.code,{children:"ignore_regions"})," named param. Ignore regions in Robot accepts an array of full region definitions (screen coordinates) in addition to SeleniumLibrary selectors, and WebElement objects. See below for a few examples."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:"Test Name\n    # Multiple options can be passed into the array and can contain a mix of any of the below options. However, when using objects you'll need to take special care when passing lists so the value is an actual object. See the WebElement example at the bottom for an example.\n\n    # Ignore one or more areas of the page using a coordinates object.\n    Visual Snapshot    My Snapshot Name    ignore_regions=[{\"x\": 200, \"y\": 200, \"width\": 200, \"height\": 200}]\n\n    # Ignore one or more areas of the page using a SeleniumLibrary selector.\n    # See Locating Elements in the SeleniumLibrary docs for more information:\n    # https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Locating%20elements\n    Visual Snapshot    My Snapshot Name    ignore_regions=['id:example-id', 'class:example-class-name', 'css:div#example']\n\n    # Ignore one or more areas of the page using WebElement objects from SeleniumLibrary\n    # Get a WebElement object and store it in a variable\n    ${button} =     Get Webelement    class:btn_inventory\n    ${images} =     Get Webelement    class:inventory_item_img\n    # Merge multiple / single elements into a list. If you want to use `Get Webelements` to ignore multiple elements on a page at once you can use Robot's `Collections` library to merge those lists into a single one to pass here.\n    ${elements} =    Create List    ${button}    ${images}\n    Visual Snapshot    Valid Login (Simple)    full_page_config=True    capture_dom=True    ignore_elements=${elements}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"selective-diffing",children:"Selective Diffing"}),"\n",(0,s.jsx)(o.Ay,{}),"\n",(0,s.jsx)(t.h4,{id:"area-specific-configuration",children:"Area-specific configuration"}),"\n",(0,s.jsx)(c.Ay,{}),"\n",(0,s.jsx)(t.p,{children:"Example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-robot",children:'    # Capture snapshot with selective regions\n    ${username_element}     Get Webelements     id:user-name\n    ${password_element}     Get Webelements     id:password\n    # Ignore all changes on ${username_element}\n    ${ignore_username} =    Visual Ignore Element       ${username_element}     diffing_options={}\n    # Only checks for style changes on ${password_element}\n    ${ignore_password} =    Visual Ignore Element       ${password_element}     diffing_options={"style":True}\n    ${ignore_regions} =     Create List     ${ignore_username}      ${ignore_password}\n    Visual Snapshot     Login Page     capture_dom=True        ignore_regions=${ignore_regions}        diffing_method=BALANCED\n\n'})}),"\n",(0,s.jsx)(t.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,s.jsx)(t.p,{children:"Below are the environment variables available in the Sauce Visual Python plugin. Keep in mind that the variables defined or overridden in Robot have precedence over these."}),"\n",(0,s.jsx)(r.Ay,{}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t.p,{children:["Example projects are available ",(0,s.jsx)(t.a,{href:"https://github.com/saucelabs/visual-examples/blob/main/python/robot-framework",children:"here"}),"."]})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);