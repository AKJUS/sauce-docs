"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[98449],{56927:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var s=t(74848),i=t(28453),a=t(86025);const o={id:"change-details",title:"Viewing Change Details for Component Tests",sidebar_label:"Viewing Change Details"},c=void 0,l={id:"visual/component-testing/workflow/change-details",title:"Viewing Change Details for Component Tests",description:"Change Categories",source:"@site/docs/visual/component-testing/workflow/change-details.md",sourceDirName:"visual/component-testing/workflow",slug:"/visual/component-testing/workflow/change-details",permalink:"/sauce-docs/pr-preview/pr-2897/visual/component-testing/workflow/change-details",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/visual/component-testing/workflow/change-details.md",tags:[],version:"current",lastUpdatedBy:"Jame Tacker",lastUpdatedAt:1670984e6,frontMatter:{id:"change-details",title:"Viewing Change Details for Component Tests",sidebar_label:"Viewing Change Details"}},r={},h=[{value:"Change Categories",id:"change-categories",level:2},{value:"Change List",id:"change-list",level:2}];function d(e){const n={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"change-categories",children:"Change Categories"}),"\n",(0,s.jsx)(n.p,{children:"Changed UI states will include highlights of visual changes directly overlayed on the screenshots."}),"\n",(0,s.jsx)(n.p,{children:"Screener automatically organizes these changes into four categories:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structure"}),": structural changes are when new visual items are added or old items are removed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Layout"}),": layout changes are when visual items change position or dimension."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Style"}),": style changes are when css styling gets updated (e.g., font size, color)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content"}),": content changes are when text or graphics get updated."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"change-list",children:"Change List"}),"\n",(0,s.jsx)(n.p,{children:"Each change in Screener has additional details that can be viewed to help with debugging. For example:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"View the specific CSS property that changed."}),"\n",(0,s.jsx)(n.li,{children:"View a text diff of content changes."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"These details can be viewed in the Change List, which can be opened by clicking on a change highlight:"}),"\n",(0,s.jsx)("img",{src:(0,a.A)("img/visual/e2e-change-detail-flow.gif"),alt:"Change Detail Flow"})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);