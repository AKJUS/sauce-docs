"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[79389],{24423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>a,metadata:()=>u,toc:()=>h});var s=t(74848),i=t(28453),r=t(86025),o=t(11470),l=t(19365);const a={id:"proxy-tunnels",title:"Using Sauce Connect Proxy Tunnels",sidebar_label:"Using Tunnels"},c=void 0,u={id:"secure-connections/sauce-connect/proxy-tunnels",title:"Using Sauce Connect Proxy Tunnels",description:"What You'll Need",source:"@site/docs/secure-connections/sauce-connect/proxy-tunnels.md",sourceDirName:"secure-connections/sauce-connect",slug:"/secure-connections/sauce-connect/proxy-tunnels",permalink:"/sauce-docs/pr-preview/pr-2905/secure-connections/sauce-connect/proxy-tunnels",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/secure-connections/sauce-connect/proxy-tunnels.md",tags:[],version:"current",lastUpdatedBy:"Logan Graham",lastUpdatedAt:1712351123e3,frontMatter:{id:"proxy-tunnels",title:"Using Sauce Connect Proxy Tunnels",sidebar_label:"Using Tunnels"},sidebar:"docs",previous:{title:"Readiness Checks",permalink:"/sauce-docs/pr-preview/pr-2905/secure-connections/sauce-connect/setup-configuration/readiness-checks"},next:{title:"Security and Authentication",permalink:"/sauce-docs/pr-preview/pr-2905/secure-connections/sauce-connect/security-authentication"}},d={},h=[{value:"What You&#39;ll Need",id:"what-youll-need",level:2},{value:"Best Practice for Using Tunnels",id:"best-practice-for-using-tunnels",level:2},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Starting Tunnels",id:"starting-tunnels",level:2},{value:"Monitoring Tunnels",id:"monitoring-tunnels",level:2},{value:"Verifying Tunnel Success",id:"verifying-tunnel-success",level:3},{value:"Command-Line Interface",id:"command-line-interface",level:4},{value:"Log File",id:"log-file",level:4},{value:"Sauce Connect Proxy Status Server",id:"sauce-connect-proxy-status-server",level:3},{value:"Configuring Status Server",id:"configuring-status-server",level:4},{value:"Status Server Endpoints",id:"status-server-endpoints",level:4},{value:"Runtime Info",id:"runtime-info",level:4},{value:"Definitions",id:"definitions",level:4},{value:"Metrics Endpoint",id:"metrics-endpoint",level:4},{value:"Tunnels Page",id:"tunnels-page",level:4},{value:"CI/CD System",id:"cicd-system",level:4},{value:"Stopping Tunnels",id:"stopping-tunnels",level:2},{value:"From the Command Line",id:"from-the-command-line",level:3},{value:"To Stop a Single Tunnel: <code>Ctrl+C</code>",id:"to-stop-a-single-tunnel-ctrlc",level:4},{value:"To Stop a Single Tunnel: sending an interrupt signal",id:"to-stop-a-single-tunnel-sending-an-interrupt-signal",level:4},{value:"To Stop Multiple Tunnels",id:"to-stop-multiple-tunnels",level:4},{value:"From the Tunnels Page",id:"from-the-tunnels-page",level:3},{value:"To Stop a Single Tunnel",id:"to-stop-a-single-tunnel",level:4},{value:"To Stop Multiple Tunnels",id:"to-stop-multiple-tunnels-1",level:4},{value:"Tunnel Types",id:"tunnel-types",level:2},{value:"Ephemeral (Short-Lived) Tunnels",id:"ephemeral-short-lived-tunnels",level:3},{value:"Starting an Ephemeral Tunnel",id:"starting-an-ephemeral-tunnel",level:4},{value:"Starting an Ephemeral Tunnel From a Continuous Integration (CI) Build Server",id:"starting-an-ephemeral-tunnel-from-a-continuous-integration-ci-build-server",level:4},{value:"Long-Running Tunnels",id:"long-running-tunnels",level:3},{value:"Launching High Availability, Long-Running Tunnels via Command Line",id:"launching-high-availability-long-running-tunnels-via-command-line",level:4},{value:"Keeping Your Long-Running Tunnels Fresh",id:"keeping-your-long-running-tunnels-fresh",level:4},{value:"Combining Ephemeral and Long-Running Tunnels",id:"combining-ephemeral-and-long-running-tunnels",level:3},{value:"Scaling Sauce Connect",id:"scaling-sauce-connect",level:3},{value:"Improving Sauce Connect Proxy Performance",id:"improving-sauce-connect-proxy-performance",level:2},{value:"Tuning Sauce Connect Proxy Traffic",id:"tuning-sauce-connect-proxy-traffic",level:3},{value:"Tunnel Domains",id:"tunnel-domains",level:4},{value:"Direct Domains",id:"direct-domains",level:4},{value:"Fast-fail Domains",id:"fast-fail-domains",level:4},{value:"Configuring Tunnel or Direct Domains",id:"configuring-tunnel-or-direct-domains",level:4},{value:"Configuring Domain Regular Expressions (--fast-fail-regexps)",id:"configuring-domain-regular-expressions---fast-fail-regexps",level:4},{value:"Sauce Connect Proxy Host Performance Optimization",id:"sauce-connect-proxy-host-performance-optimization",level:3},{value:"Service Management Tools",id:"service-management-tools",level:2},{value:"Running systemd for Linux",id:"running-systemd-for-linux",level:3},{value:"Running NSSM for Windows",id:"running-nssm-for-windows",level:3},{value:"Using the Selenium Relay",id:"using-the-selenium-relay",level:2},{value:"Setting Up Your Tests to Use the Selenium Relay",id:"setting-up-your-tests-to-use-the-selenium-relay",level:3},{value:"Recommended: Connecting Directly to Sauce Labs Over HTTPS",id:"recommended-connecting-directly-to-sauce-labs-over-https",level:3},{value:"Routing Protractor Traffic through Sauce Connect Proxy",id:"routing-protractor-traffic-through-sauce-connect-proxy",level:3}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"what-youll-need",children:"What You'll Need"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you haven't already, make sure you can access the website or mobile app that you'll be testing from the Sauce Connect Proxy host.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We recommend using ",(0,s.jsx)(n.a,{href:"https://curl.se/docs/",children:"cURL"})," or an equivalent tool."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Check to see if you have any proxies that are required to access the public Internet."}),"\n",(0,s.jsxs)(n.li,{children:["Review the ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/basic-setup",children:"Basic Sauce Connect Proxy Setup"})," for instructions on how to set your Sauce Labs username and access key and launch a tunnel."]}),"\n",(0,s.jsxs)(n.li,{children:["If you're using Jenkins, or GitHub Actions, be sure to review ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/ci-cd-integration",children:"Sauce Connect Proxy CI/CD Integration"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practice-for-using-tunnels",children:"Best Practice for Using Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"We recommend using a single Sauce Connect Proxy tunnel or tunnel pool for each test suite or build, and tearing it down at the end of your test. Your test automation framework should launch Sauce Connect Proxy before the test suite is triggered and shut it down when the suite finishes."}),"\n",(0,s.jsxs)(n.p,{children:["If you're using a continuous integration platform like Jenkins, you can use the Sauce OnDemand plugin to launch and tear down your Sauce Connect Proxy instance. For more information, see ",(0,s.jsx)(n.a,{href:"/basics/integrations-overview/",children:"Setting Up CI Platform Integrations with Sauce Plugins"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsxs)(n.p,{children:["If your Sauce Connect client is running on a multi-user system, we recommend using a ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/yaml-config/",children:"YAML config file"})," or ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/environment-variables/",children:"setting environment variables"})," to hide sensitive information like your password (",(0,s.jsx)(n.code,{children:"--api-key"}),") and proxy credentials. This way, they won't be visible in the list of running processes."]}),"\n",(0,s.jsx)(n.h2,{id:"starting-tunnels",children:"Starting Tunnels"}),"\n",(0,s.jsxs)(n.p,{children:["Every Sauce Connect Proxy tunnel spins up a fresh virtual machine (VM) that is used only for your tests. Once the tunnel is closed, VMs are destroyed. For information about user roles and permissions, see ",(0,s.jsx)(n.a,{href:"/basics/acct-team-mgmt/managing-user-info",children:"User Roles"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Tunnels must be started from the command line of the machine where the Sauce Connect Proxy client is installed. As a shortcut, you can copy the run command (see ",(0,s.jsx)(n.strong,{children:"Tunnels"})," page > Step 3) and paste it into your CLI. Optionally, you can add ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/",children:"tunnel configuration parameters"}),". See ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/quickstart/",children:"Quickstart"})," and ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/basic-setup",children:"Sauce Connect Proxy Basic Setup"})," for instructions."]}),"\n",(0,s.jsx)(n.h2,{id:"monitoring-tunnels",children:"Monitoring Tunnels"}),"\n",(0,s.jsxs)(n.p,{children:["You can manage and monitor all Sauce Connect Proxy tunnel activity from the Sauce Labs ",(0,s.jsx)(n.a,{href:"https://app.saucelabs.com/tunnels",children:(0,s.jsx)(n.strong,{children:"Tunnels"})})," page, which displays useful information, such as the number of active tunnels, tunnel status, and specific attributes for each tunnel. You can also check the health of an individual tunnel by running a test on it."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Column"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The icon shows whether the tunnel is a Sauce Connect Proxy, or an Sauce IPSec Proxy."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"State"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The icon shows whether the tunnel is running or stopped."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Tunnel Name"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The name of the tunnel. This is the ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-name",children:(0,s.jsx)(n.code,{children:"--tunnel-name"})})," used when starting the Sauce Connect tunnel."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Client Hostname"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of the machine where the Sauce Connect Proxy client is running."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Owner"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of the account that is running the tunnel."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sharing"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Indicates whether or not the tunnel is shared."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Duration"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The amount of time the tunnel has been running."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"verifying-tunnel-success",children:"Verifying Tunnel Success"}),"\n",(0,s.jsx)(n.p,{children:"To verify that your tunnel is up and running, you can check the following:"}),"\n",(0,s.jsx)(n.h4,{id:"command-line-interface",children:"Command-Line Interface"}),"\n",(0,s.jsx)(n.p,{children:"If successful, you'll see a confirmation response like the one below, indicating that you can start your tests."}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsxs)("summary",{children:[(0,s.jsx)("strong",{children:"Click here to expand"}),(0,s.jsx)("br",{})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"Sauce Connect Proxy opens a secure connection between Sauce Labs and a locally hosted application.\n\n  Find more information at: https://docs.saucelabs.com/dev/cli/sauce-connect-proxy\n\nSauce Connect 4.9.1, build 5587 55cc68f\n\nINFO: Adding tunnel to pool 'us-west-mac', now running 2 instances.\n\nSauce Connect runtime information:\n- Name: YOUR-TUNNEL-NAME\n- PID: 68102\n- PID file: /tmp/sc_client-YOUR-TUNNEL-NAME.pid\n- Log file: /var/folders/xj/9gxlps1566917q90pdb707cm0000gn/T/sc-YOUR-TUNNEL-NAME.log\n- SCProxy Port: 61602\n- Status Port: 4445\n- Selenium listener: None\n- External proxy for REST API: None\n- Tunnel proxy: None\n- Region: us-west\n\nPlease wait for 'you may start your tests' to start your tests: \\\nSecure remote tunnel provisioned. Tunnel ID: 09313680b3ff433ebbb6bca5cb87919c\n\nSauce Connect is up, you may start your tests.\n"})})]}),"\n",(0,s.jsx)(n.h4,{id:"log-file",children:"Log File"}),"\n",(0,s.jsxs)(n.p,{children:["Once you've started using Sauce Connect Proxy, a log file will appear in your computer's directory. The name of the file will match what you named your tunnel using ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-identifier",children:(0,s.jsx)(n.code,{children:"--tunnel-identifier"})}),". For example, if you named it ",(0,s.jsx)(n.code,{children:"saucebot"}),", the log file name would be ",(0,s.jsx)(n.strong,{children:"sc-saucebot.log"}),". If you did not name your tunnel, the file name will be ",(0,s.jsx)(n.strong,{children:"sc.log"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The location of the log file will vary, depending on your operating system. For Mac and Linux, the log will use a tmp folder. For Windows, it'll use the current working directory."}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"OS"}),(0,s.jsx)("td",{children:"Log Directory"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Mac"}),(0,s.jsxs)("td",{children:["(DD Month) (Time)\nLog file:\n",(0,s.jsx)("code",{children:"/var/folders/72/tjnr5_fs4fvcb3csfjx4sw200000gn/T/sc-TUNNEL_NAME.log"})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Linux"}),(0,s.jsxs)("td",{children:["(DD Month) (Time)\nLog file:\n",(0,s.jsx)("code",{children:"/tmp/sc-TUNNEL_NAME.log"})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Windows"}),(0,s.jsxs)("td",{children:["(DD Month) (Time)\nLog file:\n",(0,s.jsx)("code",{children:"C:\\Users\\sauce_username\\Downloads\\sc-4.9.2-win32\\sc-TUNNEL_NAME.log"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"sauce-connect-proxy-status-server",children:"Sauce Connect Proxy Status Server"}),"\n",(0,s.jsx)(n.p,{children:'Sauce Connect Proxy has a "status server" feature that you can use to monitor the connection status. You can access JSON-formatted status information over an HTTP connection to a local server.\nThe main purpose of the "status server" is providing Kubernetes and CI/CD support.'}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Available only for versions 4.8.x and higher."})}),"\n",(0,s.jsx)(n.h4,{id:"configuring-status-server",children:"Configuring Status Server"}),"\n",(0,s.jsxs)(n.p,{children:["The status server is disabled by default. You can enable it by specifying the interface and port with the ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--status-address",children:(0,s.jsx)(n.code,{children:"--status-address"})})," command."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"--status-address :8080 # listens on all the interfaces' port 8080\n--status-address 1.2.3.4:80 # listens on 1.2.3.4 port 80\n"})}),"\n",(0,s.jsx)(n.h4,{id:"status-server-endpoints",children:"Status Server Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/readiness"})," returns 200 response code when Sauce Connect Proxy is ready, 503 otherwise"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/liveness"})," returns 200 response code when Sauce Connect Proxy is running"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/api/v1/status"})," returns a JSON-formatted response containing the Sauce Connect Proxy runtime information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/debug/vars"})," returns a JSON-formatted response containing the Sauce Connect Proxy metrics"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"runtime-info",children:"Runtime Info"}),"\n",(0,s.jsxs)(n.p,{children:["Status server exposes Sauce Connect Proxy runtime information at ",(0,s.jsx)(n.code,{children:"/api/v1/status"}),".\nFor example, after starting the client with ",(0,s.jsx)(n.code,{children:"--status-address localhost:8080"}),", use the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'$ curl -s localhost:8080/api/v1/status | jq .\n{\n  "firstConnectedTime": 1651629711,\n  "tunnelID": "780b2e455a9f46248f3c3eb6aec349f5",\n  "tunnelName": "my-tunnel",\n  "tunnelServer": "maki111.miso.saucelabs.com",\n  "lastStatusChange": 1651629710,\n  "reconnectCount": 0,\n  "tunnelStatus": "connected"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"definitions",children:"Definitions"}),"\n",(0,s.jsx)(n.p,{children:"Below is a list of runtime information values and definitions for the Sauce Connect Proxy."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Definition"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"firstConnectedTime"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A UNIX timestamp indicating the time the connection was established for the first time."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"tunnelID"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A tunnel unique ID."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"tunnelName"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["A tunnel name. See ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-identifier",children:(0,s.jsx)(n.code,{children:"--tunnel-identifier"})}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"tunnelServer"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A tunnel server name."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"tunnelStatus"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:'A tunnel could be "connected" or "disconnected". "Disconnected" status indicated that Sauce Connect Proxy is not ready.'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"lastStatusChange"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A UNIX timestamp indicating the time of the last connectivity change from the client."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"reconnectCount"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Number of times the connection to the Sauce Connect Proxy back end had to be re-established because of the timeout."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"metrics-endpoint",children:"Metrics Endpoint"}),"\n",(0,s.jsxs)(n.p,{children:["Additionally, the status server exposes Sauce Connect Proxy metrics information at ",(0,s.jsx)(n.code,{children:"/debug/vars"}),".\nThis endpoint path is backward-compatible with the deprecated ",(0,s.jsx)(n.code,{children:"--metrics-address"})," that existed in the Sauce Connect Proxy version prior to 4.8.0, it is being replaced by ",(0,s.jsx)(n.code,{children:"/api/v1/status"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The endpoint will be removed in the future Sauce Connect Proxy versions."})}),"\n",(0,s.jsxs)(n.p,{children:["For example, after starting the client with ",(0,s.jsx)(n.code,{children:"--status-address :8080"}),", use the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'$ curl -s localhost:8080/debug/vars | jq .\n{\n  "cmdline": ["sc", "-c", "/path/to/sc.yml", "--status-address", ":8080"],\n  "kgp": {\n    "Connected": true,\n    "LastStatusChange": 1651701567,\n    "ReconnectCount": 0\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"tunnels-page",children:"Tunnels Page"}),"\n",(0,s.jsxs)(n.p,{children:["Look for the ",(0,s.jsx)(n.strong,{children:"Active Tunnel"})," confirmation.",(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:(0,r.A)("img/sauce-connect/tunnelsuccess-ui.png"),alt:"Sauce Connect Tunnel Success",width:"500"})]}),"\n",(0,s.jsx)(n.h4,{id:"cicd-system",children:"CI/CD System"}),"\n",(0,s.jsxs)(n.p,{children:["If you're starting ephemeral tunnels from a CI/CD system, there are multiple ways to automatically check for ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/readiness-checks/#cicd-testing",children:"tunnel readiness"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"stopping-tunnels",children:"Stopping Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"There are several ways to stop Sauce Connect Proxy tunnels:"}),"\n",(0,s.jsx)(n.h3,{id:"from-the-command-line",children:"From the Command Line"}),"\n",(0,s.jsxs)(n.h4,{id:"to-stop-a-single-tunnel-ctrlc",children:["To Stop a Single Tunnel: ",(0,s.jsx)(n.code,{children:"Ctrl+C"})]}),"\n",(0,s.jsxs)(n.p,{children:["Enter ",(0,s.jsx)(n.code,{children:"Ctrl+C"})," to terminate your tunnel. A call will be made from Sauce Connect to the REST API with instructions to terminate the Tunnel VM. Sauce Connect will continue to poll the REST API until the Tunnel VM has been halted and deleted."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"^C\nStopping client\nWill wait for up to 300s for any active jobs using this tunnel to finish.\nNote: Press CTRL-C again to shut down immediately.\nNote: If you do this, tests that are still running will fail.\nWaiting for the connection to terminate...\nConnection closed (8).\nGoodbye.\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If you attempt to terminate a Sauce Connect Proxy tunnel that is running a test with ",(0,s.jsx)(n.code,{children:"ctrl-c"}),", you will see a message indicating that Sauce Connect Proxy will not terminate until tests are completed. To proceed with terminating Sauce Connect Proxy before the test finishes, enter ",(0,s.jsx)(n.code,{children:"ctrl-c"})," again to force it to quit."]})}),"\n",(0,s.jsx)(n.h4,{id:"to-stop-a-single-tunnel-sending-an-interrupt-signal",children:"To Stop a Single Tunnel: sending an interrupt signal"}),"\n",(0,s.jsxs)(n.p,{children:["Another way to stop an individual tunnel via command line is to use the ",(0,s.jsx)(n.code,{children:"kill"})," command to send an interrupt signal to the running ",(0,s.jsx)(n.code,{children:"Process ID"})," (pid). The ",(0,s.jsx)(n.code,{children:"kill"})," command sends various signals:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kill"})," or ",(0,s.jsx)(n.code,{children:"kill -15"})," sends a ",(0,s.jsx)(n.code,{children:"SIGTERM"})," signal, which interrupts the program for a graceful shutdown. This is what we'll use in the below example."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kill -9"})," sends a kill signal (SIGKILL), which forces the program to shut down. It's not recommended."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Start a Sauce Connect Proxy tunnel ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/quickstart",children:"per standard procedure"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Fetch and save the process IDs for later use."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ ps aux | grep bin/sc\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected Response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$SAUCE_USERNAME   38312   0.1  0.1  4461780  20084 s000  S+    2:58PM   0:00.33 sc-<VERSION>-<PLATFORM>/bin/sc\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Send a ",(0,s.jsx)(n.code,{children:"SIGTERM"})," signal to each ",(0,s.jsx)(n.code,{children:"Process ID"})," (",(0,s.jsx)(n.code,{children:"pid"}),"):"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ kill 38312\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Windows Users",type:"note",children:[(0,s.jsxs)(n.p,{children:["Windows does not have signals the same way as Linux, Unix, and macOS. Instead, ",(0,s.jsx)(n.code,{children:"taskkill"})," can be used to immediately disrupt the process, similar to sending a ",(0,s.jsx)(n.code,{children:"SIGKILL"})," signal:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"taskkill /pid 1234\n"})})]}),"\n",(0,s.jsx)(n.h4,{id:"to-stop-multiple-tunnels",children:"To Stop Multiple Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"Before you attempt to stop/teardown all your running tunnels, please understand the following workflow:"}),"\n",(0,s.jsx)(n.p,{children:"Here is an example using Linux commands:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ps aux | grep sc"}),": Lists matching process(es)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"| grep -v grep"}),": Filters out the grep process itself."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"| awk '{print $2}'"}),": Grabs the ",(0,s.jsx)(n.code,{children:"pid"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"| xargs kill"}),": Passes it to the ",(0,s.jsx)(n.code,{children:"kill"})," command."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"xargs kill -9"})," will immediately disrupt all jobs currently running through that tunnel. If you wish to interrupt the program in order to gracefully shutdown the tunnels use the ",(0,s.jsx)(n.code,{children:"xargs kill"})," signal instead."]}),(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["We recommend first trying this command without ",(0,s.jsx)(n.code,{children:"xargs kill"})," to ensure you don't unnecessarily delete adjacent running processes."]})}),(0,s.jsxs)(n.p,{children:["For more information about acceptable signals and parameters, see the ",(0,s.jsx)(n.a,{href:"http://linuxcommand.org/lc3_man_pages/kill1.html",children:"Linux kill command manual"}),"."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="Example command for stopping all running proxy tunnels"',children:"$ ps aux | grep sc | grep -v grep | awk  '{print $2}' | xargs kill\n"})}),"\n",(0,s.jsx)(n.h3,{id:"from-the-tunnels-page",children:"From the Tunnels Page"}),"\n",(0,s.jsx)(n.h4,{id:"to-stop-a-single-tunnel",children:"To Stop a Single Tunnel"}),"\n",(0,s.jsxs)(n.p,{children:["From the ",(0,s.jsx)(n.strong,{children:"Tunnels"})," page, click the ",(0,s.jsx)(n.strong,{children:"Stop"})," icon next to your tunnel.",(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:(0,r.A)("img/sauce-connect/tunnelstop-ui.png"),alt:"Sauce Connect Tunnel Stop",width:"800"})]}),"\n",(0,s.jsx)(n.h4,{id:"to-stop-multiple-tunnels-1",children:"To Stop Multiple Tunnels"}),"\n",(0,s.jsxs)(n.p,{children:["From the ",(0,s.jsx)(n.strong,{children:"Tunnels"})," page, click ",(0,s.jsx)(n.strong,{children:"Stop My Tunnels"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"tunnel-types",children:"Tunnel Types"}),"\n",(0,s.jsx)(n.p,{children:"When testing with Sauce Labs, there are two different types of tunnel scenarios:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ephemeral (short-lived)"}),": Starts a tunnel when you start a build. The tunnel is shut down when the build is completed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Long-running"}),": Starts one or more tunnels that remain active indefinitely. We recommend restarting them every 24 hours for best performance."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Which one is right for you? That depends on your testing goals, number of parallel tests, duration of testing, number of Sauce Connect Proxy users in your team."}),"\n",(0,s.jsx)(n.p,{children:"Regarding of the type of tunnel you launch, it is important to be diligent about assigning names (tunnel identifiers) to each tunnel to distinguish them and ensure smooth testing."}),"\n",(0,s.jsxs)(n.p,{children:["We also recommend verifying if your team has a tunnels setup that you can share. Please note that tunnel sharing should only be undertaken by well-coordinated users. For more information on sharing Sauce Connect Proxy tunnels within your organization, see ",(0,s.jsx)(n.a,{href:"/basics/acct-team-mgmt/sauce-connect-proxy-tunnels",children:"Sharing Sauce Connect Proxy Tunnels"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"ephemeral-short-lived-tunnels",children:"Ephemeral (Short-Lived) Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"Ephemeral tunnels (short-lived tunnels) are ideal for the following test situations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you're testing from your laptop and start your tests from an Integrated Development Environment (IDE) or terminal."}),"\n",(0,s.jsx)(n.li,{children:"If you\u2019re starting your builds/suites from a Jenkins server."}),"\n",(0,s.jsx)(n.li,{children:"If you plan to start and stop your tests quickly and need to be more hands-on."}),"\n",(0,s.jsx)(n.li,{children:"If you need to test potentially build-breaking changes like modifying the tunnel to fast-fail scripts/trackers, change the geolocation, or change how SSL/TLS encryption happens."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"starting-an-ephemeral-tunnel",children:"Starting an Ephemeral Tunnel"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/basics/environment-variables",children:"Set your Sauce Labs username and access key as environmental variables"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Run the basic startup commands to ensure that your tunnel starts. Be sure to include the ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--region",children:(0,s.jsx)(n.code,{children:"--region"})})," and ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-name",children:(0,s.jsx)(n.code,{children:"--tunnel-name"})})," flags for best performance."]}),"\n"]}),"\n",(0,s.jsxs)(o.A,{defaultValue:"Mac/Linux",values:[{label:"Mac/Linux",value:"Mac/Linux"},{label:"Windows",value:"Windows"}],children:[(0,s.jsx)(l.A,{value:"Mac/Linux",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./sc --region $SAUCE_REGION --tunnel-name $SAUCE_TUNNEL_NAME\n"})})}),(0,s.jsx)(l.A,{value:"Windows",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:".\\sc.exe --region $SAUCE_REGION --tunnel-name $SAUCE_TUNNEL_NAME\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Once you see a tunnel on Sauce Labs, you can start testing against a site that is hosted on your network. You can leave it up for as long as you'd like. Start it and stop it as needed!"}),"\n",(0,s.jsx)(n.h4,{id:"starting-an-ephemeral-tunnel-from-a-continuous-integration-ci-build-server",children:"Starting an Ephemeral Tunnel From a Continuous Integration (CI) Build Server"}),"\n",(0,s.jsx)(n.p,{children:"You can also launch Ephemeral tunnels from a continuous integration (CI) build server, where the code is being pulled from a repository."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When putting together test suites or builds from a CI build server, we recommend first creating an automated loop that contains the following steps:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Build starts (scheduled or user-initiated)."}),"\n",(0,s.jsx)(n.li,{children:"(Optional) Start an instance of the website or mobile app being tested."}),"\n",(0,s.jsx)(n.li,{children:"Script starts your tunnel on the server."}),"\n",(0,s.jsx)(n.li,{children:"Your tests start on Sauce Labs."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Determine the number of tunnels you'll need for your tests. For this example, we'll use one tunnel. As a rule of thumb, if you're running less than 200 parallel tests, one tunnel is fine; for 200 or more parallel tests, you'll need two tunnels. For more information, see ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/system-requirements",children:"System and Network Requirements"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"How you start your tunnel is up to you. You can run a Bash shell script (or PowerShell script, if you're in Windows) that executes the start commands as if you were starting it locally:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY -r us-west --tunnel-name $TUNNEL_NAME\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Wait until the tunnel is ready. To verify that your tunnel is up and running, you can use one of the options in ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/readiness-checks",children:"Sauce Connect Proxy Readiness Checks"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Once you've established your automated loop, you should be able to kick off builds as needed, automatically."}),"\n",(0,s.jsx)(n.h3,{id:"long-running-tunnels",children:"Long-Running Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"Long-running tunnels are especially useful for large enterprise customers, who often set their tunnels to run automatically for 12-48 hours over the course of their testing. They are ideal for situations like the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you're running a high number of parallel tests (50 or more)."}),"\n",(0,s.jsx)(n.li,{children:"If you have a test automation infrastructure that can utilize the Sauce Connect Proxy service and wish to have your Sauce Connect client component up and running for a long time (i.e., 12-48 hours)."}),"\n",(0,s.jsx)(n.li,{children:"If you plan to share tunnels across teams."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Long-running tunnels go hand in hand with our ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/high-availability",children:"High Availability (HA) Setup"}),", which allows you to run multiple tunnels to support a very high number of parallel tests. If you're part of a team of multiple people and/or departments running tests simultaneously on Sauce Labs, we strongly recommend utilizing long-running tunnels in HA mode. Once you (or your systems administrator) set your long-running tunnel configuration for your account on Sauce Labs, the settings will be remembered in your account and you won't have to set them again. Here are some benefits to this:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"When provisioning new user accounts, these tunnel settings will be ready and waiting for them when they log in."}),"\n",(0,s.jsx)(n.li,{children:"All Sauce Labs users in your organization will have immediate access to existing, launched tunnels."}),"\n",(0,s.jsx)(n.li,{children:"Redundancy; if a tunnel fails, tests will flow to the other tunnel(s)."}),"\n",(0,s.jsx)(n.li,{children:"Tunnel logs can be rotated automatically and used to troubleshoot as needed."}),"\n",(0,s.jsx)(n.li,{children:"If the infrastructure for your site under test changes, you will have a known configuration that works. Keeping a group of tunnels alive 24/7 is generally easier than setting up new tunnels for every change that happens."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"launching-high-availability-long-running-tunnels-via-command-line",children:"Launching High Availability, Long-Running Tunnels via Command Line"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Single Tunnel"})," \u2014 A single tunnel that you'd start from your laptop or CI/CD system would look like this on the command line:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/Users/you/sc-<VERSION>-<PLATFORM>/bin/sc \\\n  -u $SAUCE_USERNAME -k $SAUCE_ACESS_KEY \\\n  --tunnel-name my-single-tunnel\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Multiple Tunnels"})," \u2014 A high-availability tunnel pool would look like this if it was run as part of a script or from the command line:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"./sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-pool --tunnel-name main-tunnel-pool\n./sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-pool --tunnel-name main-tunnel-pool\n./sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-pool --tunnel-name main-tunnel-pool\n./sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-pool --tunnel-name main-tunnel-pool\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"--tunnel-pool"})," flag prevents the removal of tunnels with the same name and any default tunnels, if you're using them. Jobs will be distributed across these tunnels, enabling load balancing and HA. This flag is required when running HA tunnels to allow multiple tunnels with the same name. What happens if you don't use this command? By default, colliding tunnels (i.e., tunnels with the same name) would be removed when Sauce Connect is starting up. If you start another tunnel with the same name as an existing pool without adding ",(0,s.jsx)(n.code,{children:"--tunnel-pool"}),", the new tunnel would be established, but all tunnels in the pre-existing pool would be closed."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"--tunnel-name"})," flag defines the tunnel name (in the above example, it's ",(0,s.jsx)(n.code,{children:"main-tunnel-pool"}),"). This is required so that your tests can find your tunnels. This is required to start a long-running pool of tunnels."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information, see the ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy",children:"Sauce Connect Proxy CLI"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"keeping-your-long-running-tunnels-fresh",children:"Keeping Your Long-Running Tunnels Fresh"}),"\n",(0,s.jsx)(n.p,{children:"Tunnels running for an extended period of time (i.e., more than a day) are actively and continuously used for running Sauce Labs website and mobile app tests throughout their duration. That said, keeping your Sauce Connect Proxy instances up and running for weeks or longer may result in maintenance difficulties, instability or performance degradation."}),"\n",(0,s.jsx)(n.p,{children:"To keep tunnels working their best, we recommend not letting your tunnels run for more than 24 hours. Your systems administrator would need to write a script to restart Sauce Connect Proxy clients daily or at the time of your choosing. Rolling restarts to refresh the tunnels is preferred--restarting only a portion of your tunnel pool at a time will allow for continuous testing without interruption."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"If a tunnel fails or is absent, your tests will also fail. You'll be able to see this from Sauce Labs."})}),"\n",(0,s.jsx)(n.h3,{id:"combining-ephemeral-and-long-running-tunnels",children:"Combining Ephemeral and Long-Running Tunnels"}),"\n",(0,s.jsx)(n.p,{children:"If needed, you can also start a combination of Ephemeral and Long-Running tunnels (i.e., your teams aren't bound to one type or the other) provided you're staying within your concurrency limit. This may be useful if you're a large enterprise user. As an example, if you have long-running tunnels already going, you can still start up ephemeral on the side."}),"\n",(0,s.jsx)(n.h3,{id:"scaling-sauce-connect",children:"Scaling Sauce Connect"}),"\n",(0,s.jsx)(n.p,{children:"If you start creating bigger and bigger builds with a high number of simultaneous test sessions, ephemeral tunnels will not work. Your tests would likely slow down because they'd be cramming into one tunnel."}),"\n",(0,s.jsx)(n.p,{children:"In this scenario, you\u2019d need to \u201cscale up\u201d by using a tunnel pool in HA mode (multiple tunnels with same tunnel name). We generally recommend switching when running more than 50 parallel test sessions. The mass number of tests will have room to run through, as test traffic will be distributed among the multiple tunnels."}),"\n",(0,s.jsx)(n.h2,{id:"improving-sauce-connect-proxy-performance",children:"Improving Sauce Connect Proxy Performance"}),"\n",(0,s.jsx)(n.p,{children:"During testing, your website or app may load resources (e.g. tracking services, images/videos, advertisements), which can impact page load times and even cause tests to fail.\nIf these resources are not needed at all for testing purposes, you can disable the traffic to improve performance."}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"http://elementalselenium.com/tips/66-blacklist",children:"How to Remove Third Party Resources"})," for more information."]}),"\n",(0,s.jsx)(n.h3,{id:"tuning-sauce-connect-proxy-traffic",children:"Tuning Sauce Connect Proxy Traffic"}),"\n",(0,s.jsx)(n.p,{children:"If you're using Sauce Connect Proxy, the additional network hops required to access external resources have the potential to slow test execution dramatically.\nWhen Sauce Connect Proxy is used, all the traffic is forwarded over the Sauce Connect Proxy connection.\nThe following flags provide fine control over the Sauce Connect Proxy tunneled traffic:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--direct-domains",children:(0,s.jsx)(n.code,{children:"--tunnel-domains"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-domains",children:(0,s.jsx)(n.code,{children:"--direct-domains"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--fast-fail-regexps",children:(0,s.jsx)(n.code,{children:"--fast-fail-regexps"})})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"tunnel-domains",children:"Tunnel Domains"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-domains",children:(0,s.jsx)(n.code,{children:"--tunnel-domains"})})," flag allows to specify requests which should always be forwarded from the Sauce Labs hosted browser to customer-side over the Sauce Connect Proxy connection.\nStarting Sauce Connect Proxy with ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--direct-domains",children:(0,s.jsx)(n.code,{children:"--tunnel-domains"})}),' implies that requests that don\'t match "tunnel domains" will be forwarded over the public internet.\nThis is the recommended option for the best performance since it minimizes the expensive tunnelled traffic and uses it only for the internal domains that are not publicly available.']}),"\n",(0,s.jsx)(n.h4,{id:"direct-domains",children:"Direct Domains"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--direct-domains",children:(0,s.jsx)(n.code,{children:"--direct-domains"})})," flag allows to specify requests which should always be forwarded from the Sauce Labs browser to their origin server over the public internet.\nStarting Sauce Connect Proxy with ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--tunnel-domains",children:(0,s.jsx)(n.code,{children:"--direct-domains"})}),' implies that requests that don\'t match "direct domains" will be forwarded to customer-side over the Sauce Connect Proxy connection.\nThis option, in general, is not recommended for performance, with the exception of the cases where known large requests can be forwarded to the public internet.']}),"\n",(0,s.jsx)(n.h4,{id:"fast-fail-domains",children:"Fast-fail Domains"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--fast-fail-regexps",children:(0,s.jsx)(n.code,{children:"--fast-fail-regexps"})})," flag allows to specify requests which should be immediately dropped.\nUnlike tunnel/direct domains, this option takes regular expressions and provides a powerful way to disable unwanted traffic.\nIt can also be used to simulate non-loading of scripts, styles, or other resources."]}),"\n",(0,s.jsx)(n.h4,{id:"configuring-tunnel-or-direct-domains",children:"Configuring Tunnel or Direct Domains"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use only the domain name. Do not precede it with the scheme like ",(0,s.jsx)(n.code,{children:"http://"})," or ",(0,s.jsx)(n.code,{children:"https://"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:"mydomain.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use wildcards to include subdomains by prefixing domain name with a dot ",(0,s.jsx)(n.code,{children:"."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:".mydomain.com"})," will include ",(0,s.jsx)(n.code,{children:"sub.mydomain.com"})," and ",(0,s.jsx)(n.code,{children:"sub1.mydomain.com"})," but not ",(0,s.jsx)(n.code,{children:"sub.myotherdomain.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["See ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#formatting-domains",children:(0,s.jsx)(n.code,{children:"Formatting domains for CLI"})})]}),"\n",(0,s.jsxs)(n.li,{children:["Configuring domains in ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/yaml-config/",children:"YAML config file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"---\n# this will include all subdomains of example.com as well as dev.httpbin.org\ntunnel-domains:\n- '.example.com'\n- 'dev.httbin.org'\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"configuring-domain-regular-expressions---fast-fail-regexps",children:"Configuring Domain Regular Expressions (--fast-fail-regexps)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Quote to avoid shell expansion"}),"\n",(0,s.jsxs)(n.li,{children:["Make sure to use correct regular expressions","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:"*.mydomain.com"})," is incorrect and ",(0,s.jsx)(n.code,{children:".*.mydomain.com"})," is correct regular expression"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Always use quotes to avoid shell expansion","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:'--fast-fail-regexps "*.mydomain.com"'})," instead of ",(0,s.jsx)(n.code,{children:"--fast-fail-regexps *.mydomain.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Configuring multiple regexps for CLI follows formatting rules similar to ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#formatting-domains",children:(0,s.jsx)(n.code,{children:"Formatting domains for CLI"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Comma-separated"}),"\n",(0,s.jsx)(n.li,{children:"No spaces between each regexp"}),"\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:'--fast-fail-regexp ".*.mydomain.*,.*.example.com"'})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Configuring regexps in ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/yaml-config/",children:"YAML config file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"---\nfast-fail-regexps:\n- '.*mydomain.*'\n- '.*.example.com'\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sauce-connect-proxy-host-performance-optimization",children:"Sauce Connect Proxy Host Performance Optimization"}),"\n",(0,s.jsxs)(n.p,{children:["Insufficient Sauce Connect Proxy host resources may cause performance degradation that may be difficult to diagnose. Please see the ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/system-requirements/#configuring-your-system-to-use-sauce-connect",children:"Configuring Your System to Use Sauce Connect"})," guidelines to ensure that your system has enough resources such as:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Memory"}),"\n",(0,s.jsx)(n.li,{children:"CPU"}),"\n",(0,s.jsx)(n.li,{children:"Open File Limit"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"service-management-tools",children:"Service Management Tools"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The below are suggestions and examples. The tool you or your team are familiar with is often the best choice."})}),"\n",(0,s.jsx)(n.h3,{id:"running-systemd-for-linux",children:"Running systemd for Linux"}),"\n",(0,s.jsx)(n.p,{children:"For Linux users, systemd is a service management tool that may facilitate Sauce Connect Proxy tunnel monitoring, system startup/shutdown, and rolling restarts."}),"\n",(0,s.jsx)(n.p,{children:"When used to perform rolling restarts, systemd allows time for Sauce Connect Proxy to clean up on exit, making it a more fluid experience. This is useful in scenarios where you want to kill and quickly restart a new Sauce Connect Proxy instance; you can use systemd to schedule and control the timing of shutdown and clean-up processes."}),"\n",(0,s.jsx)(n.p,{children:"Here's how to set it up:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a system user to run the Sauce Connect Proxy."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo adduser --system --no-create-home --group --disabled-login --home /nonexistent sauceconnect\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/installation/",children:"Download Sauce Connect Proxy"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://saucelabs.com/downloads/sc-<VERSION>-linux.tar.gz\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Untar the Sauce Connect Proxy file."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"tar -zxvf sc-<VERSION>-linux.tar.gz\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Copy the Sauce Connect Proxy file into a dedicated directory."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cp sc-<VERSION>-linux/bin/sc /usr/local/bin/sc\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"Copy the 'systemd' config files."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cp sc-<VERSION>-linux/config_examples/systemd/ /etc/systemd/system\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsxs)(n.li,{children:["In the system directory, edit the service file named ",(0,s.jsx)(n.code,{children:"sc@.service"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.code,{children:"User=nobody"})," and ",(0,s.jsx)(n.code,{children:"Group=nobody"})," lines, you will need to replace nobody the with the name of the system user you created in Step 1."]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.code,{children:"Environment"})," lines, you will need to replace 'username' and the placeholder string with your Sauce Labs username and access key."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'[Unit]\nDescription=Sauce Connect worker service on port %i\nPartOf=sc.service\nReloadPropagatedFrom=sc.service\n\n[Service]\n  Type=simple\n  User=nobody\n  Group=nobody\n  WorkingDirectory=/tmp\n  LimitNOFILE=64000\n  Restart=always\n\n  # Set those to match your Saucelabs credentials\n  Environment=SAUCE_USERNAME=username\n  Environment=SAUCE_ACCESS_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n  ExecStart = /usr/local/bin/sc \\\n                --logfile - \\\n                --pidfile "/tmp/sauceconnect_%i.pid" \\\n                --region us-west \\\n                --se-port "%i" \\\n                --tunnel-pool\n  # Not needed with systemd\n  ExecStartPost = /bin/rm -f /tmp/sauceconnect_%i.pid\n\n[Install]\nWantedBy=multi-user.target\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsxs)(n.li,{children:["Create a directory ",(0,s.jsx)(n.code,{children:"sc.service.wants"})," in ",(0,s.jsx)(n.code,{children:"/etc/systemd/system"}),". You'll have to create symbolic links inside this directory to set up new instances of Sauce Connect Proxy. For example, if you'd like to have two Sauce Connect Proxy instances listening on ",(0,s.jsx)(n.code,{children:"port 8000"})," and ",(0,s.jsx)(n.code,{children:"8001"}),", your script would look something like this."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo cd /etc/systemd/system/\nsudo mkdir -p ./sc.service.wants\nsudo ln -s /etc/systemd/system/sc@.service ./sc.service.wants/sc@8000.service\nsudo ln -s /etc/systemd/system/sc@.service ./sc.service.wants/sc@8001.service\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"8",children:["\n",(0,s.jsx)(n.li,{children:"Reload the service file."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"9",children:["\n",(0,s.jsx)(n.li,{children:"Start the service."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start sc\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"10",children:["\n",(0,s.jsx)(n.li,{children:"Check the status of the service."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status sc\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"11",children:["\n",(0,s.jsx)(n.li,{children:"You can also check the status of the individual instances."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status 'sc@*'\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"12",children:["\n",(0,s.jsx)(n.li,{children:"You can stop the service with this command."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop sc\n"})}),"\n",(0,s.jsx)(n.h3,{id:"running-nssm-for-windows",children:"Running NSSM for Windows"}),"\n",(0,s.jsxs)(n.p,{children:["If you haven't yet, download the latest version of Sauce Connect Proxy (see ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/installation",children:"Downloading Sauce Connect Proxy"}),"."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Download ",(0,s.jsx)(n.a,{href:"http://nssm.cc/download",children:"NSSM (Non-Sucking Service Manager)"}),", a free Microsoft Windows Service manager utility that manages background and foreground services and processes. Please note that this is a third-party tool, not a product of Sauce Labs."]}),"\n",(0,s.jsx)(n.li,{children:"Once you've downloaded NSSM, expand the program."}),"\n",(0,s.jsx)(n.li,{children:"Navigate to the NSSM directory via the command line and create the service with the following command:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'nssm install SauceConnect "C:/SauceConnect/bin/sc.exe" "-u " "-k "\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Open the Windows services manager and ensure the new service (named SauceConnect) is set to start manually."}),"\n",(0,s.jsx)(n.li,{children:"Create a batch file (let's call it restartSC.bat) that contains the following:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"NET STOP SauceConnect\nsleep 30\nNET START SauceConnect\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsxs)(n.li,{children:["Open the Windows Task Scheduler and set it to call ",(0,s.jsx)(n.code,{children:"restartSC.bat"})," once a day or at any other period of time."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Once the above steps are in place, the Sauce Connect Proxy tunnel should restart itself daily at the time of your choosing."}),"\n",(0,s.jsxs)(n.p,{children:["When using NSSM, we recommend changing the shutdown timeout from milliseconds to several minutes. This will prevent NSSM from shutting down the Sauce Connect Proxy client while active jobs are still running through it. For information, refer to the ",(0,s.jsx)(n.a,{href:"https://github.com/rticommunity/nssm/blob/master/README.txt",children:"NSSM README page"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"using-the-selenium-relay",children:"Using the Selenium Relay"}),"\n",(0,s.jsxs)(n.p,{children:["The Selenium Relay is an optional configuration, built into Sauce Connect Proxy, that acts as a listener for Selenium commands. This feature is disabled by default. When enabled, it sends all inbound and outbound Selenium commands through an encrypted Sauce Connect tunnel (instead of HTTP/HTTPS) to the Sauce Labs browser cloud. Your tests would not use a ",(0,s.jsx)(n.a,{href:"/basics/data-center-endpoints/#data-center-endpoints",children:"Sauce Labs OnDemand endpoint"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Leveraging Sauce Connect Proxy as a Selenium Relay is not recommended because:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Added traffic can impact performance of the server where Sauce Connect Proxy is running."}),"\n",(0,s.jsx)(n.li,{children:"Selenium Relay itself is an extra dependency that can impact test performance."}),"\n",(0,s.jsxs)(n.li,{children:["It's not compatible with our ",(0,s.jsx)(n.a,{href:"/secure-connections/sauce-connect/setup-configuration/high-availability",children:"HA Setup"})," because all traffic must be routed through a specific listener."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For best test performance, we recommend ",(0,s.jsx)(n.a,{href:"#recommended-connecting-directly-to-sauce-labs-over-https",children:"sticking with HTTPS"})," to connect with Sauce Labs or if you use a corporate proxy to control outbound traffic."]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-your-tests-to-use-the-selenium-relay",children:"Setting Up Your Tests to Use the Selenium Relay"}),"\n",(0,s.jsx)(n.p,{children:"The Selenium Relay should only be used in rare scenarios, such as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Running tests written in Python that can't use HTTPS due to a known issue with the Selenium Python bindings."}),"\n",(0,s.jsx)(n.li,{children:"Allowing only machines in a DMZ to have access to Sauce Labs."}),"\n",(0,s.jsx)(n.li,{children:"Ensuring that all Selenium commands are routed through a Sauce Connect tunnel."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To enable the Selenium Relay, set the listener port with the ",(0,s.jsx)(n.a,{href:"/dev/cli/sauce-connect-proxy/#--se-port",children:(0,s.jsx)(n.code,{children:"-P (--se-port)"})})," command and substitute the name of the server where Sauce Connect Proxy is installed for ondemand.saucelabs.com:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'public static final String URL = "http://" + USERNAME + ":" + ACCESS_KEY + "@mymachine.mydomain.com:4445/wd/hub";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you have Sauce Connect Proxy installed on your local machine, you would use ",(0,s.jsx)(n.code,{children:"localhost"})," for the name of the server:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'public static final String URL = "http://" + USERNAME + ":" + ACCESS_KEY + "@localhost:4445/wd/hub";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"recommended-connecting-directly-to-sauce-labs-over-https",children:"Recommended: Connecting Directly to Sauce Labs Over HTTPS"}),"\n",(0,s.jsx)(n.p,{children:"This example shows how you would specify the connection to Sauce Labs over HTTPS in a Java test script:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'public static final String URL = "https://" + USERNAME + ":" + ACCESS_KEY + "@ondemand.saucelabs.com:443/wd/hub";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"routing-protractor-traffic-through-sauce-connect-proxy",children:"Routing Protractor Traffic through Sauce Connect Proxy"}),"\n",(0,s.jsxs)(n.p,{children:["Sauce Connect Proxy sends all traffic\u2014including test commands\u2014through the tunnel. Typically, your Selenium commands are sent to Sauce's servers over the standard internet, and only browser requested traffic goes via Sauce Connect Proxy. In some restricted networks, access to Sauce Labs servers isn't available over ",(0,s.jsx)(n.code,{children:"port 443"})," on the standard internet. In cases like these, sending all traffic through the Sauce Connect Proxy tunnel is the easiest way to get your tests running."]}),"\n",(0,s.jsxs)(n.p,{children:["You achieve this by pointing your Remote WebDriver at the address and port of the Sauce Connect Proxy tunnel, instead of 'ondemand.saucelabs.com'. You can set this port by passing the ",(0,s.jsx)(n.code,{children:"--se-port"})," option to Sauce Connect Proxy. For example, with ",(0,s.jsx)(n.code,{children:"--se-port 4445"}),", you'd use ",(0,s.jsx)(n.code,{children:"localhost:4445/wd/hub"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["When using ",(0,s.jsx)(n.a,{href:"https://github.com/angular/protractor",children:"Protractor"}),", the standard Sauce Connect Proxy configuration doesn't allow for alternative endpoint addresses. Instead, you can use the sauceSeleniumAddress config value to set a custom Selenium address:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"exports.config = {\n      sauceSeleniumAddress: 'localhost:4445/wd/hub',\n      sauceUser: process.env.SAUCE_USERNAME,\n      sauceKey: process.env.SAUCE_ACCESS_KEY\n    }\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var s=t(18215);const i={tabItem:"tabItem_Ymn6"};var r=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>S});var s=t(96540),i=t(18215),r=t(23104),o=t(56347),l=t(205),a=t(57485),c=t(31682),u=t(89466);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=h(e),[o,a]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,d]=x({queryString:t,groupId:i}),[p,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,u.Dv)(t);return[i,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),f=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{f&&a(f)}),[f]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);a(e),d(e),g(e)}),[d,g,r]),tabValues:r}}var g=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function j(e){let{className:n,block:t,selectedValue:s,selectValue:o,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=a.indexOf(n),i=l[t].value;i!==s&&(c(n),o(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>a.push(e),onKeyDown:d,onClick:u,...r,className:(0,i.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function b(e){const n=p(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,y.jsx)(j,{...e,...n}),(0,y.jsx)(v,{...e,...n})]})}function S(e){const n=(0,g.A)();return(0,y.jsx)(b,{...e,children:d(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);