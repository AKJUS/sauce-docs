"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[82912],{81958:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=s(74848),r=s(28453);s(11470),s(19365),s(86025);const t={id:"espresso",title:"Configuring Your Espresso Tests",sidebar_label:"Espresso Configuration"},l=void 0,a={id:"mobile-apps/automated-testing/espresso-xcuitest/espresso",title:"Configuring Your Espresso Tests",description:"saucectl relies on a YAML specification file to determine exactly which tests to run and how to run them. To customize saucectl to run your Espresso tests, simply modify the properties of the YAML file accordingly. This page defines each of the configuration properties specific to running Espresso tests.",source:"@site/docs/mobile-apps/automated-testing/espresso-xcuitest/espresso.md",sourceDirName:"mobile-apps/automated-testing/espresso-xcuitest",slug:"/mobile-apps/automated-testing/espresso-xcuitest/espresso",permalink:"/sauce-docs/pr-preview/pr-2916/mobile-apps/automated-testing/espresso-xcuitest/espresso",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/mobile-apps/automated-testing/espresso-xcuitest/espresso.md",tags:[],version:"current",lastUpdatedBy:"kristofmuhi",lastUpdatedAt:172492915e4,frontMatter:{id:"espresso",title:"Configuring Your Espresso Tests",sidebar_label:"Espresso Configuration"},sidebar:"docs",previous:{title:"XCUITest Introduction",permalink:"/sauce-docs/pr-preview/pr-2916/mobile-apps/automated-testing/espresso-xcuitest/xcuitest-introduction"},next:{title:"XCUITest Configuration",permalink:"/sauce-docs/pr-preview/pr-2916/mobile-apps/automated-testing/espresso-xcuitest/xcuitest"}},o={},c=[{value:"Setting an Alternative Configuration File",id:"setting-an-alternative-configuration-file",level:2},{value:"Example Configuration",id:"example-configuration",level:2},{value:"<code>apiVersion</code>",id:"apiversion",level:2},{value:"<code>kind</code>",id:"kind",level:2},{value:"<code>showConsoleLog</code>",id:"showconsolelog",level:2},{value:"<code>defaults</code>",id:"defaults",level:2},{value:"<code>timeout</code>",id:"timeout",level:3},{value:"<code>sauce</code>",id:"sauce",level:2},{value:"<code>region</code>",id:"region",level:3},{value:"<code>metadata</code>",id:"metadata",level:3},{value:"<code>concurrency</code>",id:"concurrency",level:3},{value:"<code>retries</code>",id:"retries",level:3},{value:"<code>tunnel</code>",id:"tunnel",level:3},{value:"<code>name</code>",id:"name",level:4},{value:"<code>owner</code>",id:"owner",level:4},{value:"<code>visibility</code>",id:"visibility",level:3},{value:"<code>launchOrder</code>",id:"launchorder",level:3},{value:"<code>reporters</code>",id:"reporters",level:2},{value:"<code>spotlight</code>",id:"spotlight",level:3},{value:"<code>junit</code>",id:"junit",level:3},{value:"<code>json</code>",id:"json",level:3},{value:"<code>enabled</code>",id:"enabled",level:4},{value:"<code>webhookURL</code>",id:"webhookurl",level:4},{value:"<code>filename</code>",id:"filename",level:4},{value:"<code>artifacts</code>",id:"artifacts",level:2},{value:"<code>cleanup</code>",id:"cleanup",level:3},{value:"<code>download</code>",id:"download",level:3},{value:"<code>when</code>",id:"when",level:4},{value:"<code>match</code>",id:"match",level:4},{value:"<code>directory</code>",id:"directory",level:4},{value:"<code>espresso</code>",id:"espresso",level:2},{value:"<code>app</code>",id:"app",level:3},{value:"<code>appDescription</code>",id:"appdescription",level:3},{value:"<code>testApp</code>",id:"testapp",level:3},{value:"<code>testAppDescription</code>",id:"testappdescription",level:3},{value:"<code>otherApps</code>",id:"otherapps",level:3},{value:"<code>suites</code>",id:"suites",level:2},{value:"<code>name</code>",id:"name-1",level:3},{value:"<code>testApp</code>",id:"testapp-1",level:3},{value:"<code>testAppDescription</code>",id:"testappdescription-1",level:3},{value:"<code>timeout</code>",id:"timeout-1",level:3},{value:"<code>passThreshold</code>",id:"passthreshold",level:3},{value:"<code>smartRetry</code>",id:"smartretry",level:3},{value:"<code>failedOnly</code>",id:"failedonly",level:4},{value:"<code>failedClassesOnly</code>",id:"failedclassesonly",level:4},{value:"<code>emulators</code>",id:"emulators",level:3},{value:"<code>name</code>",id:"name-2",level:4},{value:"<code>orientation</code>",id:"orientation",level:4},{value:"<code>platformVersions</code>",id:"platformversions",level:4},{value:"<code>devices</code>",id:"devices",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>name</code>",id:"name-3",level:4},{value:"<code>platformVersion</code>",id:"platformversion",level:4},{value:"<code>options</code>",id:"options",level:4},{value:"<code>carrierConnectivity</code>",id:"carrierconnectivity",level:5},{value:"<code>deviceType</code>",id:"devicetype",level:5},{value:"<code>private</code>",id:"private",level:5},{value:"<code>testOptions</code>",id:"testoptions",level:3},{value:"<code>class</code>",id:"class",level:4},{value:"<code>notClass</code>",id:"notclass",level:4},{value:"<code>func</code>",id:"func",level:4},{value:"<code>unit</code>",id:"unit",level:4},{value:"<code>perf</code>",id:"perf",level:4},{value:"<code>size</code>",id:"size",level:4},{value:"<code>package</code>",id:"package",level:4},{value:"<code>notPackage</code>",id:"notpackage",level:4},{value:"<code>annotation</code>",id:"annotation",level:4},{value:"<code>notAnnotation</code>",id:"notannotation",level:4},{value:"<code>filter</code>",id:"filter",level:4},{value:"<code>runnerBuilder</code>",id:"runnerbuilder",level:4},{value:"<code>listener</code>",id:"listener",level:4},{value:"<code>newRunListenerMode</code>",id:"newrunlistenermode",level:4},{value:"<code>numShards</code>",id:"numshards",level:4},{value:"<code>clearPackageData</code>",id:"clearpackagedata",level:4},{value:"<code>useTestOrchestrator</code>",id:"usetestorchestrator",level:4},{value:"Custom <code>testOptions</code>",id:"custom-testoptions",level:4},{value:"<code>disableImmersiveModePopUp</code>",id:"disableimmersivemodepopup",level:3},{value:"<code>appSettings</code>",id:"appsettings",level:3},{value:"<code>audioCapture</code>",id:"audiocapture",level:4},{value:"<code>instrumentation</code>",id:"instrumentation",level:4},{value:"<code>networkCapture</code>",id:"networkcapture",level:5},{value:"Advanced Configuration Considerations",id:"advanced-configuration-considerations",level:2},{value:"Setting up a Proxy",id:"setting-up-a-proxy",level:3},{value:"Try Espresso with Cucumber",id:"try-espresso-with-cucumber",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"saucectl"})," relies on a YAML specification file to determine exactly which tests to run and how to run them. To customize ",(0,i.jsx)(n.code,{children:"saucectl"})," to run your Espresso tests, simply modify the properties of the YAML file accordingly. This page defines each of the configuration properties specific to running Espresso tests."]}),"\n",(0,i.jsx)(n.h2,{id:"setting-an-alternative-configuration-file",children:"Setting an Alternative Configuration File"}),"\n",(0,i.jsxs)(n.p,{children:["By default, ",(0,i.jsx)(n.code,{children:"saucectl"})," looks for the ",(0,i.jsx)(n.code,{children:"config.yml"})," file in the ",(0,i.jsx)(n.code,{children:".sauce"})," folder of your project root, but you can actually specify a different file, or if you are using multiple frameworks or need to configure different sets of tests to run separately, you may choose to have multiple configuration files that you can direct ",(0,i.jsx)(n.code,{children:"saucectl"})," to reference as necessary."]}),"\n",(0,i.jsxs)(n.p,{children:["Use the following configuration at runtime to direct ",(0,i.jsx)(n.code,{children:"saucectl"})," to use any configuration file you choose:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"saucectl run -c ./path/to/{config-file}.yml\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"YAML Required",type:"note",children:(0,i.jsxs)(n.p,{children:["While you can use multiple files of different names or locations to specify your configurations, each file must be a ",(0,i.jsx)(n.code,{children:"*.yml"})," and follow the ",(0,i.jsx)(n.code,{children:"saucectl"})," syntax. Our IDE Integrations (e.g., ",(0,i.jsx)(n.a,{href:"/dev/cli/saucectl/usage/ide/vscode",children:"Visual Studio Code"}),") can help you out by validating the YAML files and provide handy suggestions, so make sure to check them out!"]})}),"\n",(0,i.jsx)(n.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:"reference",children:"https://github.com/saucelabs/saucectl-espresso-example/blob/master/.sauce/config.yml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Each of the properties supported for running Espresso tests through ",(0,i.jsx)(n.code,{children:"saucectl"})," is defined below."]}),"\n",(0,i.jsx)(n.h2,{id:"apiversion",children:(0,i.jsx)(n.code,{children:"apiVersion"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Identifies the version of the underlying configuration schema. At this time, ",(0,i.jsx)(n.code,{children:"v1alpha"})," is the only supported value."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1alpha\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"kind",children:(0,i.jsx)(n.code,{children:"kind"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | STRING/ENUM |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies which framework is associated with the automation tests configured in this specification."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"kind: espresso\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"showconsolelog",children:(0,i.jsx)(n.code,{children:"showConsoleLog"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Controls whether the contents of ",(0,i.jsx)(n.code,{children:"console.log"})," are always shown in the local output of saucectl. By default (false), ",(0,i.jsx)(n.code,{children:"console.log"})," is only shown for failed suites."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"showConsoleLog: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"defaults",children:(0,i.jsx)(n.code,{children:"defaults"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies any default settings for the project."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  timeout: 15m\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"timeout",children:(0,i.jsx)(n.code,{children:"timeout"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | DURATION |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs how long (in ",(0,i.jsx)(n.code,{children:"ms"}),", ",(0,i.jsx)(n.code,{children:"s"}),", ",(0,i.jsx)(n.code,{children:"m"}),", or ",(0,i.jsx)(n.code,{children:"h"}),") ",(0,i.jsx)(n.code,{children:"saucectl"})," should wait for each suite to complete. You can override this setting for individual suites using the ",(0,i.jsx)(n.code,{children:"timeout"})," setting within the ",(0,i.jsx)(n.a,{href:"#suites",children:(0,i.jsx)(n.code,{children:"suites"})})," object. If not set, the default value is ",(0,i.jsx)(n.code,{children:"0"})," (unlimited)."]}),"\n",(0,i.jsx)(n.admonition,{title:"Real Device Max Duration",type:"caution",children:(0,i.jsx)(n.p,{children:"When setting the timeout values for your suites, consider that native framework tests on real devices enforce a maximum test duration limit of 90 minutes."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  timeout: 15m\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"sauce",children:(0,i.jsx)(n.code,{children:"sauce"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The parent property containing all settings related to how tests are run and identified in the Sauce Labs platform."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  region: eu-central-1\n  metadata:\n    tags:\n      - e2e\n      - release team\n      - other tag\n    build: Release $CI_COMMIT_SHORT_SHA\n  concurrency: 5\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"region",children:(0,i.jsx)(n.code,{children:"region"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING/ENUM |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies through which Sauce Labs data center tests will run. Valid values are: ",(0,i.jsx)(n.code,{children:"us-west-1"})," or ",(0,i.jsx)(n.code,{children:"eu-central-1"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you do not specify a region in your config file, you must set it when running your command with the ",(0,i.jsx)(n.code,{children:"--region"})," flag."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  region: eu-central-1\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"metadata",children:(0,i.jsx)(n.code,{children:"metadata"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT | VIRTUAL ONLY |"})}),"\n",(0,i.jsx)(n.p,{children:"The set of properties that allows you to provide additional information about your project that helps you distinguish it in the various environments in which it is used and reviewed, and also helps you apply filters to easily isolate tests based on metrics that are meaningful to you, as shown in the following example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"metadata:\n  build: RC 10.4.a\n  tags:\n    - e2e\n    - Android\n    - beta\n    - featurex\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"concurrency",children:(0,i.jsx)(n.code,{children:"concurrency"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | INTEGER |"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the maximum number of suites to execute at the same time. If the test defines more suites than the max, excess suites are queued and run in order as each suite completes."}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Set this value to equal or less than your Sauce concurrency allowance, as setting a higher value may result in jobs dropped by the server."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  concurrency: 5\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can override the file setting at runtime by setting the concurrency flag as an inline parameter of the ",(0,i.jsx)(n.code,{children:"saucectl run"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"saucectl run --ccy 5\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"retries",children:(0,i.jsx)(n.code,{children:"retries"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | INTEGER |"})}),"\n",(0,i.jsxs)(n.p,{children:["Sets the number of times to retry a failed suite. For more settings, you can refer to ",(0,i.jsx)(n.a,{href:"#passThreshold",children:"passThreshold"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  retries: 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can override the file setting at runtime by setting the retries flag as an inline parameter of the ",(0,i.jsx)(n.code,{children:"saucectl run"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"saucectl run --retries 1\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"tunnel",children:(0,i.jsx)(n.code,{children:"tunnel"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"saucectl"})," supports using ",(0,i.jsx)(n.a,{href:"/secure-connections/sauce-connect/proxy-tunnels/",children:"Sauce Connect"})," to establish a secure connection with Sauce Labs. To do so, launch a tunnel; then provide the name and owner (if applicable) in this property."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  tunnel:\n    name: your_tunnel_name\n    owner: tunnel_owner_username\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"name",children:(0,i.jsx)(n.code,{children:"name"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Identifies an active Sauce Connect tunnel to use for secure connectivity to the Sauce Labs cloud."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This property replaces the former ",(0,i.jsx)(n.code,{children:"id"})," property, which is deprecated."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  tunnel:\n    name: your_tunnel_name\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"owner",children:(0,i.jsx)(n.code,{children:"owner"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Identifies the Sauce Labs user who created the specified tunnel, which is required if the user running the tests did not create the tunnel."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This property replaces the former ",(0,i.jsx)(n.code,{children:"parent"})," property, which is deprecated."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  tunnel:\n    name: your_tunnel_name\n    owner: tunnel_owner_username\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"visibility",children:(0,i.jsx)(n.code,{children:"visibility"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Sets the visibility level of test results for suites run on Sauce Labs. If unspecified or empty, ",(0,i.jsx)(n.code,{children:"team"})," visibility will be applied. Valid values are:"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This property is only valid for tests run against Emulators. It has no effect on tests run against real devices."})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"public"}),": Accessible to anyone."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"public restricted"}),": Share your job's results page and video, but keeps the logs only for you."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"share"}),": Only accessible to people with a valid link."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"team"}),": (Default) Only accessible to people under the same root account as you."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"private"}),": Only you (the owner) will be able to view assets and test results page."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  visibility: private\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"launchorder",children:(0,i.jsx)(n.code,{children:"launchOrder"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies the execution order for your test suites. When set to ",(0,i.jsx)(n.code,{children:"fail rate"}),", test suites with the highest failure rate will execute first. If unspecified, test suites will execute in the order in which they are written in the configuration file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  launchOrder: fail rate\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"reporters",children:(0,i.jsx)(n.code,{children:"reporters"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["Configures additional reporting capabilities provided by ",(0,i.jsx)(n.code,{children:"saucectl"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"reporters:\n  junit:\n    enabled: true\n    filename: saucectl-report.xml\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"spotlight",children:(0,i.jsx)(n.code,{children:"spotlight"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The spotlight reporter highlights failed or otherwise interesting jobs.\nIt may include an excerpt of failed tests or other information that may be useful for troubleshooting."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"reporters:\n  spotlight:\n    enabled: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"junit",children:(0,i.jsx)(n.code,{children:"junit"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The JUnit reporter gathers JUnit reports from all jobs and combines them into a single report."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"reporters:\n  junit:\n    enabled: true\n    filename: saucectl-report.xml\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"json",children:(0,i.jsx)(n.code,{children:"json"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The JSON reporter gathers test results from all jobs and combines them into a single report."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"reporters:\n  json:\n    enabled: true\n    filename: saucectl-report.json\n    webhookURL: https://my-webhook-url\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"enabled",children:(0,i.jsx)(n.code,{children:"enabled"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsx)(n.p,{children:"Toggles the reporter on/off."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    enabled: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"webhookurl",children:(0,i.jsx)(n.code,{children:"webhookURL"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies the webhook URL. When saucectl test is finished, it'll send an HTTP POST with a JSON payload to the configured webhook URL."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    webhookURL: https://my-webhook-url\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"filename",children:(0,i.jsx)(n.code,{children:"filename"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:'Specifies the report filename. Defaults to "saucectl-report.json".'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    filename: my-saucectl-report.json\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"artifacts",children:(0,i.jsx)(n.code,{children:"artifacts"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies how to manage test output, such as logs, videos, and screenshots."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"artifacts:\n  cleanup: true\n  download:\n    when: always\n    match:\n      - junit.xml\n    directory: ./artifacts/\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"cleanup",children:(0,i.jsx)(n.code,{children:"cleanup"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["When set to ",(0,i.jsx)(n.code,{children:"true"}),", all contents of the specified download directory are cleared before any new artifacts from the current test are downloaded."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  cleanup: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"download",children:(0,i.jsx)(n.code,{children:"download"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies the settings related to downloading artifacts from tests run by ",(0,i.jsx)(n.code,{children:"saucectl"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  download:\n    when: always\n    match:\n      - junit.xml\n    directory: ./artifacts/\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"when",children:(0,i.jsx)(n.code,{children:"when"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies when and under what circumstances to download artifacts. Valid values are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"always"}),": Always download artifacts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"never"}),": Never download artifacts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pass"}),": Download artifacts for passing suites only."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fail"}),": Download artifacts for failed suites only."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    when: always\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"match",children:(0,i.jsx)(n.code,{children:"match"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING/ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies which artifacts to download based on whether they match the name or file type pattern provided. Supports the wildcard character ",(0,i.jsx)(n.code,{children:"*"})," (use quotes for best parsing results with wildcard)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  match:\n    - junit.xml\n    - "*.log"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"directory",children:(0,i.jsx)(n.code,{children:"directory"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies the path to the folder location in which to download artifacts. A separate subdirectory is generated in this location for each suite for which artifacts are downloaded. The name of the subdirectory will match the suite name. If a directory with the same name already exists, the new one will be suffixed by a serial number."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    directory: ./artifacts/\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"espresso",children:(0,i.jsx)(n.code,{children:"espresso"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The parent property containing the details specific to the Espresso project."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"espresso:\n  app: ./apps/calc.apk\n  appDescription: My demo app\n  testApp: ./apps/calc-success.apk\n  testAppDescription: My test app\n  otherApps:\n    - ./apps/pre-installed-app1.apk\n    - ./apps/pre-installed-app2.apk\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"app",children:(0,i.jsx)(n.code,{children:"app"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies a local path, URL, or storage identifier to the app under test. This property supports expanded environment variables."}),"\n",(0,i.jsxs)(n.p,{children:["When defining a local path, the default directory is ",(0,i.jsx)(n.code,{children:"{project-root}/apps/filename.apk"}),". The app will be uploaded to the Sauce Labs storage service. Supports ",(0,i.jsx)(n.code,{children:"*.apk"})," and ",(0,i.jsx)(n.code,{children:"*.aab"})," files."]}),"\n",(0,i.jsx)(n.p,{children:"When defining a URL to your app, it will be downloaded to a local temporary directory before being uploaded to Sauce storage."}),"\n",(0,i.jsx)(n.admonition,{title:"AAB App Signing",type:"caution",children:(0,i.jsxs)(n.p,{children:["To install an *.apk app that is extracted from an *.aab file, Sauce Labs must sign the *.apk using its own signature. In such cases, Sauce Labs signs both the ",(0,i.jsx)(n.code,{children:"app"})," and ",(0,i.jsx)(n.code,{children:"testApp"})," to ensure matching signatures, even if instrumentation is disabled. Otherwise, the app installation will fail."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  app: ./apps/calc.apk\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  app: https://example.app.download.url/calc.apk\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  app: $APP\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  app: storage:099557f6-aabb-f8b3-6ad1-8f6200898b92\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  app: storage:filename=calc.apk\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"appdescription",children:(0,i.jsx)(n.code,{children:"appDescription"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies description for the uploaded app."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  appDescription: My demo app\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"testapp",children:(0,i.jsx)(n.code,{children:"testApp"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Either a local path, url, or storage identifier to the testing app. This property supports expanded environment variables."}),"\n",(0,i.jsxs)(n.p,{children:["When defining a local path, the default directory is ",(0,i.jsx)(n.code,{children:"{project-root}/apps/testfile.apk"}),". The app will be uploaded to the Sauce Labs storage service. Only supports ",(0,i.jsx)(n.code,{children:"*.apk"})," files."]}),"\n",(0,i.jsx)(n.p,{children:"When defining a url to your test app, it will be downloaded to a local temporary directory before being uploaded to the storage service."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testApp: ./apps/calc-success.apk\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testApp: https://example.app.download.url/calc-success.apk\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testApp: $TEST_APP\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testApp: storage:fbd59e8e-2555-0d3c-5583-1bba2cd17b64\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testApp: storage:filename=calc-success.apk\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"testappdescription",children:(0,i.jsx)(n.code,{children:"testAppDescription"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies description for the uploaded testApp."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  testAppDescription: My test app\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"otherapps",children:(0,i.jsx)(n.code,{children:"otherApps"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY | REAL DEVICES ONLY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Set of up to seven apps to pre-install for your tests. You can upload an ",(0,i.jsx)(n.code,{children:"*.apk"})," or ",(0,i.jsx)(n.code,{children:"*.aab"})," app file from your local machine by specifying a filepath (relative location is ",(0,i.jsx)(n.code,{children:"{project-root}/apps/app1.apk"}),"), a remote url, or you can specify an app that has already been uploaded to ",(0,i.jsx)(n.a,{href:"/mobile-apps/app-storage",children:"Sauce Labs App Storage"})," by providing the reference ",(0,i.jsx)(n.code,{children:"storage:<fileId>"})," or ",(0,i.jsx)(n.code,{children:"storage:filename=<filename>"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Apps specified as ",(0,i.jsx)(n.code,{children:"otherApps"})," inherit the configuration of the main app under test for ",(0,i.jsxs)(n.a,{href:"https://app.saucelabs.com/live/app-testing#group-details",children:[(0,i.jsx)(n.code,{children:"Device Language"}),", ",(0,i.jsx)(n.code,{children:"Device Orientation"}),", and ",(0,i.jsx)(n.code,{children:"Proxy"})]}),", regardless of any differences that may be applied through the Sauce Labs UI, because the settings are specific to the device under test. For example, if the dependent app is intended to run in landscape orientation, but the main app is set to portrait, the dependent app will run in portrait for the test, which may have unintended consequences."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  otherApps:\n    - ./apps/pre-installed-app1.apk\n    - https://example.app.download.url/pre-installed-app1.apk\n    - $PRE_INSTALLED_APP2\n    - storage:d6aac80c-2000-a2f1-4c4e-539266e93ee6\n    - storage:filename=pre-installed-app3.apk\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"suites",children:(0,i.jsx)(n.code,{children:"suites"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["The set of properties providing details about the test suites to run. May contain multiple suite definitions. See the full ",(0,i.jsx)(n.a,{href:"#example-configuration",children:"example config"})," for an illustration of multiple suite definitions."]}),"\n",(0,i.jsx)(n.admonition,{title:"Configure RDC and VMC",type:"tip",children:(0,i.jsxs)(n.p,{children:["You can configure tests for both Real Devices ",(0,i.jsx)(n.em,{children:"and"})," Virtual Machines in a single configuration file."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"name-1",children:(0,i.jsx)(n.code,{children:"name"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| REQUIRED | STRING |"})}),"\n",(0,i.jsx)(n.p,{children:"The name of the test suite, which will be reflected in the results and related artifacts."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  - name: "saucy test"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"testapp-1",children:(0,i.jsx)(n.code,{children:"testApp"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Sets the test application on the suite level. See the full ",(0,i.jsx)(n.a,{href:"#testapp",children:"usage"}),". If this property is not set, ",(0,i.jsx)(n.code,{children:"saucectl"})," will use the default ",(0,i.jsx)(n.code,{children:"testApp"})," from the ",(0,i.jsx)(n.a,{href:"#espresso",children:(0,i.jsx)(n.code,{children:"espresso"})})," level."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  - testApp: ./apps/calc-success.apk\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"testappdescription-1",children:(0,i.jsx)(n.code,{children:"testAppDescription"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies description for the uploaded testApp on the suite level. If ",(0,i.jsx)(n.code,{children:"testApp"})," is not set on suite level, ",(0,i.jsx)(n.code,{children:"saucectl"})," will use the default ",(0,i.jsx)(n.code,{children:"testAppDescription"})," from the ",(0,i.jsx)(n.a,{href:"#espresso",children:(0,i.jsx)(n.code,{children:"espresso"})})," level."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  - testApp: ./apps/calc-success.apk\n    testAppDescription: My test app\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"timeout-1",children:(0,i.jsx)(n.code,{children:"timeout"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | DURATION |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs how long ",(0,i.jsx)(n.code,{children:"saucectl"})," should wait for the suite to complete, potentially overriding the default project timeout setting."]}),"\n",(0,i.jsx)(n.p,{children:"When the suite reaches the timeout limit, its status is set to '?' in the CLI. This does not reflect the actual status of the job in the Sauce Labs web UI or API."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Setting ",(0,i.jsx)(n.code,{children:"0"})," reverts to the value set in ",(0,i.jsx)(n.code,{children:"defaults"}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  timeout: 15m\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"passthreshold",children:(0,i.jsx)(n.code,{children:"passThreshold"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | INTEGER |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies the minimum number of successful attempts for a suite to be considered as ",(0,i.jsx)(n.code,{children:"passed"}),". It should be used along with ",(0,i.jsx)(n.a,{href:"#retries",children:"retries"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["For example, setting ",(0,i.jsx)(n.code,{children:"retries"})," to 3 and ",(0,i.jsx)(n.code,{children:"passThreshold"})," to 2.\nThe max attempt would be 4 times. If the test passed twice, it'd stop and be marked as ",(0,i.jsx)(n.code,{children:"passed"}),". Otherwise, it'd be marked as ",(0,i.jsx)(n.code,{children:"failed"}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  retries: 3\nsuite:\n  - name: My Saucy Test\n    passThreshold: 2\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"smartretry",children:(0,i.jsx)(n.code,{children:"smartRetry"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies the retry strategy to apply for that suite. It should be used along with ",(0,i.jsx)(n.a,{href:"#retries",children:"retries"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"sauce:\n  retries: 3\nsuite:\n  - name: My Saucy Test\n    smartRetry:\n      failedOnly: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"failedonly",children:(0,i.jsx)(n.code,{children:"failedOnly"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["When set to ",(0,i.jsx)(n.code,{children:"true"}),", ",(0,i.jsx)(n.code,{children:"saucectl"})," collects any failed tests from the previous run and performs an automatic retry on them."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suite:\n  - name: My Saucy Test\n    smartRetry:\n      failedOnly: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"failedclassesonly",children:(0,i.jsx)(n.code,{children:"failedClassesOnly"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"failedClassesOnly"})," is deprecated. Use ",(0,i.jsx)(n.code,{children:"failedOnly"})," instead."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"emulators",children:(0,i.jsx)(n.code,{children:"emulators"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["The parent property that defines details for running this suite on virtual devices using an Emulator. Check our ",(0,i.jsx)(n.a,{href:"https://saucelabs.com/products/platform-configurator#/",children:"Platform Configurator"})," to see which Emulator configurations are available."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'emulators:\n  - name: "Android GoogleApi Emulator"\n    orientation: portrait\n    platformVersions:\n      - "11.0"\n      - "10.0"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"name-2",children:(0,i.jsx)(n.code,{children:"name"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["The name of the device to emulate for this test suite. To ensure name accuracy, check the ",(0,i.jsx)(n.a,{href:"https://app.saucelabs.com/live/web-testing/virtual",children:"list of supported virtual devices"}),".\nIf you are using emulators for this test suite, this property is REQUIRED."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  - name: "Android GoogleApi Emulator"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"orientation",children:(0,i.jsx)(n.code,{children:"orientation"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ENUM |"})}),"\n",(0,i.jsxs)(n.p,{children:["The screen orientation to use while executing this test suite on this virtual device. Valid values are ",(0,i.jsx)(n.code,{children:"portrait"})," or ",(0,i.jsx)(n.code,{children:"landscape"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  orientation: portrait\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"platformversions",children:(0,i.jsx)(n.code,{children:"platformVersions"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["The set of one or more versions of the device platform on which to run the test suite. Check the ",(0,i.jsx)(n.a,{href:"https://app.saucelabs.com/live/web-testing/virtual",children:"list of supported virtual devices"})," for compatible versions.\nIf you are using emulators for this test suite, this property is REQUIRED."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  platformVersions:\n    - "11.0"\n    - "10.0"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"devices",children:(0,i.jsx)(n.code,{children:"devices"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"The parent property that defines details for running this suite on real devices. You can request a specific device using its ID, or you can specify a set of criteria to choose the first available device that matches the specifications."}),"\n",(0,i.jsx)(n.p,{children:"When an ID is specified, it supersedes the other settings."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'devices:\n  - name: "Google Pixel.*"\n    platformVersion: 8.1\n    options:\n      carrierConnectivity: true\n  - id: Google_Pixel_2_real_us\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"id",children:(0,i.jsx)(n.code,{children:"id"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Request a specific device for this test suite by its ID. You can look up device IDs on device selection pages or by using our ",(0,i.jsx)(n.a,{href:"/dev/api/rdc/#get-devices",children:"Get Devices API request"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"        id: Google_Pixel_2_real_us\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"name-3",children:(0,i.jsx)(n.code,{children:"name"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Find a device for this test suite that matches the device name or portion of the name (",(0,i.jsx)(n.a,{href:"/mobile-apps/supported-devices/#dynamic-device-allocation",children:"Dynamic Device Allocation"}),"), which may provide a larger pool of available devices of the type you want."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Use Complete Name"',children:"      - name: Google Pixel 4 XL\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Use Dynamic Allocation"',children:"      - name: Google Pixel.*\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"platformversion",children:(0,i.jsx)(n.code,{children:"platformVersion"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsxs)("small",{children:["| MANDATORY ",(0,i.jsx)("span",{className:"sauceGreen",children:"for Virtual Devices"})," | OPTIONAL ",(0,i.jsx)("span",{className:"sauceGreen",children:"for Real Devices"})," | STRING |"]})}),"\n",(0,i.jsx)(n.p,{children:"Allows you to set the mobile OS platform version that you want to use in your test."}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,i.jsxs)(n.p,{children:["Android and iOS platform versions are based on ",(0,i.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),", also known as SEMVER. This means that the versions will have the format ",(0,i.jsx)(n.code,{children:"MAJOR.MINOR.PATCH"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Virtual Devices"})}),"\n",(0,i.jsxs)(n.p,{children:["This is mandatory for Android Emulators and iOS Simulators. You can find the available versions in our ",(0,i.jsx)(n.a,{href:"https://saucelabs.com/platform/platform-configurator",children:"Platform Configurator"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Real Devices"})}),"\n",(0,i.jsx)(n.p,{children:"This is optional for Real Devices. There are three options you can use to determine which version you want to use for your automated Appium, Espresso, or XCUITest tests:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Don't provide a ",(0,i.jsx)(n.code,{children:"platformVersion"}),", this will result in any available Android or iOS device, no matter the version."]}),"\n",(0,i.jsxs)(n.li,{children:["Provide a ",(0,i.jsx)(n.code,{children:"platformVersion"})," that starts with your provided ",(0,i.jsx)(n.code,{children:"platformVersion"})," string:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"12"}),":"]})," matches all minors and patches for ",(0,i.jsx)(n.code,{children:'platformVersion: "12"'}),". For example ",(0,i.jsx)(n.code,{children:"12.1.0|12.1.1|12.2.0|..."})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"12.1"}),":"]})," matches all patches for ",(0,i.jsx)(n.code,{children:'platformVersion: "12.1"'}),". For example ",(0,i.jsx)(n.code,{children:"12.1.0|12.1.1"}),", it will ",(0,i.jsx)(n.strong,{children:"not"})," match ",(0,i.jsx)(n.code,{children:"12.2.x|12.3.x"})," and higher"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"12.1.1"}),":"]})," matches all devices that have ",(0,i.jsx)(n.strong,{children:"this exact"})," platform version"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["In/exclude a specific version and or a range of versions by using a regular expression (regex). You don't need to provide the forward slashes (",(0,i.jsx)(n.code,{children:"/{your-regex}/"}),") as you would normally do with regex. Keep in mind that the regex needs to match the format ",(0,i.jsx)(n.code,{children:"MAJOR.MINOR.PATCH"}),". The possibilities are endless, but here are just a few examples:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"^1[3-4|6].*"}),":"]})," Will match ",(0,i.jsx)(n.code,{children:"13"}),", ",(0,i.jsx)(n.code,{children:"14"})," and ",(0,i.jsx)(n.code,{children:"16"}),", but not 15, see ",(0,i.jsx)(n.a,{href:"https://regex101.com/r/ExICgZ/1",children:"example"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"^(?!15).*"}),":"]})," Will exclude version ",(0,i.jsx)(n.code,{children:"15"})," with all it's minors and patches, but will match all other versions, see ",(0,i.jsx)(n.a,{href:"https://regex101.com/r/UqqYrM/1",children:"example"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"note",children:(0,i.jsxs)(n.p,{children:["The stricter the ",(0,i.jsx)(n.code,{children:"platformVersions"})," is, the smaller the pool of available devices will be and the longer you might need to wait for the available device. We recommend using only the major version or using the regex option to get the best results and an available device in the fastest way."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Use complete version for Virtual and or Real Devices"',children:"        platformVersion: 11.0\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Use dynamic platformVersion allocation. Real Devices Only"',children:"        platformVersion: '^1[3-4|6].*'\n        platformVersion: 8.0\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"options",children:(0,i.jsx)(n.code,{children:"options"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["A parent property to further specify desired device attributes within the pool of devices that match the ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"version"})," criteria."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h5,{id:"carrierconnectivity",children:(0,i.jsx)(n.code,{children:"carrierConnectivity"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsx)(n.p,{children:"Request that the matching device is also connected to a cellular network."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  options:\n      carrierConnectivity: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h5,{id:"devicetype",children:(0,i.jsx)(n.code,{children:"deviceType"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Request that the matching device is a specific type of device. Valid values are: ",(0,i.jsx)(n.code,{children:"ANY"}),", ",(0,i.jsx)(n.code,{children:"TABLET"}),", or ",(0,i.jsx)(n.code,{children:"PHONE"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  options:\n      deviceType: TABLET\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h5,{id:"private",children:(0,i.jsx)(n.code,{children:"private"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsx)(n.p,{children:"Request that the matching device is from your organization's private pool."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  options:\n      private: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Sauce Labs runs your tests using ",(0,i.jsx)(n.a,{href:"https://developer.android.com/studio/test/command-line#run-tests-with-adb",children:"Android Debug Bridge (ADB)"})," for Android Real Devices and Android Emulators by invoking the ",(0,i.jsx)(n.code,{children:"adb shell am instrument"}),"-command. This provides a set of ",(0,i.jsx)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:"instrumentation options"})," that you can use to control the test execution. We offer support for predefined and custom options."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Available options:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"optional and can be used in any combination unless otherwise noted"}),"\n",(0,i.jsxs)(n.li,{children:["can be used on both Android Emulators and Real Devices unless otherwise noted with ",(0,i.jsx)("span",{className:"sauceGreen",children:"Virtual Devices Only"})," or ",(0,i.jsx)("span",{className:"sauceGreen",children:"Real Devices Only"})]}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"testoptions",children:(0,i.jsx)(n.code,{children:"testOptions"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"testOptions"})," property allows you to provide options to ",(0,i.jsx)(n.code,{children:"saucectl"}),". It's a set of parameters allowing you to provide additional details about which test class should be run for the suite and how to apply them. For more information, see the official Android ",(0,i.jsx)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:'"Test from the command line"'})," and ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:'"AndroidJUnitRunner"'})," docs."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'suites:\n  # The below testOptions are examples. Some of the options are not working together, so please read the descriptions carefully.\n  testOptions:\n    class:\n      - com.example.android.testing.androidjunitrunnersample.CalculatorAddParameterizedTest\n    notClass:\n      - com.example.android.testing.androidjunitrunnersample.CalculatorInstrumentationTest\n    func: true\n    unit: true\n    perf: true\n    size: small\n    package: com.example.android.testing.androidjunitrunnersample\n    notPackage: com.example.android.testing.androidMyDemoTests\n    annotation: com.android.buzz.MyAnnotation\n    notAnnotation: com.android.buzz.NotMyAnnotation\n    filter:\n      - com.android.foo.MyCustomFilter\n    runnerBuilder:\n      - com.android.foo.MyCustomBuilder\n    listener:\n      - com.foo.Listener\n    newRunListenerMode: true\n    numShards: 4\n    clearPackageData: true\n    useTestOrchestrator: true\n    # custom test options\n    testUser: "John Doe"\n    testEnvironment: "staging"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The following options are ",(0,i.jsx)(n.strong,{children:"NOT"})," allowed/will be ignored when running tests:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"testFile"}),": Running all tests listed in a file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"notTestFile"}),": Running all tests not listed in a file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"debug"}),": Run tests in debug mode."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"log"}),": Loads and logs all specified tests but doesn't run them."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"emma"}),": Runs an EMMA code coverage analysis and writes the output."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"coverageFile"}),": Overrides the default location of the EMMA coverage file on the device."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"coverage"}),": To generate code coverage files (*.ec) that can be used by EMMA or JaCoCo. (",(0,i.jsx)("span",{className:"sauceGreen",children:"Soon to come for Android Real Devices/Emulators"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"class",children:(0,i.jsx)(n.code,{children:"class"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to only run the specified classes for this test suite. See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    class:\n      - com.example.android.testing.androidjunitrunnersample.CalculatorAddParameterizedTest\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"notclass",children:(0,i.jsx)(n.code,{children:"notClass"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all classes for the suite ",(0,i.jsx)(n.em,{children:"except"})," those specified here. See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    notClass:\n      - com.example.android.testing.androidjunitrunnersample.CalculatorInstrumentationTest\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"func",children:(0,i.jsx)(n.code,{children:"func"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all test classes that extend ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/android/test/InstrumentationTestCase",children:"InstrumentationTestCase"}),". See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    func: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"unit",children:(0,i.jsx)(n.code,{children:"unit"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all test classes that do not extend either InstrumentationTestCase or ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/android/test/PerformanceTestCase",children:"PerformanceTestCase"}),"/",(0,i.jsx)(n.a,{href:"#perf",children:(0,i.jsx)(n.code,{children:"perf"})}),". See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    unit: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"perf",children:(0,i.jsx)(n.code,{children:"perf"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all test classes that implement PerformanceTestCase. See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    perf: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"size",children:(0,i.jsx)(n.code,{children:"size"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ENUM |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run only tests that are annotated with the matching size value i.e ",(0,i.jsx)(n.code,{children:"@SmallTest"}),", ",(0,i.jsx)(n.code,{children:"@MediumTest"})," or ",(0,i.jsx)(n.code,{children:"@LargeTest"}),". Valid values are ",(0,i.jsx)(n.code,{children:"small"}),", ",(0,i.jsx)(n.code,{children:"medium"}),", or ",(0,i.jsx)(n.code,{children:"large"}),". You may only specify one value for this property. See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    size: small\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"package",children:(0,i.jsx)(n.code,{children:"package"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run only tests in the specified package. See ",(0,i.jsxs)(n.a,{href:"https://developer.android.com/studio/test/command-line#am-instrument-options",children:[(0,i.jsx)(n.code,{children:"am instrument"}),"-options"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    package: com.example.android.testing.androidjunitrunnersample\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"notpackage",children:(0,i.jsx)(n.code,{children:"notPackage"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING | REAL DEVICES ONLY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all tests ",(0,i.jsx)(n.em,{children:"except"})," those in the specified package. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    notPackage: com.example.android.testing.androidMyDemoTests\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"annotation",children:(0,i.jsx)(n.code,{children:"annotation"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run only tests that match a custom annotation that you have set. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    annotation: com.android.buzz.MyAnnotation\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"notannotation",children:(0,i.jsx)(n.code,{children:"notAnnotation"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | STRING |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to run all tests ",(0,i.jsx)(n.em,{children:"except"})," those matching a custom annotation that you have set. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    notAnnotation: com.android.buzz.NotMyAnnotation\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"filter",children:(0,i.jsx)(n.code,{children:"filter"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to filter the test run to tests that pass all of a list of custom ",(0,i.jsx)(n.a,{href:"https://junit.org/junit4/javadoc/4.12/org/junit/runner/manipulation/Filter.html",children:"filter(s)"}),". See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    filter:\n      - com.android.foo.MyCustomFilter\n      - com.android.foo.MyOtherCustomFilter\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"runnerbuilder",children:(0,i.jsx)(n.code,{children:"runnerBuilder"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to use custom ",(0,i.jsx)(n.a,{href:"https://junit.org/junit4/javadoc/4.12/org/junit/runners/model/RunnerBuilder.html",children:"builders"})," to run test classes. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    runnerBuilder:\n      - com.android.foo.MyCustomBuilder\n      - com.android.foo.AnotherCustomBuilder\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"listener",children:(0,i.jsx)(n.code,{children:"listener"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | ARRAY |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to specify one or more ",(0,i.jsx)(n.a,{href:"http://junit.org/javadoc/latest/org/junit/runner/notification/RunListener.html",children:"RunListeners"})," to observe the test run. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    listener:\n      - com.foo.Listener\n      - com.foo.Listener2\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"newrunlistenermode",children:(0,i.jsx)(n.code,{children:"newRunListenerMode"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Instructs ",(0,i.jsx)(n.code,{children:"saucectl"})," to use the new order of ",(0,i.jsx)(n.a,{href:"http://junit.org/javadoc/latest/org/junit/runner/notification/RunListener.html",children:"RunListeners"})," during a test run. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    newRunListenerMode: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"numshards",children:(0,i.jsx)(n.code,{children:"numShards"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | INTEGER |"})}),"\n",(0,i.jsxs)(n.p,{children:["Sets the number of separate shards to create for the test suite. Read more about shard tests on the ",(0,i.jsx)(n.a,{href:"https://developer.android.com/training/testing/junit-runner#sharding-tests",children:"Android developer site"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When sharding is configured, ",(0,i.jsx)(n.code,{children:"saucectl"})," automatically creates the sharded jobs for each of the devices defined for the suite based on the number of shards you specify. For example, for a suite testing a single Emulator version that specifies 2 shards, ",(0,i.jsx)(n.code,{children:"saucectl"})," clones the suite and runs one shard index on the first suite, and the other shard index on the identical clone suite. For a suite that is testing 2 Emulator version and two real devices, ",(0,i.jsx)(n.code,{children:"saucectl"})," must clone the suite to run each shard index for each Emulator and device, so 8 jobs in total for the suite."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Espresso may not distribute tests evenly across the number of shards specified, especially if the number of shards is near or equivalent to the number of tests in the suite. In such cases, it is not unusual to see jobs with no tests at all because they were already executed in other shard jobs."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    numShards: 2\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"clearpackagedata",children:(0,i.jsx)(n.code,{children:"clearPackageData"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Removes all shared states from the testing device's CPU and memory at the completion of each test. See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/androidx/test/runner/AndroidJUnitRunner",children:"AndroidJUnitRunner"}),"-usage."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The flag ",(0,i.jsx)(n.code,{children:"clearPackageData"})," has to be used in conjunction with ",(0,i.jsx)(n.code,{children:"useTestOrchestrator"}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    clearPackageData: true\n    useTestOrchestrator: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"usetestorchestrator",children:(0,i.jsx)(n.code,{children:"useTestOrchestrator"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsxs)(n.p,{children:["Run each of your app's tests within its own invocation of ",(0,i.jsx)(n.code,{children:"Instrumentation"}),". Android Test Orchestrator offers the following benefits for your testing environment:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal shared state:"})," Each test runs in its own ",(0,i.jsx)(n.code,{children:"Instrumentation"})," instance. Therefore, if your tests share app state, most of that shared state is removed from your device's CPU or memory after each test. To remove all shared state from your device's CPU and memory after each test, use this setting in conjunction with ",(0,i.jsx)(n.code,{children:"clearPackageData: true"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Crashes are isolated:"})," Even if one test crashes, it takes down only its own instance of ",(0,i.jsx)(n.code,{children:"Instrumentation"}),". This means that the other tests in your suite still run, providing complete test results."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This isolation results in a possible increase in test execution time as the Android Test Orchestrator restarts the application after each test."})}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://developer.android.com/training/testing/instrumented-tests/androidx-test-libraries/runner#using-android-test-orchestrator",children:"Test Orchestrator"})," for more information."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    useTestOrchestrator: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h4,{id:"custom-testoptions",children:["Custom ",(0,i.jsx)(n.code,{children:"testOptions"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"am instrument"})," tool passes testing options in the form of key-value pairs, using the ",(0,i.jsx)(n.code,{children:"-e"})," flag. If you normally pass extra test options to the ",(0,i.jsx)(n.code,{children:"am instrument"})," tool, like for example"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'# -e <key> <value>\n-e testUser "John Doe"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["you can do so in ",(0,i.jsx)(n.code,{children:"saucectl"})," by adding them to the ",(0,i.jsx)(n.code,{children:"testOptions"})," property."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'suites:\n  testOptions:\n    testUser: "John Doe"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"disableimmersivemodepopup",children:(0,i.jsx)(n.code,{children:"disableImmersiveModePopUp"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsxs)("small",{children:["| OPTIONAL | BOOLEAN | ",(0,i.jsx)("span",{className:"sauceGreen",children:"Android Virtual Devices Only"})," |"]})}),"\n",(0,i.jsxs)(n.p,{children:["Android allows apps to use the full screen, hiding the status bar and navigation bar. This is called ",(0,i.jsx)(n.a,{href:"https://developer.android.com/develop/ui/views/layout/immersive",children:'"immersive mode"'}),". When you run an Android test, the device will show a popup asking if you want to allow the app to use immersive mode. This popup can interfere with your test, and by default we disable it. If you want to enable it, set ",(0,i.jsx)(n.code,{children:"disableImmersiveModePopUp"})," to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"Under the hood, this capability is running this command before the app is started:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"adb shell settings put secure immersive_mode_confirmations confirmed\n"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"suites:\n  testOptions:\n    disableImmersiveModePopUp: false\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"appsettings",children:(0,i.jsx)(n.code,{children:"appSettings"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"Application settings for real device tests."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"appSettings:\n  audioCapture: true\n  instrumentation:\n    networkCapture: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"audiocapture",children:(0,i.jsx)(n.code,{children:"audioCapture"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsx)(n.p,{children:"Record the audio stream generated by your native mobile app during a real device test."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  audioCapture: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"instrumentation",children:(0,i.jsx)(n.code,{children:"instrumentation"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | OBJECT |"})}),"\n",(0,i.jsx)(n.p,{children:"Instrumentation settings for real device tests."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  instrumentation:\n    networkCapture: true\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h5,{id:"networkcapture",children:(0,i.jsx)(n.code,{children:"networkCapture"})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)("small",{children:"| OPTIONAL | BOOLEAN |"})}),"\n",(0,i.jsx)(n.p,{children:"Record network traffic for HTTP/HTTPS requests during app tests on real devices."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"    networkCapture: true\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-configuration-considerations",children:"Advanced Configuration Considerations"}),"\n",(0,i.jsx)(n.p,{children:"The configuration file is flexible enough to allow for any customizations and definitions that are required for any of the supported frameworks. The following sections describe some of the most common configurations."}),"\n",(0,i.jsx)(n.h3,{id:"setting-up-a-proxy",children:"Setting up a Proxy"}),"\n",(0,i.jsx)(n.p,{children:"If you need to go through a proxy server, you can set it through the following variables:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HTTP_PROXY"}),": Proxy to use to access HTTP websites"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HTTPS_PROXY"}),": Proxy to use to access HTTPS websites"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-title=",metastring:'"Example: Windows Powershell"',children:"PS> $Env:HTTP_PROXY=http://my.proxy.org:3128/\nPS> $Env:HTTPS_PROXY=http://my.proxy.org:3128/\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-title=",metastring:'"Example: Linux/macOS"',children:"$> export HTTP_PROXY=http://my.proxy.org:3128/\n$> export HTTPS_PROXY=http://my.proxy.org:3128/\n"})}),"\n",(0,i.jsx)(n.h2,{id:"try-espresso-with-cucumber",children:"Try Espresso with Cucumber"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"saucectl"})," supports Espresso using Cucumber, and the Espresso demo repo includes an ",(0,i.jsx)(n.a,{href:"https://github.com/saucelabs/saucectl-espresso-example/tree/master/examples/cucumber",children:"example Cucumber setup"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},19365:(e,n,s)=>{s.d(n,{A:()=>l});s(96540);var i=s(34164);const r={tabItem:"tabItem_Ymn6"};var t=s(74848);function l(e){let{children:n,hidden:s,className:l}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,l),hidden:s,children:n})}},11470:(e,n,s)=>{s.d(n,{A:()=>O});var i=s(96540),r=s(34164),t=s(23104),l=s(56347),a=s(205),o=s(57485),c=s(31682),d=s(70679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:s,attributes:i,default:r}}=e;return{value:n,label:s,attributes:i,default:r}}))}(s);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:s}=e;const r=(0,l.W6)(),t=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,o.aZ)(t),(0,i.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})}),[t,r])]}function j(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,t=u(e),[l,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=s.find((e=>e.default))??s[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:t}))),[c,h]=x({queryString:s,groupId:r}),[j,m]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,t]=(0,d.Dv)(s);return[r,(0,i.useCallback)((e=>{s&&t.set(e)}),[s,t])]}({groupId:r}),f=(()=>{const e=c??j;return p({value:e,tabValues:t})?e:null})();(0,a.A)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),m(e)}),[h,m,t]),tabValues:t}}var m=s(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=s(74848);function v(e){let{className:n,block:s,selectedValue:i,selectValue:l,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),d=e=>{const n=e.currentTarget,s=o.indexOf(n),r=a[s].value;r!==i&&(c(n),l(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:t}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:h,onClick:d,...t,className:(0,r.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":i===n}),children:s??n},n)}))})}function y(e){let{lazy:n,children:s,selectedValue:t}=e;const l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===t));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function b(e){const n=j(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(y,{...n,...e})]})}function O(e){const n=(0,m.A)();return(0,g.jsx)(b,{...e,children:h(e.children)},String(n))}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);