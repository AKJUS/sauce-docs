"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[11951],{66357:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var i=n(74848),r=n(28453),a=n(86025),s=n(11470),l=n(19365);const o={id:"integrating-ios",title:"Integrating iOS SDK",sidebar_label:"Integrating iOS SDK"},c=void 0,d={id:"testfairy/sdk/ios/integrating-ios",title:"Integrating iOS SDK",description:"Integrating the TestFairy SDK into your app helps you better understand how your app performs on real devices. It tells you when and how people are using your app, and provides you with any metrics you may need to optimize your user experience and code.",source:"@site/docs/testfairy/sdk/ios/integrating-ios.md",sourceDirName:"testfairy/sdk/ios",slug:"/testfairy/sdk/ios/integrating-ios",permalink:"/sauce-docs/pr-preview/pr-2905/testfairy/sdk/ios/integrating-ios",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/testfairy/sdk/ios/integrating-ios.md",tags:[],version:"current",lastUpdatedBy:"aoleszyn",lastUpdatedAt:1693165313e3,frontMatter:{id:"integrating-ios",title:"Integrating iOS SDK",sidebar_label:"Integrating iOS SDK"},sidebar:"docs",previous:{title:"Hiding Webview Elements",permalink:"/sauce-docs/pr-preview/pr-2905/testfairy/sdk/ios/hiding-webview"},next:{title:"Log Network",permalink:"/sauce-docs/pr-preview/pr-2905/testfairy/sdk/ios/log-network"}},u={},h=[{value:"Adding the SDK",id:"adding-the-sdk",level:2},{value:"Initializing the SDK",id:"initializing-the-sdk",level:2},{value:"Using PencilKit for Better Feedback",id:"using-pencilkit-for-better-feedback",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("iframe",{width:"854",height:"480",src:"https://www.youtube.com/embed/DhRX5UukvPM",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:!0}),"\n",(0,i.jsx)(t.p,{children:"Integrating the TestFairy SDK into your app helps you better understand how your app performs on real devices. It tells you when and how people are using your app, and provides you with any metrics you may need to optimize your user experience and code.\nYou get to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Track app use."}),"\n",(0,i.jsx)(t.li,{children:"Handle crashes and report to server."}),"\n",(0,i.jsx)(t.li,{children:"Record screen video and other metrics."}),"\n",(0,i.jsx)(t.li,{children:"Understand user flow, using checkpoints."}),"\n",(0,i.jsx)(t.li,{children:"Grab NSLogs from client and report to server."}),"\n",(0,i.jsx)(t.li,{children:"Automatically update if a new build is available."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"adding-the-sdk",children:"Adding the SDK"}),"\n",(0,i.jsxs)(s.A,{defaultValue:"Swift Package Manager",values:[{label:"Swift Package Manager",value:"Swift Package Manager"},{label:"Cocoapods",value:"Cocoapods"},{label:"Carthage",value:"Carthage"},{label:"Manual",value:"Manual"}],children:[(0,i.jsxs)(l.A,{value:"Swift Package Manager",children:[(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Requires Xcode 12+. Screenshots taken from Xcode 13.1"})}),(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Select your project from the Xcode navigator to open your project's configuration."}),"\n",(0,i.jsx)(t.li,{children:"Make sure your project is selected from Project and Target list."}),"\n",(0,i.jsxs)(t.li,{children:["Click the ",(0,i.jsx)(t.strong,{children:"Package Dependencies"})," Toolbar item."]}),"\n",(0,i.jsx)(t.li,{children:"Click the '+' icon to add a package."}),"\n"]}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/xcframework-1.png"),alt:"",width:"800"}),(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["In the newly opened dialog search for the TestFairy package repository using the URL: ",(0,i.jsx)(t.a,{href:"https://github.com/testfairy/testfairy-ios-sdk-swift-package",children:"https://github.com/testfairy/testfairy-ios-sdk-swift-package"})," in the top right search bar."]}),"\n",(0,i.jsxs)(t.li,{children:["Click the ",(0,i.jsx)(t.strong,{children:"Add Pacakge"})," button."]}),"\n"]}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/xcframework-2.png"),alt:"",width:"800"}),(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:'After the package has been downloaded, in the newly opened dialog, make sure the TestFairy package is selcted in the "Package Product" column'}),"\n",(0,i.jsx)(t.li,{children:'Make sure the right target is selected in the "Add to target" column'}),"\n",(0,i.jsxs)(t.li,{children:["Click the ",(0,i.jsx)(t.strong,{children:"Add Pacakge"})," button"]}),"\n"]}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/xcframework-3.png"),alt:"",width:"800"})]}),(0,i.jsxs)(l.A,{value:"Cocoapods",children:[(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Add the TestFairy pod to your Podfile by inserting the following line where applicable:"}),"\n"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"pod 'TestFairy'\n"})}),(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsxs)(t.li,{children:["Run the ",(0,i.jsx)(t.code,{children:"$ pod install"})," command to install the ",(0,i.jsx)(t.code,{children:"TestFairy"})," dependency."]}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"Carthage",children:["Once you have Carthage installed, you can begin adding frameworks to your project. Note that Carthage only supports dynamic frameworks, which are ",(0,i.jsx)(t.strong,{children:"only available on iOS 8 or later"})," (or any version of OS X).",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add ",(0,i.jsx)(t.code,{children:'binary "https://app.testfairy.com/sdk/ios/carthage.json"'})," to your Cartfile."]}),"\n",(0,i.jsxs)(t.li,{children:["Run ",(0,i.jsx)(t.code,{children:"carthage update"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"On your application targets\u2019 \u201cGeneral\u201d settings tab, in the \u201cLinked Frameworks and Libraries\u201d section, drag and drop the TestFairy framework from the [Carthage/Build][] folder on disk."}),"\n"]}),(0,i.jsx)("br",{}),(0,i.jsx)("img",{src:(0,a.A)("/img/mobile-apps/carthage-1.png"),alt:"Carthage Integration",width:"600"}),(0,i.jsxs)(t.ol,{start:"4",children:["\n",(0,i.jsx)(t.li,{children:"On your application targets\u2019 \u201cBuild Phases\u201d settings tab, click the \u201c+\u201d icon and choose \u201cNew Run Script Phase\u201d. Create a Run Script in which you specify your shell (ex: bin/sh), add the following contents to the script area below the shell:"}),"\n"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"/usr/local/bin/carthage copy-frameworks\n"})}),"and add the paths to the TestFairySDK frameworks under \u201cInput Files\u201d, e.g.:",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"${SRCROOT}/Carthage/Build/iOS/TestFairySDK.framework\n"})}),(0,i.jsx)("br",{}),(0,i.jsx)("img",{src:(0,a.A)("/img/mobile-apps/carthage-2.png"),alt:"Carthage Integration",width:"600"})]}),(0,i.jsxs)(l.A,{value:"Manual",children:[(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Download the framework from our ",(0,i.jsx)(t.a,{href:"https://app.testfairy.com/sdk/ios/",children:"Download page"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Unzip files and drag them into your project tree."}),"\n"]}),(0,i.jsx)("br",{}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/tutorial-unzip-files.png"),alt:"Carthage Integration",width:"300"}),"Make sure Copy items if needed is checked when dragging files to your project.",(0,i.jsx)("br",{}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/copy-items-if-needed.png"),alt:"Carthage Integration",width:"300"}),(0,i.jsxs)(t.ol,{start:"3",children:["\n",(0,i.jsxs)(t.li,{children:["Add the following framework:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"In Xcode, select the project file from the project navigator, on the left side of the project window."}),"\n",(0,i.jsx)(t.li,{children:"Show Projects and Target List."}),"\n",(0,i.jsx)(t.li,{children:"In the project settings editor, select the target to which you would like to add frameworks."}),"\n",(0,i.jsx)(t.li,{children:"Select the \u201cBuild Phases\u201d tab, and click the small triangle next to \u201cLink Binary With Libraries\u201d to view all of the frameworks in your application."}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"SystemConfiguration.framework"})}),"\n"]}),"\n"]}),"\n"]}),(0,i.jsx)("br",{}),(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/xcode-demo-1.gif"),alt:"Carthage Integration",width:"800"})]})]}),"\n",(0,i.jsx)(t.h2,{id:"initializing-the-sdk",children:"Initializing the SDK"}),"\n",(0,i.jsxs)(s.A,{defaultValue:"Objective C",values:[{label:"Objective C",value:"Objective C"},{label:"Swift",value:"Swift"}],children:[(0,i.jsxs)(l.A,{value:"Objective C",children:[(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Open your AppDelegate.m file."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Add this code to your app:"}),"\n"]}),"\n"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'#import "TestFairy.h"\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\n\t[TestFairy begin:@"SDK-u6qN9qXN"];\n\n\t// below of the rest of the didFinishLaunchingWithOptions method\n\t// ...\n}\n'})})]}),(0,i.jsxs)(l.A,{value:"Swift",children:[(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Create an Objective-C bridging header\nSince this process only needs to be done once per project, if you have already done so, just update your bridging header file.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Right-click on your project, select New File..."}),"\n",(0,i.jsx)(t.li,{children:"Select Header File.h"}),"\n",(0,i.jsx)(t.li,{children:"Save as Bridging.h in your project"}),"\n",(0,i.jsx)(t.li,{children:"Click on Bridging.h to open it in editor"}),"\n",(0,i.jsx)(t.li,{children:"Add the following line to the code:"}),"\n"]}),"\n"]}),"\n"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'#import "TestFairy.h"\n'})}),(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsx)(t.p,{children:"If framework wasn't uploaded manually please try:"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'#import "TestFairy/TestFairy.h"\n'})})]}),"Update Build Settings with the new bridging header:",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Click on your project"}),"\n",(0,i.jsx)(t.li,{children:"Select Build Settings tab"}),"\n",(0,i.jsx)(t.li,{children:'Select the "All" filter, in order to find Swift Compiler - General: Objective-C Bridging Header'}),"\n",(0,i.jsx)(t.li,{children:"Edit Swift Compiler - Code Generation: Objective-C Bridging Header (double-click to edit)."}),"\n",(0,i.jsx)(t.li,{children:'Drag "Bridging.h" from the source tree onto the edit box opened'}),"\n"]}),(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Open your AppDelegate.swift file."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Add this code to your app:"}),"\n"]}),"\n"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n\tTestFairy.begin("SDK-u6qN9qXN")\n\t// below of the rest of the didFinishLaunchingWithOptions method\n\t// ...\n\treturn true\n}\n'})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"using-pencilkit-for-better-feedback",children:"Using PencilKit for Better Feedback"}),"\n",(0,i.jsx)(t.p,{children:"You can give your users a better set of tools to markup any screenshots provided during feedback by adding PencilKit to your project. Simply add the PencilKit.framework to your project."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"This requires iOS 13 and Xcode 11."})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/pencilkit.png"),alt:"Pencilkit",width:"600"}),"\n",(0,i.jsx)(t.p,{children:"If a screenshot is attached to the feedback, your users can edit the screenshot by tapping on it and using PencilKit to mark it up."}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("img",{src:(0,a.A)("img/mobile-apps/pencilkit-feedback.png"),alt:"Pencilkit Feedback",width:"250"})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var i=n(18215);const r={tabItem:"tabItem_Ymn6"};var a=n(74848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,s),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>k});var i=n(96540),r=n(18215),a=n(23104),s=n(56347),l=n(205),o=n(57485),c=n(31682),d=n(89466);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:r}}=e;return{value:t,label:n,attributes:i,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=h(e),[s,o]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:a}))),[c,u]=g({queryString:n,groupId:r}),[f,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,d.Dv)(n);return[r,(0,i.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),j=(()=>{const e=c??f;return p({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{j&&o(j)}),[j]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,a]),tabValues:a}}var m=n(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function b(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const t=e.currentTarget,n=o.indexOf(t),r=l[n].value;r!==i&&(c(t),s(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>o.push(e),onKeyDown:u,onClick:d,...a,className:(0,r.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function w(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,x.jsx)(b,{...e,...t}),(0,x.jsx)(y,{...e,...t})]})}function k(e){const t=(0,m.A)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var i=n(96540);const r={},a=i.createContext(r);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);