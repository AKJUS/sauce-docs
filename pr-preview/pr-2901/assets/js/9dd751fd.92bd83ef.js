"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[28415],{17979:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(74848),s=r(28453),a=r(86025);r(11470),r(19365);const i={id:"sso-intro",title:"SSO",sidebar_label:"Getting Started"},o=void 0,l={id:"testfairy/security/sso/sso-intro",title:"SSO",description:"Single Sign-on (SSO) enables you to manage users and testers outside of TestFairy, providing enhanced security and a streamlined user experience. With TestFairy's SAML support, you can seamlessly integrate with popular SSO providers such as Okta, OneLogin, Ping, Oracle, IBM, and Azure ADFS.",source:"@site/docs/testfairy/security/sso/sso-intro.md",sourceDirName:"testfairy/security/sso",slug:"/testfairy/security/sso/sso-intro",permalink:"/sauce-docs/pr-preview/pr-2901/testfairy/security/sso/sso-intro",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/testfairy/security/sso/sso-intro.md",tags:[],version:"current",lastUpdatedBy:"Gil Megidish",lastUpdatedAt:1718189769e3,frontMatter:{id:"sso-intro",title:"SSO",sidebar_label:"Getting Started"},sidebar:"docs",previous:{title:"Private Cloud",permalink:"/sauce-docs/pr-preview/pr-2901/testfairy/security/private-cloud"},next:{title:"Azure",permalink:"/sauce-docs/pr-preview/pr-2901/testfairy/security/sso/azure"}},u={},c=[{value:"Integrating TestFairy",id:"integrating-testfairy",level:2}];function d(e){const t={a:"a",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Single Sign-on (SSO) enables you to manage users and testers outside of TestFairy, providing enhanced security and a streamlined user experience. With TestFairy's SAML support, you can seamlessly integrate with popular SSO providers such as Okta, OneLogin, Ping, Oracle, IBM, and Azure ADFS."}),"\n",(0,n.jsx)(t.h2,{id:"integrating-testfairy",children:"Integrating TestFairy"}),"\n",(0,n.jsx)(t.p,{children:"To integrate TestFairy with your preferred SAML/SSO provider, refer to our integration guides for each supported provider below. These guides provide detailed instructions on configuring TestFairy with Okta, OneLogin, Ping, Oracle, IBM, and Azure ADFS, respectively :"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"center"}}),(0,n.jsx)(t.th,{})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,a.A)("/img/testfairy/acct-mgmt/Okta_Logo.png"),alt:"OKTA logo",width:"100"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/testfairy/security/sso/okta",children:"OKTA"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,a.A)("/img/testfairy/acct-mgmt/onelogin-logo.png"),alt:"onelogin logo"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/testfairy/security/sso/onelogin",children:"OneLogin"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,a.A)("/img/testfairy/acct-mgmt/azure-logo.png"),alt:"Azure active directory logo",width:"200"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/testfairy/security/sso/azure",children:"Azure Active Directory"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,a.A)("/img/testfairy/acct-mgmt/google-apps-logo.png"),alt:"google apps logo",width:"200"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/testfairy/security/sso/google",children:"Google Apps"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,a.A)("/img/testfairy/acct-mgmt/pingidentity-logo.png"),alt:"pingidentity logo",width:"100"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/testfairy/security/sso/ping-id",children:"Ping Identity"})})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["Once SSO is properly configured, the TestFairy login page will be replaced with a ",(0,n.jsx)(t.strong,{children:"Login with SSO"})," button. This button serves as the entry point to authenticate via your SSO provider and gain access to TestFairy."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},19365:(e,t,r)=>{r.d(t,{A:()=>i});r(96540);var n=r(18215);const s={tabItem:"tabItem_Ymn6"};var a=r(74848);function i(e){let{children:t,hidden:r,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,i),hidden:r,children:t})}},11470:(e,t,r)=>{r.d(t,{A:()=>S});var n=r(96540),s=r(18215),a=r(23104),i=r(56347),o=r(205),l=r(57485),u=r(31682),c=r(89466);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function g(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const s=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(s.location.search);t.set(a,e),s.replace({...s.location,search:t.toString()})}),[a,s])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,a=h(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[u,d]=p({queryString:r,groupId:s}),[f,y]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,a]=(0,c.Dv)(r);return[s,(0,n.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:s}),m=(()=>{const e=u??f;return g({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),y(e)}),[d,y,a]),tabValues:a}}var y=r(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function v(e){let{className:t,block:r,selectedValue:n,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),s=o[r].value;s!==n&&(u(t),i(s))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:d,onClick:c,...a,className:(0,s.A)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function x(e){let{lazy:t,children:r,selectedValue:s}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function j(e){const t=f(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,b.jsx)(v,{...e,...t}),(0,b.jsx)(x,{...e,...t})]})}function S(e){const t=(0,y.A)();return(0,b.jsx)(j,{...e,children:d(e.children)},String(t))}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(96540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);