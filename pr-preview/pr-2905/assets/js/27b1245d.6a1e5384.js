"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[98184],{58053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var r=s(74848),i=s(28453);const t={id:"expression-language-extensions",title:"Expression Language Extensions",sidebar_label:"Expression Language Extensions",keywords:["api","api-fortress","expression-language-extensions"]},o=void 0,a={id:"api-testing/on-prem/reference/expression-language-extensions",title:"Expression Language Extensions",description:"Legacy DocumentationYou're viewing legacy documentation for API Fortress (deployed via an on-premises container). To view documentation for the new SaaS version of API Fortress &#8212; now known as Sauce Labs API Testing and Monitoring (with Sauce Connect tunnels) &#8212; see API Testing on the Sauce Labs Cloud.",source:"@site/docs/api-testing/on-prem/reference/expression-language-extensions.md",sourceDirName:"api-testing/on-prem/reference",slug:"/api-testing/on-prem/reference/expression-language-extensions",permalink:"/sauce-docs/pr-preview/pr-2905/api-testing/on-prem/reference/expression-language-extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/api-testing/on-prem/reference/expression-language-extensions.md",tags:[],version:"current",lastUpdatedBy:"Logan Graham",lastUpdatedAt:1712351123e3,frontMatter:{id:"expression-language-extensions",title:"Expression Language Extensions",sidebar_label:"Expression Language Extensions",keywords:["api","api-fortress","expression-language-extensions"]},sidebar:"apif",previous:{title:"Expression",permalink:"/sauce-docs/pr-preview/pr-2905/api-testing/on-prem/reference/expression"},next:{title:"Flow (Pause or Stop a Test)",permalink:"/sauce-docs/pr-preview/pr-2905/api-testing/on-prem/logical-components/flow"}},l={},d=[{value:"Preamble",id:"preamble",level:2},{value:"<code>anyArrray.pick(n)</code>",id:"anyarrraypickn",level:3},{value:"<code>anyArrray.pick()</code>",id:"anyarrraypick",level:3},{value:"WSUtil",id:"wsutil",level:3},{value:"<code>N</code>",id:"n",level:3},{value:"<code>D</code>",id:"d",level:3},{value:"<code>WSCrypto</code>",id:"wscrypto",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Head:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s,{children:(0,r.jsx)("meta",{name:"robots",content:"noindex"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Legacy Documentation"}),(0,r.jsx)("br",{}),"You're viewing legacy documentation for API Fortress (deployed via an on-premises container). To view documentation for the new SaaS version of API Fortress \u2014 now known as Sauce Labs API Testing and Monitoring (with Sauce Connect tunnels) \u2014 see ",(0,r.jsx)(n.a,{href:"/api-testing/",children:"API Testing on the Sauce Labs Cloud"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"preamble",children:"Preamble"}),"\n",(0,r.jsxs)(n.p,{children:["The API Fortress expression language is mostly used to identify a path in a payload, or reference a variable. But there's more to it. A number of extensions are available to generate calculated data, determine the quality of a value and so on. These ",(0,r.jsx)(n.em,{children:"extensions"})," can be used in any field that can be evaluated, which means in all ",(0,r.jsx)(n.em,{children:"expression"})," fields, and all the fields where the value is wrapped in the ",(0,r.jsx)(n.em,{children:"${...}"})," brackets."]}),"\n",(0,r.jsx)(n.h3,{id:"anyarrraypickn",children:(0,r.jsx)(n.code,{children:"anyArrray.pick(n)"})}),"\n",(0,r.jsx)(n.p,{children:"Given any array, you can ask the system to create a random subset of it. One typical usage is when an iterator would turn out to be huge, and you prefer to cherry-pick a few items."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"payload.artists.pick(5)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The code above will return an array of 5 random elements off the ",(0,r.jsx)(n.em,{children:"artists"})," array."]}),"\n",(0,r.jsx)(n.p,{children:"A hands on example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<each expression="payload.artists.pick(5)"> <assert-exists expression="_1.href" /> <assert-exists expression="_1.id" /> ... </each>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"anyarrraypick",children:(0,r.jsx)(n.code,{children:"anyArrray.pick()"})}),"\n",(0,r.jsx)(n.p,{children:"Similar to the pick(n), this method will pick one random item off an array, and return it."}),"\n",(0,r.jsx)(n.h3,{id:"wsutil",children:"WSUtil"}),"\n",(0,r.jsx)(n.p,{children:"This is the main extension. It supports many useful functions."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"composeUrl(base : String, params : Map) : String :"})," creates a valid URL string based on these 2 params."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"WSUtil.composeUrl('http://www.testurlwhatever.com/index',['page':1] )\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"http://www.testurlwhatever.com/index?page=1",children:"http://www.testurlwhatever.com/index?page=1"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"WSUtil.composeUrl('http://www.testurlwhatever.com/index?offset=5', ['page':1] )\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://www.testurlwhatever.com/index?offset=5&page=1\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"exists(object : Object) : Boolean :"}),' an XML and JSON existence state is different by definition. Use this in an "if statement" if a test should work both with JSON and XML']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"contains(substring : String, object : Object) : Boolean :"}),' returns true whether the string version of "object" contains the "substring" sub-string.']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"WSUtil.contains('banana', payload.fruit.name)\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isInteger(string: String) , isFloat(string: String), isUrl(string: String), isEmail(string: String), isPhoneNumber(string: String), isBoolean(string: String), isArray(object: Object), isMap(object: Object), isCreditCard(string: String) : Boolean :"})," evaluate the nature of a data item"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"n",children:(0,r.jsx)(n.code,{children:"N"})}),"\n",(0,r.jsx)(n.p,{children:"Utility functions for numbers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"random(min: Int, max: Int) : Int"})," : generates a random integer number between min and max."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"N.random(10,30)\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"random(min: Int, max: Int, quantity: Int) : List :"})," generates a list of random numbers"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"N.random(10,30,5)\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"d",children:(0,r.jsx)(n.code,{children:"D"})}),"\n",(0,r.jsx)(n.p,{children:"Plays with dates."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"nowMillis() : Int :"})," returns the current Unix epoch in milliseconds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"plusDays(millis: Int, days: Int): Int"})," : returns the provided milliseconds, plus the provided number of days"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"plusHours(millis: Int, hours: Int): Int"})," : returns the provided milliseconds, plus the provided number of hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"minusDays(millis: Int, days: Int) : Int"})," : returns the provided milliseconds, minus the provided number of days"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"minusHours(millis: Int, hours: Int): Int"})," : returns the provided milliseconds, minus the provided number of hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"format(millis: Int, format: String) : String"})," : creates a timestamp with the given format, using the current timezone"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"format(millis: Int, format: String, timezone: String) : String :"})," creates a timestamp with the given format, based on the provided timezone id"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"format(millis: Int, format: String, offset: Int) : String :"})," creates a timestamp with the given format, based on the provided timezone offset"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"parse(timestamp: String) : Int"})," : tries to parse the provided timestamp and convert it in milliseconds. It will use current timezone if not provided"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"parse(timestamp: String, timezone: String) : Int"})," : parses the provided timestamp and coverts it in milliseconds with the provided timezone id"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"parse(timestamp: String, offset: Int) : Int"})," : parses the provided timestamp and coverts it in milliseconds with the provided timezone offset."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Here's the conversion map for formats:"}),"\n",(0,r.jsx)(n.p,{children:"Symbol Meaning Presentation Examples"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"G era text AD\nC century of era (>=0) number 20\nY year of era (>=0) year 1996"}),"\n",(0,r.jsx)(n.p,{children:"x weekyear year 1996\nw week of weekyear number 27\ne day of week number 2\nE day of week text Tuesday; Tue"}),"\n",(0,r.jsx)(n.p,{children:"y year year 1996\nD day of year number 189\nM month of year month July; Jul; 07\nd day of month number 10"}),"\n",(0,r.jsxs)(n.p,{children:["a halfday of day text PM\nK hour of halfday (0",(0,r.jsx)(n.del,{children:"11) number 0\nh clockhour of halfday (1"}),"12) number 12"]}),"\n",(0,r.jsxs)(n.p,{children:["H hour of day (0",(0,r.jsx)(n.del,{children:"23) number 0\nk clockhour of day (1"}),"24) number 24\nm minute of hour number 30\ns second of minute number 55\nS fraction of second millis 978"]}),"\n",(0,r.jsx)(n.p,{children:"z time zone text Pacific Standard Time; PST\nZ time zone offset/id zone -0800; -08:00; America/Los_Angeles"}),"\n",(0,r.jsx)(n.h3,{id:"wscrypto",children:(0,r.jsx)(n.code,{children:"WSCrypto"})}),"\n",(0,r.jsx)(n.p,{children:"Encryption utilities."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"md5(input : String) : String"})," : returns the md5 hash of the input string"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hash(input : String) : String :"})," returns the SHA-1 hash of the input string, hex encoded"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"genKey() : String :"})," generates a random key"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"base64(action: String, input: String)"})," : decodes from or encodes into a base64 string. Action can either be 'encode' or 'decode'"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"WSCrypto.base64('encode','whatever')\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"base64Encode(input : Array[Byte]) : String :"})," encodes a byte array in a base64 string."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"sha256(input : String) : String"})," : creates an hash of input using the SHA-256 algorithm"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"sha256(input : String, secret : String) : String :"})," encrypts input with secret using the HMAC-SHA256 algorithm"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hmacSha1(input : String, secret : String) : String"})," : encrypts input with secret using the HMAC-SHA1 algorithm"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"toHex(input : Array[Byte]) : String"})," : creates an hex version of a byte array"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(96540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);