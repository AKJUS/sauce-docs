"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[86423],{89538:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var a=r(74848),t=r(28453);r(11470),r(19365),r(86025);const s={id:"apache",title:"Integrating Apache Traffic Server",sidebar_label:"Apache Traffic Server",description:"Configure Apache Traffic Server to use Backtrace's Invoker as a crash log helper."},i=void 0,c={id:"error-reporting/platform-integrations/apache",title:"Integrating Apache Traffic Server",description:"Configure Apache Traffic Server to use Backtrace's Invoker as a crash log helper.",source:"@site/docs/error-reporting/platform-integrations/apache.md",sourceDirName:"error-reporting/platform-integrations",slug:"/error-reporting/platform-integrations/apache",permalink:"/error-reporting/platform-integrations/apache",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/error-reporting/platform-integrations/apache.md",tags:[],version:"current",lastUpdatedBy:"Loredana",lastUpdatedAt:1692688198e3,frontMatter:{id:"apache",title:"Integrating Apache Traffic Server",sidebar_label:"Apache Traffic Server",description:"Configure Apache Traffic Server to use Backtrace's Invoker as a crash log helper."},sidebar:"backtrace",previous:{title:"Session Replay",permalink:"/error-reporting/platform-integrations/session-replay"},next:{title:"Minidump",permalink:"/error-reporting/platform-integrations/minidump"}},o={},l=[{value:"What You&#39;ll Need",id:"what-youll-need",level:2},{value:"Set Up Helper Scripts",id:"set-up-helper-scripts",level:2},{value:"<code>invoker.sh</code>",id:"invokersh",level:3},{value:"<code>backtrace.sh</code>",id:"backtracesh",level:3},{value:"Configure ATS Crash Log Helper",id:"configure-ats-crash-log-helper",level:2},{value:"Verify Invoker Launch",id:"verify-invoker-launch",level:2},{value:"Test",id:"test",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Launching <code>backtrace.sh</code> Manually",id:"launching-backtracesh-manually",level:3},{value:"Verifying <code>ptrace</code> Installation",id:"verifying-ptrace-installation",level:3},{value:"Verifying Coroner Installation",id:"verifying-coroner-installation",level:3},{value:"Launching <code>backtrace.sh</code> Manually",id:"launching-backtracesh-manually-1",level:3},{value:"Ensuring ATS Has Permission to Run <code>invoker.sh</code>",id:"ensuring-ats-has-permission-to-run-invokersh",level:3},{value:"Verifying Invocation of <code>backtrace.sh</code> and Generation of <code>.btt</code> File",id:"verifying-invocation-of-backtracesh-and-generation-of-btt-file",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This document provides instructions on configuring Apache Traffic Server (ATS) to use Backtrace's Invoker as a crash log helper. The workflow upon ATS crash is as follows:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["ATS launches the invoker on startup, which monitors the ",(0,a.jsx)(n.code,{children:"traffic_server"})," process."]}),"\n",(0,a.jsxs)(n.li,{children:["Upon the ",(0,a.jsx)(n.code,{children:"traffic_server"})," crash, the invoker launches ",(0,a.jsx)(n.code,{children:"ptrace"})," via a script that provides metadata."]}),"\n",(0,a.jsxs)(n.li,{children:["This script, in turn, submits the crash file generated by ",(0,a.jsx)(n.code,{children:"ptrace"})," to the coroner object store."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"what-youll-need",children:"What You'll Need"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["A Backtrace account (",(0,a.jsx)(n.a,{href:"https://backtrace.io/login",children:"log in"})," or sign up for a ",(0,a.jsx)(n.a,{href:"https://backtrace.io/sign-up",children:"free trial license"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Your subdomain name (used to connect to your Backtrace instance). For example, ",(0,a.jsx)(n.code,{children:"https://example-subdomain.sp.backtrace.io"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["A Backtrace project and a ",(0,a.jsx)(n.a,{href:"/error-reporting/project-setup/submission-url",children:"submission token"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Apache Traffic Server (tested with version 6.2.0)"}),"\n",(0,a.jsxs)(n.li,{children:["Coroner Server running and accessible from the ATS machine. (See ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/coroner/server-installation/",children:"Coroner Server installation"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:["Coroner Client package on the ATS machine. (See ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/coroner/client-getting-started/",children:"Coroner Client Installation"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:["Backtrace Ptrace package installed on the ATS machine. (See ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/traces-coroner/",children:"Ptrace Installation"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:["Backtrace Invoker package installed on the ATS machine: ",(0,a.jsx)(n.code,{children:"$ sudo apt-get install backtrace-invoker"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["(Optional but recommended) - Install the morgue command-line queryingtool: (See: ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/morgue/#installation",children:"Morgue Installation"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"set-up-helper-scripts",children:"Set Up Helper Scripts"}),"\n",(0,a.jsx)(n.h3,{id:"invokersh",children:(0,a.jsx)(n.code,{children:"invoker.sh"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\nexec /opt/backtrace/bin/invoker -t "/home/ats/backtrace.sh %p" $@\n'})}),"\n",(0,a.jsx)(n.h3,{id:"backtracesh",children:(0,a.jsx)(n.code,{children:"backtrace.sh"})}),"\n",(0,a.jsxs)(n.p,{children:["This script calls ",(0,a.jsx)(n.code,{children:"ptrace"})," with any metadata you wish to gather and then submits it to the coroner. Here, we're extracting the version number using ",(0,a.jsx)(n.code,{children:"traffic_ctl"}),", but feel free to add any additional metadata that you need."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\n\n## Change the following as needed\nPROJECT=ats\nTOKEN=ats\nDM=/export/ats\nCF=/etc/coronerd/coroner.cf\n\nPATH=/opt/backtrace/bin:/usr/bin:/bin:$PATH\n\n# Add commands to gather any metadata that you wish to pass to the ptrace invocation\nVERSION=`/opt/ts/bin/traffic_ctl metric get proxy.node.version.manager.short|cut -d \' \' -f 2`\n\nmkdir -p ${DM}/\nptrace --kv="version:$VERSION" $1 -O ${DM}/ats\nif test "$?" == "0"; then\n   coroner -c $CF put -u ${PROJECT} ${TOKEN} ${DM}/*.btt\n\nfi\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Ensure that your ",(0,a.jsx)(n.code,{children:"traffic_server"})," processes can run these scripts and have permission to write to the destination folder specified in ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," (referred to by the variable ",(0,a.jsx)(n.code,{children:"DM"}),")."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ chmod +x invoker.sh\n$ chmod +x backtrace.sh\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configure-ats-crash-log-helper",children:"Configure ATS Crash Log Helper"}),"\n",(0,a.jsxs)(n.p,{children:["To configure the ATS Crash Log Helper, add or edit the following line in ",(0,a.jsx)(n.code,{children:"/etc/trafficserver/records.config"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CONFIG proxy.config.crash_log_helper STRING /home/ats/invoker.sh\n"})}),"\n",(0,a.jsx)(n.h2,{id:"verify-invoker-launch",children:"Verify Invoker Launch"}),"\n",(0,a.jsx)(n.p,{children:"After making the configuration changes, restart ATS and verify that the invoker is running by executing the following commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ sudo /bin/trafficserver restart\n$ ps aux | grep invoker\nnobody   11616  0.0  0.1   4336  1396 ?        T    16:43   0:00 /opt/backtrace/bin/invoker -t /home/ats/backtrace.sh %p --syslog --wait --host x86_64-unknown-linux-gnu\n"})}),"\n",(0,a.jsx)(n.h2,{id:"test",children:"Test"}),"\n",(0,a.jsxs)(n.p,{children:["To test the setup, send a ",(0,a.jsx)(n.code,{children:"SIGABRT"})," signal to traffic_server:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ sudo kill -SIGABRT\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then, verify via the morgue tool that the number of crashes for the project has increased:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"morgue list myproj\n...\n\n...\n     Occurrences: 1 (100.00%)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsxs)(n.h3,{id:"launching-backtracesh-manually",children:["Launching ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," Manually"]}),"\n",(0,a.jsxs)(n.p,{children:["To check for any errors, you can manually launch ",(0,a.jsx)(n.code,{children:"backtrace.sh"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./backtrace.sh 2291\n/export/ats.2291.1461080575.btt\n7750a16bfbb8667ca39de9a568c86897944a476143074275631cd13c842ce74d => 607dcbc50c634580951c0fdf832b2fc9\n"})}),"\n",(0,a.jsx)(n.p,{children:"If there are any errors, continue with the troubleshooting steps below to verify the correct installation of Backtrace components and proper permissions."}),"\n",(0,a.jsxs)(n.h3,{id:"verifying-ptrace-installation",children:["Verifying ",(0,a.jsx)(n.code,{children:"ptrace"})," Installation"]}),"\n",(0,a.jsxs)(n.p,{children:["Running ",(0,a.jsx)(n.code,{children:"/opt/backtrace/bin/ptrace"})," on a process you own should generate a ",(0,a.jsx)(n.code,{children:".btt"})," file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ps\n  PID TTY          TIME CMD\n 2291 pts/7    00:00:00 bash\n11709 pts/7    00:00:00 ps\n\n$ /opt/backtrace/bin/ptrace 2291\n/home/test/bash.2291.1461078102.btt\n\n$ ls *.btt\nbash.2291.1461078102.btt\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If the file is not generated, verify your ",(0,a.jsx)(n.code,{children:"ptrace"})," installation. Refer to ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/ptrace/",children:"Ptrace Installation"})," for assistance."]}),"\n",(0,a.jsx)(n.h3,{id:"verifying-coroner-installation",children:"Verifying Coroner Installation"}),"\n",(0,a.jsx)(n.p,{children:"To confirm that you can send snapshots to the server using coroner, perform the following steps:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ coroner -c put project1 project1_token bash.2291.1461078102.btt\n7750a16bfbb8667ca39de9a568c86897944a476143074275631cd13c842ce74d => 607dcbc50c634580951c0fdf832b2fc9\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you encounter issues, verify your coroner client installation. See ",(0,a.jsx)(n.a,{href:"/error-reporting/advanced/coroner/client-getting-started/",children:"Coroner Client Installation"})," for more information."]}),"\n",(0,a.jsxs)(n.h3,{id:"launching-backtracesh-manually-1",children:["Launching ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," Manually"]}),"\n",(0,a.jsxs)(n.p,{children:["Try launching ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," manually to ensure there are no errors:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./backtrace.sh 2291\n/export/ats.2291.1461080575.btt\n7750a16bfbb8667ca39de9a568c86897944a476143074275631cd13c842ce74d => 607dcbc50c634580951c0fdf832b2fc9\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"ensuring-ats-has-permission-to-run-invokersh",children:["Ensuring ATS Has Permission to Run ",(0,a.jsx)(n.code,{children:"invoker.sh"})]}),"\n",(0,a.jsxs)(n.p,{children:["Make sure that ATS has the necessary permissions to execute ",(0,a.jsx)(n.code,{children:"invoker.sh"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ chmod +x /path/to/invoker.sh\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"verifying-invocation-of-backtracesh-and-generation-of-btt-file",children:["Verifying Invocation of ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," and Generation of ",(0,a.jsx)(n.code,{children:".btt"})," File"]}),"\n",(0,a.jsxs)(n.p,{children:["You can verify if ",(0,a.jsx)(n.code,{children:"backtrace.sh"})," is being invoked and generating the ",(0,a.jsx)(n.code,{children:".btt"})," file in the desired location by commenting out the last 3 lines of ",(0,a.jsx)(n.code,{children:"backtrace.sh"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},19365:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);var a=r(18215);const t={tabItem:"tabItem_Ymn6"};var s=r(74848);function i(e){let{children:n,hidden:r,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,i),hidden:r,children:n})}},11470:(e,n,r)=>{r.d(n,{A:()=>y});var a=r(96540),t=r(18215),s=r(23104),i=r(56347),c=r(205),o=r(57485),l=r(31682),d=r(89466);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:a,default:t}}=e;return{value:n,label:r,attributes:a,default:t}}))}(r);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const t=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})}),[s,t])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,s=u(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[l,h]=f({queryString:r,groupId:t}),[g,b]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,s]=(0,d.Dv)(r);return[t,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:t}),v=(()=>{const e=l??g;return p({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{v&&o(v)}),[v]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),b(e)}),[h,b,s]),tabValues:s}}var b=r(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=r(74848);function x(e){let{className:n,block:r,selectedValue:a,selectValue:i,tabValues:c}=e;const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const n=e.currentTarget,r=o.indexOf(n),t=c[r].value;t!==a&&(l(n),i(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":r},n),children:c.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:h,onClick:d,...s,className:(0,t.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function j(e){let{lazy:n,children:r,selectedValue:t}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function k(e){const n=g(e);return(0,m.jsxs)("div",{className:(0,t.A)("tabs-container",v.tabList),children:[(0,m.jsx)(x,{...e,...n}),(0,m.jsx)(j,{...e,...n})]})}function y(e){const n=(0,b.A)();return(0,m.jsx)(k,{...e,children:h(e.children)},String(n))}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var a=r(96540);const t={},s=a.createContext(t);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);