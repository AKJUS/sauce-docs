"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[30417],{73233:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>r});var i=t(74848),s=t(28453);const r=[];function a(e){const n={a:"a",code:"code",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Variable Name"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_USERNAME"})}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Your Sauce Labs username. You can get this from the header of app.saucelabs.com"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_ACCESS_KEY"})}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Your Sauce Labs access key. You can get this from the header of app.saucelabs.com"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_REGION"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["The region you'd like to run your Visual tests in. Defaults to ",(0,i.jsx)(n.code,{children:"us-west-1"})," if not supplied. Can be one of the following: ",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.code,{children:"'eu-central-1'"}),", ",(0,i.jsx)(n.code,{children:"'us-west-1'"})," or ",(0,i.jsx)(n.code,{children:"'us-east-4'"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BUILD_NAME"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The name you would like to appear in the Sauce Visual dashboard."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BRANCH"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The branch name you would like to associate this build with. We recommend using your current VCS branch in CI."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_DEFAULT_BRANCH"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["The main branch name you would like to associate this build with. Usually ",(0,i.jsx)(n.code,{children:"main"})," or ",(0,i.jsx)(n.code,{children:"master"})," or alternatively the branch name your current branch was derived from. ",(0,i.jsx)(n.a,{href:"/sauce-docs/pr-preview/pr-2911/visual-testing/workflows/ci",children:"Follow me to learn more"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_PROJECT"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The label / project you would like to associate this build with."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BUILD_ID"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["For advanced users, a user-supplied SauceLabs Visual build ID. Can be used to create builds in advance using the GraphQL API. This can be used to parallelize tests with multiple browsers, shard, or more. ",(0,i.jsx)("br",{})," By default, this is not set and we create / finish a build during setup / teardown."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_CUSTOM_ID"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"For advanced users, a user-supplied custom ID to identify this build. Can be used in CI to identify / check / re-check the status of a single build. Usage suggestions: CI pipeline ID."})]})]})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},7886:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>r});var i=t(74848),s=t(28453);const r=[];function a(e){const n={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The maximum number of scrolls and stitches in a full page screenshot is 10."})})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},96611:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>r});var i=t(74848),s=t(28453);const r=[];function a(e){const n={a:"a",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This document assumes an existing Python 3+ project. Alternatively, you can take a look to our ",(0,i.jsx)(n.a,{href:"#examples",children:"example repository"})," for quick-start projects."]}),"\n",(0,i.jsx)(n.p,{children:"Sauce Visual plugin for Python provides an interface for interacting with Sauce Labs Visual and a running Selenium session on Sauce."})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8775:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>r});var i=t(74848),s=t(28453);const r=[];function a(e){const n={p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(n.p,{children:"Sauce Visual Binding allows to configure which kinds of changes should be effective specific regions of the snapshot."})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},27182:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>r});var i=t(74848),s=t(28453);const r=[];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Sauce Visual allows selective diffing that permits to ignore changes from a certain kind (",(0,i.jsxs)(n.em,{children:["more information ",(0,i.jsx)(n.a,{href:"/visual-testing/selective-diffing/",children:"here"})]}),")."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Selective diffing is only available with ",(0,i.jsx)(n.code,{children:"Balanced"})," diffing method ",(0,i.jsx)(n.strong,{children:"AND"})," with DOM capture enabled."]})})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},2101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>u,toc:()=>m});var i=t(74848),s=t(28453),r=t(73233),a=t(96611),o=t(27182),l=t(7886),c=t(8775);const d={sidebar_label:"Python"},h="Python Integration",u={id:"visual-testing/integrations/python",title:"Python Integration",description:"Introduction",source:"@site/docs/visual-testing/integrations/python.md",sourceDirName:"visual-testing/integrations",slug:"/visual-testing/integrations/python",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/python",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/visual-testing/integrations/python.md",tags:[],version:"current",lastUpdatedBy:"Alex Plischke",lastUpdatedAt:172480197e4,frontMatter:{sidebar_label:"Python"},sidebar:"docs",previous:{title:"WebdriverIO",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/webdriverio"},next:{title:"Python (Robot Framework)",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/python-robot-framework"}},p={},m=[{value:"Introduction",id:"introduction",level:2},...a.RM,{value:"Frameworks",id:"frameworks",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Step 1 - Import and instantiate the Client",id:"step-1---import-and-instantiate-the-client",level:3},{value:"Step 2 - Create the Build",id:"step-2---create-the-build",level:3},{value:"Step 3 - Take a Snapshot",id:"step-3---take-a-snapshot",level:3},{value:"Step 4 - Finish the Build",id:"step-4---finish-the-build",level:3},{value:"Visual Snapshot Options &amp; Examples",id:"visual-snapshot-options--examples",level:2},{value:"Full Page Screenshots",id:"full-page-screenshots",level:3},...l.RM,{value:"DOM Capture",id:"dom-capture",level:3},{value:"Clip to an Element",id:"clip-to-an-element",level:3},{value:"Ignore Regions",id:"ignore-regions",level:3},{value:"Selective Diffing",id:"selective-diffing",level:3},...o.RM,{value:"Area-specific configuration",id:"area-specific-configuration",level:4},...c.RM,{value:"Environment variables",id:"environment-variables",level:2},...r.RM,{value:"Examples",id:"examples",level:2}];function x(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"python-integration",children:"Python Integration"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(a.Ay,{}),"\n",(0,i.jsxs)(n.p,{children:["A generic ",(0,i.jsx)(n.code,{children:"SauceLabsVisual"})," client is exposed by the package to allow interaction with any Python based tooling. We also offer some additional ",(0,i.jsx)(n.a,{href:"#frameworks",children:"framework-specific options"})," which we'll expand support for over time."]}),"\n",(0,i.jsx)(n.h2,{id:"frameworks",children:"Frameworks"}),"\n",(0,i.jsx)(n.p,{children:"Currently, we support the following frameworks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Robot Framework ",(0,i.jsx)(n.a,{href:"/visual-testing/integrations/python-robot-framework/",children:"(View Docs Here)"})]}),"\n",(0,i.jsx)(n.li,{children:"Generic Python Client"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you're looking for support with additional frameworks, you can submit a feature request on our ",(0,i.jsx)(n.a,{href:"https://portal.productboard.com/sauceprod/2-sauce-labs-portal/tabs/4-under-consideration/submit-idea",children:"Productboard"})," to help us prioritize which SDKs we roll out first."]})}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Install the Sauce Labs Visual python package in your project, and optionally append it to your dependencies."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"pip install saucelabs_visual\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This client currently requires that you're running an existing Webdriver session on Sauce and can access the session ID for interaction with our Visual API."})}),"\n",(0,i.jsx)(n.p,{children:"For more technical users, we also expose a generic SauceLabsVisual client which can be used to interact with the Visual API for a running Selenium / Webdriver session on Sauce in case your framework is not officially supported yet."}),"\n",(0,i.jsx)(n.p,{children:"Generally, the workflow would be as follows:"}),"\n",(0,i.jsx)(n.h3,{id:"step-1---import-and-instantiate-the-client",children:"Step 1 - Import and instantiate the Client"}),"\n",(0,i.jsx)(n.p,{children:"Import the client and store it in a variable you can access globally in your tests / framework:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from saucelabs_visual.client import SauceLabsVisual\n\nclient = SauceLabsVisual()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-2---create-the-build",children:"Step 2 - Create the Build"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Either manually or in a ",(0,i.jsx)(n.code,{children:"beforeAll"})," hook that is only triggered once in your framework, create the Visual build that we'll associate all screenshots with."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Creates a build and stores the build meta in the client instance for processing & interaction later\nclient.create_build(\n    name=\'My Python Build\',\n    # Any other named parameters that are available. See the source / docs for more information on\n    # options for customizing your build.\n    # project="my-project",\n    # branch="my-ci-branch",\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"step-3---take-a-snapshot",children:"Step 3 - Take a Snapshot"}),"\n",(0,i.jsx)(n.p,{children:"Take a visual snapshot in each test where you'd like to check for visual changes"}),"\n",(0,i.jsx)(n.p,{children:"We recommend creating a helper class / function within your framework of choice to reduce the duplication / need to pass the test metadata (such as test / suite name) into each call."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'session_id = \'YOUR_SESSION_ID\'  # Get your Selenium session ID from your framework\nclient.create_snapshot_from_webdriver(\n    name="Snapshot Name",\n    session_id=session_id,\n    # Other optional items to customize your snapshots / associate them with the current test run\n    # test_name="TEST_NAME_FROM_YOUR_FRAMEWORK",\n    # suite_name="SUITE_NAME_FROM_YOUR_FRAMEWORK",\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"step-4---finish-the-build",children:"Step 4 - Finish the Build"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Either manually or in an ",(0,i.jsx)(n.code,{children:"afterAll"})," hook that is only triggered once at the end of your framework, finish the Visual build to let Sauce Visual know we're ready to present the results in the UI."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Finish the currently opened build associated with this instance\nclient.finish_build()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"visual-snapshot-options--examples",children:"Visual Snapshot Options & Examples"}),"\n",(0,i.jsx)(n.h3,{id:"full-page-screenshots",children:"Full Page Screenshots"}),"\n",(0,i.jsxs)(n.p,{children:["By default, only the current viewport is capture when taking a screenshot. By passing a ",(0,i.jsx)(n.code,{children:"FullPageConfig"})," instance in the ",(0,i.jsx)(n.code,{children:"full_page_config"})," named param you can enable and customize the behavior for our scroll-and-stitch snapshots. View the ",(0,i.jsx)(n.code,{children:"FullPageConfig"})," class in our ",(0,i.jsx)(n.a,{href:"https://github.com/saucelabs/visual-sdks/blob/main/visual-python/src/saucelabs_visual/typing.py",children:"visual SDKs"})," for up to date inline docs for all properties."]}),"\n",(0,i.jsx)(l.Ay,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from saucelabs_visual.typing import FullPageConfig\n# ...\nvisual_client.create_snapshot_from_webdriver(\n    \"Inventory Page\",\n    session_id=session_id,\n    full_page_config=FullPageConfig(\n        # Can customize full page behavior by customizing values here. Or omit completely to\n        # disable full page screenshots:\n        # ex:\n        # scrollLimit=10,\n        # hideAfterFirstScroll=['.fixed-header', '#cookie-banner']\n        # delayAfterScrollMs=200,\n    ),\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dom-capture",children:"DOM Capture"}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"capture_dom"})," named param with a value of ",(0,i.jsx)(n.code,{children:"True"})," to enable DOM capture during a snapshot."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'visual_client.create_snapshot_from_webdriver(\n    "Inventory Page",\n    session_id=session_id,\n    capture_dom=True,\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"clip-to-an-element",children:"Clip to an Element"}),"\n",(0,i.jsxs)(n.p,{children:["If you'd like to test a specific component or area of a page you can use the ",(0,i.jsx)(n.code,{children:"clip_selector"})," named param in combination with a CSS selector to clip the screenshot and DOM comparison. When enabled, we'll crop the screenshot to the coordinates of the element and constrain our DOM comparison to that area. We accept any ",(0,i.jsx)(n.code,{children:"document.querySelector"})," compatible string / CSS selector as the value."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"visual_client.create_snapshot_from_webdriver(\n    \"Inventory Page\",\n    session_id=session_id,\n    clip_selector='.my-css-selector',\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can also pass an element directly if you've already queried one from selenium using the ",(0,i.jsx)(n.code,{children:"clip_element"})," named param:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"add_to_cart_button = driver.find_element(By.CSS_SELECTOR, '.btn_inventory')\nvisual_client.create_snapshot_from_webdriver(\n    \"Inventory Page\",\n    session_id=session_id,\n    clip_element=add_to_cart_button,\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ignore-regions",children:"Ignore Regions"}),"\n",(0,i.jsxs)(n.p,{children:["You can ignore one or more areas on the page by using the ",(0,i.jsx)(n.code,{children:"ignore_regions"})," named param. Ignore regions accepts an array of full region definitions (width, height, x & y coordinates). We also support passing elements directly using the ",(0,i.jsx)(n.code,{children:"ignore_elements"})," named param to bypass region calculation / creation. See below for examples for both."]}),"\n",(0,i.jsx)(n.p,{children:"Regions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from saucelabs_visual.typing import IgnoreRegion\n# ...\nvisual_client.create_snapshot_from_webdriver(\n    "Inventory Page",\n    session_id=session_id,\n    # Use coordinates on a page to create manual regions.\n    ignore_regions=[\n        IgnoreRegion(x=100, y=100, width=100, height=100)\n    ],\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:"Elements:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from saucelabs_visual.typing import IgnoreElementRegion\n# ...\nadd_to_cart_button = driver.find_element(By.CSS_SELECTOR, '.btn_inventory')\nvisual_client.create_snapshot_from_webdriver(\n    \"Inventory Page\",\n    session_id=session_id,\n    # Ignore certain areas of a page using elements / selectors.\n    ignore_elements=[\n        IgnoreElementRegion(\n            # Ignore one or more elements returned by find_elements/find_element.\n            element=driver.find_elements(By.CSS_SELECTOR, '.inventory_item_img'),\n        ),\n        IgnoreElementRegion(\n            # Can also pass an element that has been previously found via the driver\n            element=add_to_cart_button,\n        ),\n    ],\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"selective-diffing",children:"Selective Diffing"}),"\n",(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(n.h4,{id:"area-specific-configuration",children:"Area-specific configuration"}),"\n",(0,i.jsx)(c.Ay,{}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    visual_client.create_snapshot_from_webdriver(\n        "login-page",\n        session_id=session_id,\n        diffing_method=DiffingMethod.BALANCED,        \n        capture_dom=True,\n        ignore_elements=[\n            # Any change will be ignored.\n            IgnoreElementRegion(\n                element=driver.find_element(By.NAME, "user-name")\n                enable_only=[]\n            ),\n            # Only style changes won\'t be ignored.\n            IgnoreElementRegion(\n                element=driver.find_element(By.NAME, "password")\n                enable_only=[\'style\']\n            ),\n        ],\n    )\n'})}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,i.jsx)(n.p,{children:"Below are the environment variables available in the Sauce Visual Python plugin. Keep in mind that the variables defined in code / configuration have precedence over these."}),"\n",(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Example projects are available ",(0,i.jsx)(n.a,{href:"https://github.com/saucelabs/visual-examples/tree/main/python",children:"here"}),"."]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);