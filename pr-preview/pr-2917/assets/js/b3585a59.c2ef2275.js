"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[96129],{44252:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var n=s(74848),a=s(28453),i=s(86025);const r={id:"using-the-api",title:"Using the API (for CI/CD and More)",sidebar_label:"Using the API",description:"A guide showing you various ways to call the API. This is useful for those that want to use the platform to run tests during continuous deployments.",keywords:["cicd","jenkins","bamboo","microsoft tfs","team foundation server","gitlab ci/cd","travisci"]},o="Unauthenticated Endpoints",c={id:"api-testing/on-prem/api/using-the-api",title:"Using the API (for CI/CD and More)",description:"A guide showing you various ways to call the API. This is useful for those that want to use the platform to run tests during continuous deployments.",source:"@site/docs/api-testing/on-prem/api/using-the-api.md",sourceDirName:"api-testing/on-prem/api",slug:"/api-testing/on-prem/api/using-the-api",permalink:"/sauce-docs/pr-preview/pr-2917/api-testing/on-prem/api/using-the-api",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/api-testing/on-prem/api/using-the-api.md",tags:[],version:"current",lastUpdatedBy:"Kerem",lastUpdatedAt:1724932034e3,frontMatter:{id:"using-the-api",title:"Using the API (for CI/CD and More)",sidebar_label:"Using the API",description:"A guide showing you various ways to call the API. This is useful for those that want to use the platform to run tests during continuous deployments.",keywords:["cicd","jenkins","bamboo","microsoft tfs","team foundation server","gitlab ci/cd","travisci"]},sidebar:"apif",previous:{title:"API Fortress API v3 (including Webhooks)",permalink:"/sauce-docs/pr-preview/pr-2917/api-testing/on-prem/api/v3"},next:{title:"Assert Compares",permalink:"/sauce-docs/pr-preview/pr-2917/api-testing/on-prem/assertion-components/assert-compares"}},l={},p=[{value:"Test Run",id:"test-run",level:2},{value:"<strong>Basic</strong>: Run a Test By Test ID",id:"basic-run-a-test-by-test-id",level:3},{value:"<strong>Advanced</strong>: Run a Test With Additional Information (Variable Override)",id:"advanced-run-a-test-with-additional-information-variable-override",level:3},{value:"<strong>Automatch</strong>: Run Multiple Tests Based On a URL Pattern",id:"automatch-run-multiple-tests-based-on-a-url-pattern",level:3},{value:"<strong>Basic Tags</strong>: Run Tests With Certain Tags",id:"basic-tags-run-tests-with-certain-tags",level:3},{value:"<strong>Advanced Tags</strong>: Run Tests Tagged With a Certain Word",id:"advanced-tags-run-tests-tagged-with-a-certain-word",level:3},{value:"<strong>Basic By Project</strong>: Run all Published Tests of a Specific Project",id:"basic-by-project-run-all-published-tests-of-a-specific-project",level:3},{value:"<strong>Advanced By Project</strong>: Run All Published Tests of a Project With Additional Information",id:"advanced-by-project-run-all-published-tests-of-a-project-with-additional-information",level:3},{value:"Insights (Data &amp; Information)",id:"insights-data--information",level:2},{value:"<strong>Events</strong>: Shows Information About Test Failures and Successes",id:"events-shows-information-about-test-failures-and-successes",level:3},{value:"<strong>Events Stream</strong>: Show Test Success and Failure Information As An Event Stream",id:"events-stream-show-test-success-and-failure-information-as-an-event-stream",level:3},{value:"<strong>Metrics</strong>: Provide Details on Performance",id:"metrics-provide-details-on-performance",level:3},{value:"<strong>Metrics Stream</strong>: Provide Details on Performance in an Event Stream",id:"metrics-stream-provide-details-on-performance-in-an-event-stream",level:3},{value:"List of Tests in a Project",id:"list-of-tests-in-a-project",level:2},{value:"Details of a Project",id:"details-of-a-project",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Insights",id:"insights",level:2},{value:"Provide Details About a Specific Event",id:"provide-details-about-a-specific-event",level:3},{value:"Tests",id:"tests",level:2},{value:"Provide the Details About a Specific Test",id:"provide-the-details-about-a-specific-test",level:3},{value:"Show the Content of the Unit for the Given Test",id:"show-the-content-of-the-unit-for-the-given-test",level:3},{value:"Show the Content of the Unit for the Given Test as a Downloadable File",id:"show-the-content-of-the-unit-for-the-given-test-as-a-downloadable-file",level:3},{value:"Show the Content of the Input-Set for the Given Test",id:"show-the-content-of-the-input-set-for-the-given-test",level:3},{value:"Show the Content of the Input-Set for the Given Test as a Downloadable File",id:"show-the-content-of-the-input-set-for-the-given-test-as-a-downloadable-file",level:3},{value:"Update Tests",id:"update-tests",level:2},{value:"Update the Unit of a Given Test",id:"update-the-unit-of-a-given-test",level:3},{value:"Update the Unit of a Given Test by Accepting It As a Raw <code>POST</code> Body",id:"update-the-unit-of-a-given-test-by-accepting-it-as-a-raw-post-body",level:3},{value:"Update the Input-Set of the Given Test",id:"update-the-input-set-of-the-given-test",level:3},{value:"Update the Input of a Given Test By Accepting It As a Raw <code>POST</code> Body",id:"update-the-input-of-a-given-test-by-accepting-it-as-a-raw-post-body",level:3},{value:"Creating Tests Outside of API Fortress",id:"creating-tests-outside-of-api-fortress",level:2},{value:"Validators",id:"validators",level:3},{value:"Validate the Unit",id:"validate-the-unit",level:3},{value:"Validate the Input-Set",id:"validate-the-input-set",level:3},{value:"Converting to JUnit Format",id:"converting-to-junit-format",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s,{children:(0,n.jsx)("meta",{name:"robots",content:"noindex"})}),"\n","\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Legacy Documentation"}),(0,n.jsx)("br",{}),"You're viewing legacy documentation for API Fortress (deployed via an on-premises container). To view documentation for the new SaaS version of API Fortress \u2014 now known as Sauce Labs API Testing and Monitoring (with Sauce Connect tunnels) \u2014 see ",(0,n.jsx)(t.a,{href:"/api-testing/",children:"API Testing on the Sauce Labs Cloud"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Here is a guide showing you various ways to call the API. This is particularly useful for those that want to use the platform to run tests during continuous deployments, and who are not using our ",(0,n.jsx)(t.a,{href:"https://plugins.jenkins.io",children:"Jenkins"})," plugin."]}),"\n",(0,n.jsx)(t.p,{children:"First, you need to create the API Hook by going to the Company Settings page and clicking API Hooks section. To do this you need to be a Manager of the Company."}),"\n",(0,n.jsx)("img",{src:(0,i.Ay)("img/api-fortress/2017/07/companySetting.jpeg"),alt:"API Hooks Section"}),"\n",(0,n.jsxs)(t.p,{children:["Here, click ",(0,n.jsx)(t.em,{children:"+API Hook"})," you will be prompted to choose a project. Once done, you will have the Hook URL that will give you the ability to query resources from that project."]}),"\n",(0,n.jsx)(t.p,{children:"An example is:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"https://mastiff.apifortress.com/app/api/rest/v3/34d8mm70-c03e-267a-9fa1-90b9flsbcea2607\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"NOTE"}),": The above unique project hook is ",(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.code,{children:"34d8mm70-c03e-267a-9fa1-90b9flsbcea2607"}),"."]})]}),"\n",(0,n.jsx)(t.p,{children:"This is useful for later."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Jump to a Section"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#unauthenticated-endpoints",children:"Unauthenticated Endpoints"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#test-run",children:"Run Tests"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#insights-data--information",children:"Insights (Data & Information)"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#authenticated-endpoints",children:"Authenticated endpoints"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#authentication",children:"Authentication"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#insights",children:"Insights (Data & Information)"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#update-tests",children:"Update Tests"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#creating-tests-outside-of-api-fortress",children:"Creating Tests Outside of API Fortress"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#converting-to-junit-format",children:"Converting to JUnit Format"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"unauthenticated-endpoints",children:"Unauthenticated Endpoints"})}),"\n",(0,n.jsx)(t.h2,{id:"test-run",children:"Test Run"}),"\n",(0,n.jsx)(t.p,{children:"Invoking the execution of a test via the API is a key feature of API Fortress. It allows you to trigger one, or multiple, tests to run. It can also receive input variables to override those in the tests themselves. Finally, you can also send a payload to the platform to be tested against."}),"\n",(0,n.jsx)(t.p,{children:"Optionally, for all the endpoints you can add the following query parameters:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:(0,n.jsx)(t.code,{children:"sync"})})," (boolean): the test will run synchronously and return the result as the response payload."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:(0,n.jsx)(t.code,{children:"dryrun"})})," (boolean): the test will run but no events or metrics will be stored."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:(0,n.jsx)(t.code,{children:"silent"})})," (boolean): no alerts will be triggered by the execution of the test."]}),"\n"]}),"\n",(0,n.jsxs)(t.h3,{id:"basic-run-a-test-by-test-id",children:[(0,n.jsx)(t.strong,{children:"Basic"}),": Run a Test By Test ID"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/run\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -v https://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/34d8mm70-c03e-267a-9fa1-90b9flsbcea2607/tests/129d32j9dksdoo23e393/run\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"advanced-run-a-test-with-additional-information-variable-override",children:[(0,n.jsx)(t.strong,{children:"Advanced"}),": Run a Test With Additional Information (Variable Override)"]}),"\n",(0,n.jsx)(t.p,{children:"If you want to override variables, or include a payload, you have to use:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/run\n"})}),"\n",(0,n.jsx)(t.p,{children:"The request body will contain the variable you want to override."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n  "Content-Type": "application/json",\n  "params": {\n    "server": "staging"\n  }\n}\n'})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Params will be accessible as ",(0,n.jsx)(t.em,{children:"variables"})," inside the test."]}),"\n",(0,n.jsxs)(t.li,{children:["Payload will be parsed based on the ",(0,n.jsx)(t.code,{children:'"Content-Type"'})," field and will be accessible via the ",(0,n.jsx)(t.code,{children:'"payload"'})," variable."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"payload"})," AND ",(0,n.jsx)(t.code,{children:"params"})," are not required at the same time."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/run \\\\\n-H \'content-type: application/json\' \\\\\n-d \'{\n"payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n"Content-Type": "application/json",\n"params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"automatch-run-multiple-tests-based-on-a-url-pattern",children:[(0,n.jsx)(t.strong,{children:"Automatch"}),": Run Multiple Tests Based On a URL Pattern"]}),"\n",(0,n.jsx)(t.p,{children:'Automatch is a way to simultaneously launch tests inside a project. The tests to run are selected by comparing the URL provided in the payload to the "automatch" configuration pattern in the tests.'}),"\n",(0,n.jsxs)(t.p,{children:["Just like the ",(0,n.jsx)(t.strong,{children:"advanced run"})," endpoint, you can override both variables and the payload:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/automatch\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n  "Content-Type": "application/json",\n  "params": {\n    "server": "staging"\n  },\n  "url": "http://www.testme.com"\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/automatch \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n "Content-Type": "application/json",\n "params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"basic-tags-run-tests-with-certain-tags",children:[(0,n.jsx)(t.strong,{children:"Basic Tags"}),": Run Tests With Certain Tags"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/tag/**tag**/run\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/tag/staging/run \\\\\n -d \'{\n "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n "Content-Type": "application/json",\n "params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"advanced-tags-run-tests-tagged-with-a-certain-word",children:[(0,n.jsx)(t.strong,{children:"Advanced Tags"}),": Run Tests Tagged With a Certain Word"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.comapp/api/rest/v3/**project\\_hook**/tests/tag/**tag**/run\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "payload": "{  \\\\"id\\\\":\\\\"123\\\\" }",\n  "Content-Type": "application/json",\n  "params": {\n    "server": "staging"\n  }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/tag/staging/run \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n "Content-Type": "application/json",\n "params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"basic-by-project-run-all-published-tests-of-a-specific-project",children:[(0,n.jsx)(t.strong,{children:"Basic By Project"}),": Run all Published Tests of a Specific Project"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/run-all\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/run-all \\\\\n -d \'{\n "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n "Content-Type": "application/json",\n "params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"advanced-by-project-run-all-published-tests-of-a-project-with-additional-information",children:[(0,n.jsx)(t.strong,{children:"Advanced By Project"}),": Run All Published Tests of a Project With Additional Information"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/run-all\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n  "Content-Type": "application/json",\n  "params": {\n    "server": "staging"\n  }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/run-all \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "payload": "{ \\\\"id\\\\":\\\\"123\\\\" }",\n "Content-Type": "application/json",\n "params": { "server":"staging" }\n}\'\n'})}),"\n",(0,n.jsx)(t.h2,{id:"insights-data--information",children:"Insights (Data & Information)"}),"\n",(0,n.jsx)(t.p,{children:"The API Fortress API also allows you to retrieve metrics and data of your tests."}),"\n",(0,n.jsxs)(t.h3,{id:"events-shows-information-about-test-failures-and-successes",children:[(0,n.jsx)(t.strong,{children:"Events"}),": Shows Information About Test Failures and Successes"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/insights/events\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/insights/events\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"events-stream-show-test-success-and-failure-information-as-an-event-stream",children:[(0,n.jsx)(t.strong,{children:"Events Stream"}),": Show Test Success and Failure Information As An Event Stream"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/insights/events/stream\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/insights/events/stream\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"metrics-provide-details-on-performance",children:[(0,n.jsx)(t.strong,{children:"Metrics"}),": Provide Details on Performance"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/insights/metrics\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/insights/metrics\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"metrics-stream-provide-details-on-performance-in-an-event-stream",children:[(0,n.jsx)(t.strong,{children:"Metrics Stream"}),": Provide Details on Performance in an Event Stream"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/insights/metrics/stream\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/insights/metrics/stream\n"})}),"\n",(0,n.jsx)(t.h2,{id:"list-of-tests-in-a-project",children:"List of Tests in a Project"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests\n"})}),"\n",(0,n.jsx)(t.h2,{id:"details-of-a-project",children:"Details of a Project"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/\n"})}),"\n",(0,n.jsx)(t.h1,{id:"authenticated-endpoints",children:"Authenticated endpoints"}),"\n",(0,n.jsx)(t.p,{children:"The following endpoints might contain sensitive information, therefore authentication is required."}),"\n",(0,n.jsx)(t.h2,{id:"authentication",children:"Authentication"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/login\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The user credentials, provided by basic ",(0,n.jsx)(t.code,{children:"HTTP"})," authentication, need to match the user profile selected during the project hook creation. This endpoint will generate a ",(0,n.jsx)(t.code,{children:"JWT"})," token which is valid only for the provided project hook. The token is necessary for all the endpoints containing potentially sensitive information, and updating data."]}),"\n",(0,n.jsxs)(t.p,{children:["To achieve authentication, send a valid access token in the request header (i.e. in the form: ",(0,n.jsx)(t.code,{children:"Authorization: Bearer access\\_token"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/login \\\\\n -H 'authorization: Basic ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h2,{id:"insights",children:"Insights"}),"\n",(0,n.jsx)(t.h3,{id:"provide-details-about-a-specific-event",children:"Provide Details About a Specific Event"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/insights/events/**event\\_id**\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"event\\_id"})})," can be retrieved by performing the ",(0,n.jsx)(t.code,{children:"events"})," endpoint first."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/insights/events/5963451d12b87d3379d2f1co \\\\\n -H 'autho: Bearer ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h2,{id:"tests",children:"Tests"}),"\n",(0,n.jsx)(t.h3,{id:"provide-the-details-about-a-specific-test",children:"Provide the Details About a Specific Test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/api/rest/v3/**project\\_hook**/tests/**test\\_id**\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"test\\_id"})})," can be retrieved by calling the ",(0,n.jsx)(t.code,{children:"test"})," endpoint or, the easiest way, by copying it from the interstitial page:"]}),"\n",(0,n.jsx)("img",{src:(0,i.Ay)("img/api-fortress/2017/07/testidIntersitial.jpeg"),alt:"Go to the Interstitial Page"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f \\\\\n -H 'authorization: Bearer ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h3,{id:"show-the-content-of-the-unit-for-the-given-test",children:"Show the Content of the Unit for the Given Test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/unit\n"})}),"\n",(0,n.jsx)(t.h3,{id:"show-the-content-of-the-unit-for-the-given-test-as-a-downloadable-file",children:"Show the Content of the Unit for the Given Test as a Downloadable File"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/unit/file\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/unit/file \\\\\n -H 'authorization: Bearer ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h3,{id:"show-the-content-of-the-input-set-for-the-given-test",children:"Show the Content of the Input-Set for the Given Test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/input\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/input \\\\\n -H 'authorization: Bearer ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h3,{id:"show-the-content-of-the-input-set-for-the-given-test-as-a-downloadable-file",children:"Show the Content of the Input-Set for the Given Test as a Downloadable File"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/input/file\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -X GET \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/input/file \\\\\n -H 'authorization: Bearer ABCD' \\\\\n -H 'content-type: application/json'\n"})}),"\n",(0,n.jsx)(t.h2,{id:"update-tests",children:"Update Tests"}),"\n",(0,n.jsx)(t.h3,{id:"update-the-unit-of-a-given-test",children:"Update the Unit of a Given Test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/unit/update\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"unit"})," will be passed as body."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n "text": "<unit xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://apifortress.com/app/unit.xsd\\\\"><requirements></requirements><configs></configs><sequence name=\\\\"main\\\\"><assert-exists expression=\\\\"payload\\\\"/></sequence></unit>"\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/unit/update \\\\\n -H \'authorization: Bearer ABCD\' \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "text": "<unit xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://apifortress.com/app/unit.xsd\\\\"><requirements></requirements><configs></configs><sequence name=\\\\"main\\\\"><assert-exists expression=\\\\"payload\\\\"/></sequence></unit>"\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"update-the-unit-of-a-given-test-by-accepting-it-as-a-raw-post-body",children:["Update the Unit of a Given Test by Accepting It As a Raw ",(0,n.jsx)(t.code,{children:"POST"})," Body"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/unit/update/file\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"unit"})," will be passed as body."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<unit xmlns:xsi\\="http://www.w3.org/2001/XMLSchema-instance" name\\="main" xsi:noNamespaceSchemaLocation\\="http://apifortress.com/app/unit.xsd"\\>\n <requirements\\></requirements\\>\n <configs\\></configs\\>\n <sequence name\\="main"\\>\n <get url\\="${protocol}${domain}${endpoint}" params\\="\\[\'id\':id\\]" var\\="payload" mode\\="json"\\></get\\>\n <assert-equals expression\\="payload.status" value\\="200" comment\\="status is equal to 200, if not stop the test" stoponfail\\="true"/>\n </sequence\\>\n</unit\\>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/unit/update/file \\\\\n -H \'authorization: Bearer ABCD\' \\\\\n -H \'content-type: text/xml\' \\\\\n -d \'<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="main" xsi:noNamespaceSchemaLocation="http://apifortress.com/app/unit.xsd">\n <requirements></requirements>\n <configs></configs>\n <sequence name="main">\n <get url="${protocol}${domain}${endpoint}" params="\\[\'\\\\\'\'id\'\\\\\'\':id\\]" var="payload" mode="json"></get>\n <assert-equals expression="payload.status" value="200" comment="status is equal to 200, if not stop the test" stoponfail="true"/>\n </sequence>\n</unit>\'\n'})}),"\n",(0,n.jsx)(t.h3,{id:"update-the-input-set-of-the-given-test",children:"Update the Input-Set of the Given Test"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/input/update The input will be passed as body.\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n "text": "<sets xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://mastiff.apifortress.com/app/input.xsd\\\\"><global><param name=\\\\"country\\\\">US</param></global><set name=\\\\"search 1\\\\"><param name=\\\\"q\\\\">music</param></set></sets>"\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/input/update \\\\\n -H \'authorization: Bearer ABCD\' \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "text": "<sets xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://mastiff.apifortress.com/app/input.xsd\\\\"><global><param name=\\\\"country\\\\">US</param></global><set name=\\\\"search 1\\\\"><param name=\\\\"q\\\\">music</param></set></sets>"\n}\'\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"update-the-input-of-a-given-test-by-accepting-it-as-a-raw-post-body",children:["Update the Input of a Given Test By Accepting It As a Raw ",(0,n.jsx)(t.code,{children:"POST"})," Body"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/input/update/file The input will be passed as body.\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<sets xmlns:xsi\\="http://www.w3.org/2001/XMLSchema-instance" name\\="main" xsi:noNamespaceSchemaLocation\\="http://mastiff.apifortress.com/app/input.xsd"\\>\n <global\\>\n <param name\\="protocol"\\>https://</param\\>\n <param name\\="domain"\\>mastiff.apifortress.com</param\\>\n <param name\\="endpoint"\\>/app/api/examples/retail/product</param\\>\n </global\\>\n <set name\\="ID 1"\\>\n <param name\\="id"\\>511</param\\>\n </set\\>\n</sets\\>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/6de267cd-df01-4782-8046-3seee6f4c093782/tests/35082607e4b0mm613lm82e8f/input/update/file \\\\\n -H \'authorization: Bearer ABCD\' \\\\\n -H \'content-type: text/xml\' \\\\\n -d \'<sets xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="main" xsi:noNamespaceSchemaLocation="http://mastiff.apifortress.com/app/input.xsd">\n <global>\n <param name="protocol">https://</param>\n <param name="domain">mastiff.apifortress.com</param>\n <param name="endpoint">/app/api/examples/retail/product</param>\n </global>\n <set name="ID 1">\n <param name="id">511</param>\n </set>\n</sets>\'\n'})}),"\n",(0,n.jsx)(t.h2,{id:"creating-tests-outside-of-api-fortress",children:"Creating Tests Outside of API Fortress"}),"\n",(0,n.jsx)(t.h3,{id:"validators",children:"Validators"}),"\n",(0,n.jsxs)(t.p,{children:["When developing outside the ",(0,n.jsx)(t.em,{children:"API Fortress Composer"}),", you will want to be sure the syntax of your units and input-sets are correct. For this work there are two different endpoints. One for the ",(0,n.jsx)(t.code,{children:"input-set"}),", and one for the unit."]}),"\n",(0,n.jsx)(t.h3,{id:"validate-the-unit",children:"Validate the Unit"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/validators/unit\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"unit"})," will be passed as body"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n "text": "<unit xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://apifortress.com/app/unit.xsd\\\\"><requirements></requirements><configs></configs><sequence name=\\\\"main\\\\"><assert-exists expression=\\\\"payload\\\\"/></sequence></unit>"\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/validators/unit \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "text": "<unit xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://apifortress.com/app/unit.xsd\\\\"><requirements></requirements><configs></configs><sequence name=\\\\"main\\\\"><assert-exists expression=\\\\"payload\\\\"/></sequence></unit>"\n}\'\n'})}),"\n",(0,n.jsx)(t.h3,{id:"validate-the-input-set",children:"Validate the Input-Set"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"POST https://mastiff.apifortress.com/app/api/rest/v3/validators/input\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"input-set"})," will be passed as body"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Example body"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n "text": "<sets xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://mastiff.apifortress.com/app/input.xsd\\\\"><global><param name=\\\\"country\\\\">US</param></global><set name=\\\\"search 1\\\\"><param name=\\\\"q\\\\">music</param></set></sets>"\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Mock Example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST \\\\\nhttps://private-e9aac-apifortressv3.apiary-mock.com/app/api/rest/v3/validators/input \\\\\n -H \'content-type: application/json\' \\\\\n -d \'{\n "text": "<sets xmlns:xsi=\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\" name=\\\\"main\\\\" xsi:noNamespaceSchemaLocation=\\\\"http://mastiff.apifortress.com/app/input.xsd\\\\"><global><param name=\\\\"country\\\\">US</param></global><set name=\\\\"search 1\\\\"><param name=\\\\"q\\\\">music</param></set></sets>"\n}\'\n'})}),"\n",(0,n.jsx)(t.h2,{id:"converting-to-junit-format",children:"Converting to JUnit Format"}),"\n",(0,n.jsx)(t.p,{children:"Converting to JUnit format (for Jenkins/QTest/etc.) is done by adding the following query parameters to a request:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"?sync=true&format=junit\n"})}),"\n",(0,n.jsx)(t.p,{children:"The completed request would be as follows:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/run-all?sync=true&format=junit\n"})}),"\n",(0,n.jsx)(t.p,{children:"This can also be done for an individual test:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET https://mastiff.apifortress.com/app/api/rest/v3/**project\\_hook**/tests/**test\\_id**/run?sync=true&format=junit\n"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(96540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);