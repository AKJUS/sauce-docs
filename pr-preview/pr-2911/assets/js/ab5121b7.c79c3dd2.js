"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[45110],{73233:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>a});var i=s(74848),t=s(28453);const a=[];function r(e){const n={a:"a",code:"code",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Variable Name"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_USERNAME"})}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Your Sauce Labs username. You can get this from the header of app.saucelabs.com"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_ACCESS_KEY"})}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Your Sauce Labs access key. You can get this from the header of app.saucelabs.com"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_REGION"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["The region you'd like to run your Visual tests in. Defaults to ",(0,i.jsx)(n.code,{children:"us-west-1"})," if not supplied. Can be one of the following: ",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.code,{children:"'eu-central-1'"}),", ",(0,i.jsx)(n.code,{children:"'us-west-1'"})," or ",(0,i.jsx)(n.code,{children:"'us-east-4'"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BUILD_NAME"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The name you would like to appear in the Sauce Visual dashboard."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BRANCH"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The branch name you would like to associate this build with. We recommend using your current VCS branch in CI."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_DEFAULT_BRANCH"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["The main branch name you would like to associate this build with. Usually ",(0,i.jsx)(n.code,{children:"main"})," or ",(0,i.jsx)(n.code,{children:"master"})," or alternatively the branch name your current branch was derived from. ",(0,i.jsx)(n.a,{href:"/sauce-docs/pr-preview/pr-2911/visual-testing/workflows/ci",children:"Follow me to learn more"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_PROJECT"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The label / project you would like to associate this build with."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_BUILD_ID"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["For advanced users, a user-supplied SauceLabs Visual build ID. Can be used to create builds in advance using the GraphQL API. This can be used to parallelize tests with multiple browsers, shard, or more. ",(0,i.jsx)("br",{})," By default, this is not set and we create / finish a build during setup / teardown."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"SAUCE_VISUAL_CUSTOM_ID"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"For advanced users, a user-supplied custom ID to identify this build. Can be used in CI to identify / check / re-check the status of a single build. Usage suggestions: CI pipeline ID."})]})]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},7886:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>a});var i=s(74848),t=s(28453);const a=[];function r(e){const n={admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The maximum number of scrolls and stitches in a full page screenshot is 10."})})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},62036:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>a});var i=s(74848),t=s(28453);const a=[];function r(e){const n={p:"p",...(0,t.R)(),...e.components};return(0,i.jsx)(n.p,{children:"Sauce Visual Binding allows to configure which kinds of changes should be effective on snapshot."})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8775:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>a});var i=s(74848),t=s(28453);const a=[];function r(e){const n={p:"p",...(0,t.R)(),...e.components};return(0,i.jsx)(n.p,{children:"Sauce Visual Binding allows to configure which kinds of changes should be effective specific regions of the snapshot."})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},27182:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>a});var i=s(74848),t=s(28453);const a=[];function r(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Sauce Visual allows selective diffing that permits to ignore changes from a certain kind (",(0,i.jsxs)(n.em,{children:["more information ",(0,i.jsx)(n.a,{href:"/visual-testing/selective-diffing/",children:"here"})]}),")."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Selective diffing is only available with ",(0,i.jsx)(n.code,{children:"Balanced"})," diffing method ",(0,i.jsx)(n.strong,{children:"AND"})," with DOM capture enabled."]})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},91796:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>x,contentTitle:()=>p,default:()=>j,frontMatter:()=>h,metadata:()=>g,toc:()=>f});var i=s(74848),t=s(28453),a=s(11470),r=s(19365),l=s(73233),c=s(7886),o=s(27182),d=s(62036),u=s(8775);const h={sidebar_label:"C#/.Net"},p="C#/.Net WebDriver Integration",g={id:"visual-testing/integrations/csharp",title:"C#/.Net WebDriver Integration",description:"/.Net WebDriver Integration",source:"@site/docs/visual-testing/integrations/csharp.md",sourceDirName:"visual-testing/integrations",slug:"/visual-testing/integrations/csharp",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/csharp",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/visual-testing/integrations/csharp.md",tags:[],version:"current",lastUpdatedBy:"Alex Plischke",lastUpdatedAt:1724858356e3,frontMatter:{sidebar_label:"C#/.Net"},sidebar:"docs",previous:{title:"Cypress",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/cypress"},next:{title:"Java",permalink:"/sauce-docs/pr-preview/pr-2911/visual-testing/integrations/java"}},x={},f=[{value:"Introduction",id:"introduction",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Step 1: Add Sauce Visual dependency",id:"step-1-add-sauce-visual-dependency",level:3},{value:"Step 2: Configure Visual Testing integration",id:"step-2-configure-visual-testing-integration",level:3},{value:"Step 3: Add visual tests in your tests",id:"step-3-add-visual-tests-in-your-tests",level:3},{value:"Step 4: Configure your Sauce Labs credentials",id:"step-4-configure-your-sauce-labs-credentials",level:3},{value:"Step 5: Run the test",id:"step-5-run-the-test",level:3},{value:"Advanced usage",id:"advanced-usage",level:2},{value:"Customizing Your Builds (Environment Variables)",id:"customizing-your-builds-environment-variables",level:3},...l.RM,{value:"Test results summary",id:"test-results-summary",level:3},{value:"Build attributes",id:"build-attributes",level:3},{value:"Ignored regions",id:"ignored-regions",level:3},{value:"Component-based ignored region",id:"component-based-ignored-region",level:4},{value:"User-specified ignored region",id:"user-specified-ignored-region",level:4},{value:"Selective Diffing",id:"selective-diffing",level:3},...o.RM,{value:"Screenshot-wide configuration",id:"screenshot-wide-configuration",level:4},...d.RM,{value:"Area-specific configuration",id:"area-specific-configuration",level:4},...u.RM,{value:"Capturing the DOM snapshot",id:"capturing-the-dom-snapshot",level:3},{value:"Full page screenshots",id:"full-page-screenshots",level:3},...c.RM,{value:"Examples",id:"examples",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cnet-webdriver-integration",children:"C#/.Net WebDriver Integration"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["This guide requires an existing C# NUnit / xUnit setup.",(0,i.jsx)("br",{}),"\nYou can alternatively take a look to our ",(0,i.jsx)(n.a,{href:"#examples",children:"example repository"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Sauce Visual provides a library allowing integration with ",(0,i.jsx)(n.a,{href:"https://www.selenium.dev/documentation/webdriver/",children:"WebDriver"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Sauce Visual plugin provides a library exposing a ",(0,i.jsx)(n.code,{children:"VisualClient"})," class that provides actions:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"VisualCheck"}),": Takes a screenshot and sends it to Sauce Visual for comparison."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"VisualResults"}),": Waits for all diff calculations to complete and returns a summary of results.\nSee ",(0,i.jsx)(n.a,{href:"#test-results-summary",children:"Test results summary"})," for more details about summary format and sample usage."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-add-sauce-visual-dependency",children:"Step 1: Add Sauce Visual dependency"}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/SauceLabs.Visual/",children:"Sauce Visual"})," dependency to your ",(0,i.jsx)(n.code,{children:".csproj"})]}),"\n",(0,i.jsxs)(a.A,{defaultValue:"windows",values:[{label:"Windows NuGet CLI",value:"windows"},{label:"Linux/macOS/.Net Core",value:"other"}],children:[(0,i.jsx)(r.A,{value:"windows",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"Install-Package SauceLabs.Visual\n"})})}),(0,i.jsx)(r.A,{value:"other",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"dotnet add package SauceLabs.Visual\n"})})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.em,{children:["Note: You can find the latest versions available ",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/SauceLabs.Visual#readme-body-tab",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-configure-visual-testing-integration",children:"Step 2: Configure Visual Testing integration"}),"\n",(0,i.jsx)(n.p,{children:"Declare a RemoteWebDriver and a VisualClient instance as class properties"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"using OpenQA.Selenium.Remote;\nusing SauceLabs.Visual;\n\nprivate RemoteWebDriver Driver { get; set; }\nprivate VisualClient VisualClient { get; set; }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Initialize ",(0,i.jsx)(n.code,{children:"RemoteWebDriver"})," and ",(0,i.jsx)(n.code,{children:"VisualClient"})]}),"\n",(0,i.jsxs)(a.A,{defaultValue:"NUnit",values:[{label:"NUnit",value:"NUnit"},{label:"xUnit",value:"xUnit"}],children:[(0,i.jsx)(r.A,{value:"NUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'    [OneTimeSetUp]\n    public async Task Setup()\n    {\n      var sauceUsername = "YOUR_USERNAME";\n      var sauceAccessKey = "YOUR_ACCESS_KEY";\n      var sauceUrl = "https://ondemand.us-west-1.saucelabs.com:443/wd/hub";\n\n      var browserOptions = new ChromeOptions();\n      browserOptions.PlatformName = "Windows 11";\n      browserOptions.BrowserVersion = "latest";\n\n      var sauceOptions = new Dictionary<string, string>();\n      sauceOptions.Add("username", sauceUsername);\n      sauceOptions.Add("accessKey", sauceAccessKey);\n      browserOptions.AddAdditionalOption("sauce:options", sauceOptions);\n\n      Driver = new RemoteWebDriver(sauceUrl, browserOptions);\n\n      VisualClient = await VisualClient.Create(Driver, Region.UsWest1, new CreateBuildOptions()\n      {\n          Name = "My Visual Build",\n          Project = "csharp-project",\n          Branch = "csharp-branch"\n      });\n      // Enable Dom Capture\n      VisualClient.CaptureDom = true;\n    }\n'})})}),(0,i.jsx)(r.A,{value:"xUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'  class MyTestClass : IAsyncLifetime {\n    [...]\n    public async Task InitializeAsync()\n    {\n        var browserOptions = Utils.GetBrowserOptions();\n        var sauceOptions = Utils.GetSauceOptions();\n        browserOptions.AddAdditionalOption("sauce:options", sauceOptions);\n\n        var sauceUrl = Utils.GetOnDemandURL();\n        Driver = new RemoteWebDriver(sauceUrl, browserOptions);\n        Driver.ExecuteScript("sauce:job-name=xUnit C#/.Net Visual Session");\n\n        VisualClient = await VisualClient.Create(Driver, Region.UsWest1, new CreateBuildOptions()\n        {\n            Name = "My Visual Build",\n            Project = "csharp-project",\n            Branch = "csharp-branch"\n        });\n        // Enable Dom Capture\n        VisualClient.CaptureDom = true;\n    }\n  }\n'})})})]}),"\n",(0,i.jsx)(n.p,{children:"To enhance efficiency in managing tests, it's important to provide a specific test name and suite name for each test. This practice allows Sauce Visual to effectively organize snapshots into coherent groups. As a result, it simplifies the review process, saving time and effort in navigating through test results and understanding the context of each snapshot."}),"\n",(0,i.jsx)(n.p,{children:"Don't forget to quit the WebDriver and Dispose VisualClient."}),"\n",(0,i.jsxs)(a.A,{defaultValue:"NUnit",values:[{label:"NUnit",value:"NUnit"},{label:"xUnit",value:"xUnit"}],children:[(0,i.jsx)(r.A,{value:"NUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"    [OneTimeTearDown]\n    public async Task Teardown()\n    {\n        Driver?.Quit();\n        await VisualClient.Cleanup();\n        VisualClient.Dispose();\n    }\n"})})}),(0,i.jsx)(r.A,{value:"xUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"  public class MyTestClass : IAsyncLifetime\n  {\n    [...]\n    public async Task DisposeAsync()\n    {\n        Driver?.Quit();\n        await VisualClient.Cleanup();\n        VisualClient.Dispose();\n    }\n  }\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-3-add-visual-tests-in-your-tests",children:"Step 3: Add visual tests in your tests"}),"\n",(0,i.jsx)(n.p,{children:"Add a check to one of your tests:"}),"\n",(0,i.jsxs)(a.A,{defaultValue:"NUnit",values:[{label:"NUnit",value:"NUnit"},{label:"xUnit",value:"xUnit"}],children:[(0,i.jsx)(r.A,{value:"NUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'\n    [Test]\n    public async Task SauceDemoHomePage_ShouldRenderLoginCorrectly()\n    {\n        Driver.Navigate().GoToUrl("https://www.saucedemo.com");\n        var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(15));\n        wait.Until(drv => drv.FindElement(usernameLocator));\n\n        await VisualClient.VisualCheck("Sauce Demo Homepage");\n    }\n'})})}),(0,i.jsx)(r.A,{value:"xUnit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'\n    [Fact]\n    public async Task SauceDemoHomePage_ShouldRenderLoginCorrectly()\n    {\n        Driver.Navigate().GoToUrl("https://www.saucedemo.com");\n        var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(15));\n        wait.Until(drv => drv.FindElement(usernameLocator));\n\n        await VisualClient.VisualCheck("Sauce Demo Homepage");\n    }\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-4-configure-your-sauce-labs-credentials",children:"Step 4: Configure your Sauce Labs credentials"}),"\n",(0,i.jsxs)(n.p,{children:["Sauce Visual relies on environment variables for authentications.",(0,i.jsx)("br",{}),"\nBoth ",(0,i.jsx)(n.code,{children:"SAUCE_USERNAME"})," and ",(0,i.jsx)(n.code,{children:"SAUCE_ACCESS_KEY"})," need to be set prior starting your .Net job."]}),"\n",(0,i.jsxs)(n.p,{children:["Username and Access Key can be retrieved from ",(0,i.jsx)(n.a,{href:"https://app.saucelabs.com/user-settings",children:"https://app.saucelabs.com/user-settings"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"export SAUCE_USERNAME=__YOUR_SAUCE_USER_NAME__\nexport SAUCE_ACCESS_KEY=__YOUR_SAUCE_ACCESS_KEY__\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-5-run-the-test",children:"Step 5: Run the test"}),"\n",(0,i.jsxs)(n.p,{children:["Upon executing your tests for the first time under this step, a visual baseline is automatically created in our system. This baseline serves as the standard for all subsequent WebDriver tests. As new tests are run, they are compared to this original baseline, with any deviations highlighted to signal visual changes. These comparisons are integral for detecting any unintended visual modifications early in your development cycle. All test builds, including the initial baseline and subsequent runs, can be monitored and managed through the Sauce Labs platform at ",(0,i.jsx)(n.a,{href:"https://app.saucelabs.com/visual/builds",children:"Sauce Visual Builds"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Remember, the baseline is established during the initial run, and any subsequent visual differences detected will be marked for review."}),"\n",(0,i.jsx)(n.h2,{id:"advanced-usage",children:"Advanced usage"}),"\n",(0,i.jsx)(n.h3,{id:"customizing-your-builds-environment-variables",children:"Customizing Your Builds (Environment Variables)"}),"\n",(0,i.jsxs)(n.p,{children:["Below are the environment variables available in the Sauce Visual C# plugin. Keep in mind that the variables defined in ",(0,i.jsx)(n.code,{children:"CreateBuildOptions"})," configuration have precedence over these."]}),"\n",(0,i.jsx)(l.Ay,{}),"\n",(0,i.jsx)(n.h3,{id:"test-results-summary",children:"Test results summary"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"VisualClient.VisualResults()"})," returns a summary of test results in ",(0,i.jsx)(n.code,{children:"Dictionary<DiffStatus, int>"})," format where ",(0,i.jsx)(n.code,{children:"DiffStatus"})," is one of the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DiffStatus.QUEUED"}),": Diffs that are pending for processing. Should be 0 in case the test is completed without any timeouts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DiffStatus.EQUAL"}),": Diffs that have no changes detected"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DiffStatus.UNAPPROVED"}),": Diffs that have detected changes and waiting for action"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DiffStatus.APPROVED"}),": Diffs that have detected changes and have been approved"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DiffStatus.REJECTED"}),": Diffs that have detected changes and have been rejected"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sample usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"var expectedTotalUnapprovedDiffs = 0;\n\nvar results = await VisualClient.VisualResults();\nAssert.AreEqual(expectedTotalUnapprovedDiffs, results[DiffStatus.Unapproved]);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"build-attributes",children:"Build attributes"}),"\n",(0,i.jsxs)(n.p,{children:["When creating the service in ",(0,i.jsx)(n.code,{children:"VisualClient"}),", extra fields can be set to define the context, thus acting on which baselines new snapshots will be compared to. (",(0,i.jsx)(n.a,{href:"/sauce-docs/pr-preview/pr-2911/visual-testing#baseline-matching",children:"More info on baseline matching"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["It needs to be defined through a ",(0,i.jsx)(n.code,{children:"CreateBuildOptions"})," object."]}),"\n",(0,i.jsx)(n.p,{children:"Properties available:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string? Name"}),": The name of the build"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string? Project"}),": The name of the project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string? Branch"}),": The name of the branch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string? CustomId"}),": A customId to be able to retrieve the current build"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string? DefaultBranch"}),": The name of the default branch"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'  VisualClient = await VisualClient.Create(Driver, Region.UsWest1, sauceUsername, sauceAccessKey,\n      new CreateBuildOptions() { Name = "My Visual Build", Project = "csharp-project", Branch = "feature-branch" });\n'})}),"\n",(0,i.jsx)(n.h3,{id:"ignored-regions",children:"Ignored regions"}),"\n",(0,i.jsx)(n.h4,{id:"component-based-ignored-region",children:"Component-based ignored region"}),"\n",(0,i.jsx)(n.p,{children:"Sauce Visual provides a way to ignore a list of components."}),"\n",(0,i.jsx)(n.p,{children:"An ignored component can be a specific element from the page."}),"\n",(0,i.jsx)(n.p,{children:"Those ignored components are specified when requesting a new snapshot."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'var btnAction = Driver.FindElement(By.CssSelector(".app_logo"));\n\nawait VisualClient.VisualCheck("C# capture",\n    new VisualCheckOptions()\n    {\n        IgnoreElements = new[] { btnAction }\n    });\n'})}),"\n",(0,i.jsx)(n.h4,{id:"user-specified-ignored-region",children:"User-specified ignored region"}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, ignored regions can be user-specified areas. A region is defined by four elements."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x"}),", ",(0,i.jsx)(n.code,{children:"y"}),": The location of the top-left corner of the ignored region"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": The width of the region to ignore"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": The height of the region to ignore"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Note: all values are pixels"})}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'await VisualClient.VisualCheck("C# capture",\n    new VisualCheckOptions()\n    {\n        IgnoreRegions = new[] { new IgnoreRegion(10, 10, 100, 100) }\n    });\n'})}),"\n",(0,i.jsx)(n.h3,{id:"selective-diffing",children:"Selective Diffing"}),"\n",(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(n.h4,{id:"screenshot-wide-configuration",children:"Screenshot-wide configuration"}),"\n",(0,i.jsx)(d.Ay,{}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.p,{children:"Ignoring only one kind:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'  await VisualClient.VisualCheck("login-page",\n      new VisualCheckOptions()\n      {\n          // Every content change will be ignored\n          DiffingOptions = VisualCheckDiffingOptions.DisableOnly(DiffingOption.Content),\n      });\n'})}),"\n",(0,i.jsx)(n.p,{children:"Ignoring all kinds except one:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'  await VisualClient.VisualCheck("login-page",\n      new VisualCheckOptions()\n      {\n          DiffingMethod = DiffingMethod.Balanced,\n          CaptureDom = true,\n          // Only style changes will be considered as a diff\n          DiffingOptions = VisualCheckDiffingOptions.EnableOnly(DiffingOption.Style),\n      });\n'})}),"\n",(0,i.jsx)(n.h4,{id:"area-specific-configuration",children:"Area-specific configuration"}),"\n",(0,i.jsx)(u.Ay,{}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'  var usernameElement = Driver.FindElement(By.CssSelector("#user-name"));\n  var passwordElement = Driver.FindElement(By.CssSelector("#password"));\n\n  await VisualClient.VisualCheck("login-page",\n      new VisualCheckOptions()\n      {\n          DiffingMethod = DiffingMethod.Balanced,\n          CaptureDom = true,\n          Regions = new []\n          {\n              // Ignore all kind of changes for element #user-name\n              SelectiveRegion.EnabledFor(usernameElement, DiffingOption.None),\n              // Ignore only style changes for element #password\n              SelectiveRegion.DisabledFor(passwordElement, DiffingOption.Style),\n          },\n      });\n'})}),"\n",(0,i.jsx)(n.h3,{id:"capturing-the-dom-snapshot",children:"Capturing the DOM snapshot"}),"\n",(0,i.jsxs)(n.p,{children:["Sauce Visual does not capture dom snapshot by default. It can be changed when creating the ",(0,i.jsx)(n.code,{children:"VisualClient"})," object."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"VisualClient = VisualClient.Create(Driver, Region.UsWest1, sauceUsername, sauceAccessKey);\nVisualClient.CaptureDom = true;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"full-page-screenshots",children:"Full page screenshots"}),"\n",(0,i.jsxs)(n.p,{children:["By default, only the current viewport is captured when ",(0,i.jsx)(n.code,{children:".VisualCheck"})," is used. You can opt in to capturing the entire page by using the ",(0,i.jsx)(n.code,{children:"FullPage"})," option. It will capture everything by scrolling and stitching multiple screenshots together.\nAdditionally, you have the option to configure full page settings using the ",(0,i.jsx)(n.code,{children:"FullPageConfig"})," option."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["It's recommended to use the ",(0,i.jsx)(n.code,{children:"HideAfterFirstScroll"})," option for fixed or sticky position elements such as sticky headers or consent banners."]})}),"\n",(0,i.jsx)(n.p,{children:"Options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DelayAfterScrollMs"}),": Delay in ms after scrolling and before taking screenshots. The default value is 0. We recommend using this option for lazy loading content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DisableCSSAnimation"}),": Disable CSS animations and the input caret in the app. The default value is true."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HideAfterFirstScroll"}),": One or more CSS selectors that we should remove from the page after the first scroll. Useful for hiding fixed elements such as headers, cookie banners, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HideScrollBars"}),": Hide all scrollbars in the app. The default value is true."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ScrollLimit"}),": Limit the number of screenshots taken for scrolling and stitching. The default value is 10. The value needs to be between 1 and 10."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'await VisualClient.VisualCheck("C# full page",\n    new VisualCheckOptions()\n    {\n        FullPage = true,\n    });\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'await VisualClient.VisualCheck("C# full page config",\n    new VisualCheckOptions()\n    {\n        FullPage = true,\n        FullPageConfig = new FullPageConfig()\n            {\n                DelayAfterScrollMs = 500,\n                DisableCSSAnimation = false,\n                HideAfterFirstScroll = new List<string> { ".header" },\n                HideScrollBars = false,\n                ScrollLimit = 5\n            }\n    });\n'})}),"\n",(0,i.jsx)(c.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.p,{children:"Two examples are available:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["An example project ",(0,i.jsx)(n.a,{href:"https://github.com/saucelabs/visual-examples/tree/main/dotnet-nunit",children:"using NUnit"})]}),"\n",(0,i.jsxs)(n.li,{children:["An example project ",(0,i.jsx)(n.a,{href:"https://github.com/saucelabs/visual-examples/tree/main/dotnet-xunit",children:"using xUnit"})]}),"\n"]})]})}function j(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},19365:(e,n,s)=>{s.d(n,{A:()=>r});s(96540);var i=s(34164);const t={tabItem:"tabItem_Ymn6"};var a=s(74848);function r(e){let{children:n,hidden:s,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(t.tabItem,r),hidden:s,children:n})}},11470:(e,n,s)=>{s.d(n,{A:()=>w});var i=s(96540),t=s(34164),a=s(23104),r=s(56347),l=s(205),c=s(57485),o=s(31682),d=s(70679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:i,default:t}}=e;return{value:n,label:s,attributes:i,default:t}}))}(s);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:s}=e;const t=(0,r.W6)(),a=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,c.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,a=h(e),[r,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=s.find((e=>e.default))??s[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[o,u]=g({queryString:s,groupId:t}),[x,f]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,a]=(0,d.Dv)(s);return[t,(0,i.useCallback)((e=>{s&&a.set(e)}),[s,a])]}({groupId:t}),m=(()=>{const e=o??x;return p({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{m&&c(m)}),[m]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,a]),tabValues:a}}var f=s(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=s(74848);function v(e){let{className:n,block:s,selectedValue:i,selectValue:r,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),d=e=>{const n=e.currentTarget,s=c.indexOf(n),t=l[s].value;t!==i&&(o(n),r(t))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=c.indexOf(e.currentTarget)+1;n=c[s]??c[0];break}case"ArrowLeft":{const s=c.indexOf(e.currentTarget)-1;n=c[s]??c[c.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":s},n),children:l.map((e=>{let{value:n,label:s,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...a,className:(0,t.A)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":i===n}),children:s??n},n)}))})}function b(e){let{lazy:n,children:s,selectedValue:a}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",m.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(96540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);