"use strict";(self.webpackChunksauce_docs=self.webpackChunksauce_docs||[]).push([[7847],{10541:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var i=a(74848),r=a(28453),t=(a(86025),a(11470)),s=a(19365);const l={id:"options",title:"Begin with Options",sidebar_label:"Begin with Options"},o=void 0,d={id:"testfairy/sdk/options",title:"Begin with Options",description:"TestFairy requires that you call begin to start recording your sessions. However, developers can override the build settings to determine what is enabled during a session recording.",source:"@site/docs/testfairy/sdk/options.md",sourceDirName:"testfairy/sdk",slug:"/testfairy/sdk/options",permalink:"/sauce-docs/pr-preview/pr-2911/testfairy/sdk/options",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/sauce-docs/edit/main/docs/testfairy/sdk/options.md",tags:[],version:"current",lastUpdatedBy:"Alex Plischke",lastUpdatedAt:1724800332e3,frontMatter:{id:"options",title:"Begin with Options",sidebar_label:"Begin with Options"},sidebar:"docs",previous:{title:"Adding the TestFairy SDK",permalink:"/sauce-docs/pr-preview/pr-2911/testfairy/sdk/adding-tf-sdk"},next:{title:"Logging",permalink:"/sauce-docs/pr-preview/pr-2911/testfairy/sdk/logging"}},c={},p=[{value:"Crash Reporting",id:"crash-reporting",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Code Example",id:"code-example",level:4},{value:"Video Recording",id:"video-recording",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Code Example",id:"code-example-1",level:4},{value:"Recorded Metrics",id:"recorded-metrics",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Code Example",id:"code-example-2",level:4},{value:"Max Session Length",id:"max-session-length",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Code Example",id:"code-example-3",level:4},{value:"Feedback Form",id:"feedback-form",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"Code Example",id:"code-example-4",level:4},{value:"Crash Reporting",id:"crash-reporting-1",level:3},{value:"Syntax",id:"syntax-5",level:4},{value:"Code Example",id:"code-example-5",level:4},{value:"Video Recording",id:"video-recording-1",level:3},{value:"Syntax",id:"syntax-6",level:4},{value:"Code Example",id:"code-example-6",level:4},{value:"Recorded Metrics",id:"recorded-metrics-1",level:3},{value:"Syntax",id:"syntax-7",level:4},{value:"Code Example",id:"code-example-7",level:4},{value:"Max Session Length",id:"max-session-length-1",level:3},{value:"Syntax",id:"syntax-8",level:4},{value:"Code Example",id:"code-example-8",level:4},{value:"Feedback Form",id:"feedback-form-1",level:3},{value:"Syntax",id:"syntax-9",level:4},{value:"Code Example",id:"code-example-9",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["TestFairy requires that you call ",(0,i.jsx)(n.code,{children:"begin"})," to start recording your sessions. However, developers can override the build settings to determine what is enabled during a session recording."]}),"\n",(0,i.jsx)(n.p,{children:"Some commonly used options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Crash Reporting"}),"\n",(0,i.jsx)(n.li,{children:"Video Recording"}),"\n",(0,i.jsx)(n.li,{children:"Recorded Metrics"}),"\n",(0,i.jsx)(n.li,{children:"Max Session Length"}),"\n",(0,i.jsx)(n.li,{children:"Feedback Form"}),"\n"]}),"\n",(0,i.jsxs)(t.A,{groupId:"platform",defaultValue:"android",values:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],children:[(0,i.jsxs)(s.A,{value:"android",children:[(0,i.jsx)(n.h3,{id:"crash-reporting",children:"Crash Reporting"}),"TestFairy provides a means of capturing and recording stack traces if your application crashes. Stack traces can be vital to understanding any underlying bugs in your app. However, some apps may want to disable TestFairy's crash handling. Invoke ",(0,i.jsx)(n.code,{children:"enableCrashHandler"})," or ",(0,i.jsx)(n.code,{children:"disableCrashHandler"})," before calling ",(0,i.jsx)(n.code,{children:"begin"}),".","Once you enable the TestFairy crash handler, it cannot be disabled unless the app is restarted.",(0,i.jsx)(n.h4,{id:"syntax",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"TestFairy.enableCrashHandler();\nTestFairy.disableCrashHandler();\n"})}),(0,i.jsx)(n.h4,{id:"code-example",children:"Code Example"}),"In the following example, the TestFairy crash handler will be disabled.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import com.testfairy.TestFairy;\n\npublic class MyApplication extends Application {\n @Override\n public void onCreate() {\n super.onCreate();\n\n TestFairy.disableCrashHandler();\n TestFairy.begin(this, "<app token>");\n }\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"video-recording",children:"Video Recording"}),"TestFairy provides an option to enable or disable video recording and control the recording parameters. Invoke ",(0,i.jsx)(n.code,{children:"disableVideo"})," or ",(0,i.jsx)(n.code,{children:"enableVideo"})," before ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TestFairy.disableVideo();\nTestFairy.enableVideo("<policy>", "<quality>", <frames per second>);\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/android/index.html",children:"Class Reference"})," for more information on ",(0,i.jsx)(n.code,{children:"policy"})," and ",(0,i.jsx)(n.code,{children:"quality"})," values.",(0,i.jsx)(n.h4,{id:"code-example-1",children:"Code Example"}),"In the following example, video only records when wifi is available. A high-quality video is recorded every 2 seconds.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import com.testfairy.TestFairy;\n\npublic class MyApplication extends Application {\n @Override\n public void onCreate() {\n super.onCreate();\n\n TestFairy.enableVideo("wifi", "high", 2.0);\n TestFairy.begin(this, "<app token>");\n }\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"recorded-metrics",children:"Recorded Metrics"}),"TestFairy can collect several different metrics from your app. Developers can override the metrics defined in their app's build settings.","Developers can call ",(0,i.jsx)(n.code,{children:"enableMetric"})," or ",(0,i.jsx)(n.code,{children:"disableMetric"})," before invoking ",(0,i.jsx)(n.code,{children:"begin"})," with the metric they wish to enable or disable recording.",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Any metric that is enabled or disabled override the settings set in your app's build settings."})}),(0,i.jsx)(n.h4,{id:"syntax-2",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TestFairy.enableMetric("<metric>");\nTestFairy.disableMetric("<metric>");\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/android/index.html",children:"Class Reference"})," for more information on which metric can be passed.",(0,i.jsx)(n.h4,{id:"code-example-2",children:"Code Example"}),"In the following snippet, the CPU metric will be recorded, and the Memory metric will not be recorded, regardless of what's set in the build settings.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import com.testfairy.TestFairy;\n\npublic class MyApplication extends Application {\n @Override\n public void onCreate() {\n super.onCreate();\n\n TestFairy.enableMetric("cpu");\n TestFairy.disableMetric("memory");\n TestFairy.begin(this, "<app token>");\n }\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"max-session-length",children:"Max Session Length"}),"TestFairy only records for a fixed period. Developers can override the maximum recording period by calling ",(0,i.jsx)(n.code,{children:"setMaxSessionLength"})," before calling ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The value passed into this method must be less than or equal to the value defined in the build settings. A value larger than the one in the build settings will be ignored."})}),(0,i.jsx)(n.h4,{id:"syntax-3",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"TestFairy.setMaxSessionLength(<session length in seconds>);\n"})}),(0,i.jsx)(n.h4,{id:"code-example-3",children:"Code Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import com.testfairy.TestFairy;\n\npublic class MyApplication extends Application {\n @Override\n public void onCreate() {\n super.onCreate();\n\n TestFairy.setMaxSessionLength(10 * 60); // Record for 10 minutes\n TestFairy.begin(this, "<app token>");\n }\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"feedback-form",children:"Feedback Form"}),"TestFairy provides an option to enable or disable feedback collection. Invoke ",(0,i.jsx)(n.code,{children:"disableFeedbackForm"})," or ",(0,i.jsx)(n.code,{children:"enableFeedbackForm"})," before ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.h4,{id:"syntax-4",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TestFairy.disableFeedbackForm();\nTestFairy.enableFeedbackForm("<method>");\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/android/index.html",children:"Class Reference"})," for more information on values for ",(0,i.jsx)(n.code,{children:"method"}),".",(0,i.jsx)(n.h4,{id:"code-example-4",children:"Code Example"}),"In the following example, feedback will be enabled when the device is shaken.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import com.testfairy.TestFairy;\n\npublic class MyApplication extends Application {\n @Override\n public void onCreate() {\n super.onCreate();\n\n TestFairy.enableFeedbackForm("shake");\n TestFairy.begin(this, "<app token>");\n }\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),"."]}),(0,i.jsxs)(s.A,{value:"ios",children:[(0,i.jsx)(n.h3,{id:"crash-reporting-1",children:"Crash Reporting"}),"TestFairy provides a means of capturing and recording stack traces if your application crashes. Stack traces can be vital to understanding any underlying bugs in your app. However, some apps may want to disable TestFairy's crash handling. Invoke ",(0,i.jsx)(n.code,{children:"enableCrashHandler"})," or ",(0,i.jsx)(n.code,{children:"disableCrashHandler"})," before calling ",(0,i.jsx)(n.code,{children:"begin"}),".","Once you enable the TestFairy crash handler, it cannot be disabled unless the app is restarted.",(0,i.jsx)(n.h4,{id:"syntax-5",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"[TestFairy enableCrashHandler];\n[TestFairy disableCrashHandler];\n"})}),(0,i.jsx)(n.h4,{id:"code-example-5",children:"Code Example"}),"In the following example, the TestFairy crash handler will be disabled.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [TestFairy disableCrashHandler];\n [TestFairy begin:@"<app token>"];\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"video-recording-1",children:"Video Recording"}),"TestFairy provides an option to enable or disable video recording and control the recording parameters. Invoke ",(0,i.jsx)(n.code,{children:"disableVideo"})," or ",(0,i.jsx)(n.code,{children:"enableVideo"})," before ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.h4,{id:"syntax-6",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'[TestFairy disableVideo];\n[TestFairy enableVideo:@"<policy>" quality:@"<quality>" framesPerSecond:<frames per second>];\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/ios/Classes/TestFairy.html",children:"Class Reference"})," for more information on ",(0,i.jsx)(n.code,{children:"policy"})," and ",(0,i.jsx)(n.code,{children:"quality"})," values.",(0,i.jsx)(n.h4,{id:"code-example-6",children:"Code Example"}),"In the following example, the video will only be recorded when wifi is available. A high-quality video will be recorded every 2 seconds.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [TestFairy enableVideo:@"wifi" quality:@"high" framesPerSecond:2.0];\n [TestFairy begin: @"<app token>"];\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"recorded-metrics-1",children:"Recorded Metrics"}),"TestFairy can collect several different metrics from your app. Developers can override the metrics defined in their app's build settings.","Developers can call ",(0,i.jsx)(n.code,{children:"enableMetric"})," or ",(0,i.jsx)(n.code,{children:"disableMetric"})," before invoking ",(0,i.jsx)(n.code,{children:"begin"})," with the metric they wish to enable or disable recording.",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Any metric that is enabled or disabled will override the settings set in your app's build settings."})}),(0,i.jsx)(n.h4,{id:"syntax-7",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'[TestFairy enableMetric:@"<metric>"];\n[TestFairy disableMetric:@"<metric>"];\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/ios/Classes/TestFairy.html",children:"Class Reference"})," for more information on which metric can be passed.",(0,i.jsx)(n.h4,{id:"code-example-7",children:"Code Example"}),"In the following snippet, the CPU metric will be recorded, and the Memory metric will not be recorded, regardless of what's set in the build settings.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [TestFairy enableMetric:@"cpu"];\n [TestFairy disableMetric:@"memory"];\n [TestFairy begin: @"<app token>"];\n // ...\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"max-session-length-1",children:"Max Session Length"}),"TestFairy only records for a fixed period. Developers can override the maximum recording period by calling ",(0,i.jsx)(n.code,{children:"setMaxSessionLength"})," before calling ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The value passed into this method must be less than or equal to the value defined in the build settings. A value larger than the one in the build settings will be ignored."})}),(0,i.jsx)(n.h4,{id:"syntax-8",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"[TestFairy setMaxSessionLength:<session length in seconds>];\n"})}),(0,i.jsx)(n.h4,{id:"code-example-8",children:"Code Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [TestFairy setMaxSessionLength:(10 * 60)]; // Record for 10 minutes\n [TestFairy begin:@"<app token>"];\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),".",(0,i.jsx)(n.h3,{id:"feedback-form-1",children:"Feedback Form"}),"TestFairy provides an option to enable or disable feedback collection. Invoke ",(0,i.jsx)(n.code,{children:"disableFeedbackForm"})," or ",(0,i.jsx)(n.code,{children:"enableFeedbackForm"})," before ",(0,i.jsx)(n.code,{children:"begin"}),".",(0,i.jsx)(n.h4,{id:"syntax-9",children:"Syntax"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'[TestFairy disableFeedbackForm];\n[TestFairy enableFeedbackForm:@"<method>"];\n'})}),"Refer to the ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/reference/ios/Classes/TestFairy.html",children:"Class Reference"})," for more information on values for ",(0,i.jsx)(n.code,{children:"method"}),".",(0,i.jsx)(n.h4,{id:"code-example-9",children:"Code Example"}),"In the following example, feedback will be enabled when the device is shaken.",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [TestFairy enableFeedbackForm:@"shake|screenshot"];\n [TestFairy begin: @"<app token>"];\n}\n'})}),"Once logged in, your app token is available from your ",(0,i.jsx)(n.a,{href:"https://app.testfairy.com/settings#apptoken",children:"account preferences"}),"."]})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},19365:(e,n,a)=>{a.d(n,{A:()=>s});a(96540);var i=a(18215);const r={tabItem:"tabItem_Ymn6"};var t=a(74848);function s(e){let{children:n,hidden:a,className:s}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,s),hidden:a,children:n})}},11470:(e,n,a)=>{a.d(n,{A:()=>F});var i=a(96540),r=a(18215),t=a(23104),s=a(56347),l=a(205),o=a(57485),d=a(31682),c=a(89466);function p(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:a,attributes:i,default:r}}=e;return{value:n,label:a,attributes:i,default:r}}))}(a);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function u(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:a}=e;const r=(0,s.W6)(),t=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(t),(0,i.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})}),[t,r])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,t=h(e),[s,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=a.find((e=>e.default))??a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:t}))),[d,p]=m({queryString:a,groupId:r}),[x,b]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,t]=(0,c.Dv)(a);return[r,(0,i.useCallback)((e=>{a&&t.set(e)}),[a,t])]}({groupId:r}),g=(()=>{const e=d??x;return u({value:e,tabValues:t})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!u({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),b(e)}),[p,b,t]),tabValues:t}}var b=a(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=a(74848);function f(e){let{className:n,block:a,selectedValue:i,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),c=e=>{const n=e.currentTarget,a=o.indexOf(n),r=l[a].value;r!==i&&(d(n),s(r))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:t}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:p,onClick:c,...t,className:(0,r.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":i===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:r}=e;const t=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=x(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,y.jsx)(f,{...e,...n}),(0,y.jsx)(v,{...e,...n})]})}function F(e){const n=(0,b.A)();return(0,y.jsx)(j,{...e,children:p(e.children)},String(n))}},28453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>l});var i=a(96540);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);